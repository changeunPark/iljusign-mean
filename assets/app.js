angular.module("app",["ui.router","ui.bootstrap","menuControllers","userControllers","mainControllers","emailControllers","managementControllers","typeControllers","orderControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),a.hashPrefix(""),a.html5Mode(!0),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/header.html"},content:{templateUrl:"/main/form.html"},"menu@app":{templateUrl:"/menues/mainMenu.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"},"account@app":{templateUrl:"/main/account.html"},"contents@app":{templateUrl:"/main/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("app.user",{url:"user",views:{"contents@app":{templateUrl:"/users/partial/user.html"}}}).state("app.commerceDetail",{url:"commerce-detail",views:{"contents@app":{templateUrl:"/users/partial/commerceDetail.html"}}}).state("app.basket",{url:"basket",views:{"contents@app":{templateUrl:"/users/partial/basket.html",controller:"basketCtrl",controllerAs:"basket"}}}).state("app.category",{url:"category=:type",views:{"subMenu@app":{templateUrl:"/menues/subMenu.html"},"contents@app":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.show",{url:"/item:item_id",views:{"contents@app":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.makeOrder",{url:"makeOrder",views:{"contents@app":{templateUrl:"/order/makeOrder.html",controller:"readOrderCtrl",controllerAs:"readOrder"}}}).state("app.confirmOrder",{url:"confirmOrder",views:{"contents@app":{templateUrl:"/order/confirmOrder.html",controller:"readOrderCtrl",controllerAs:"readOrderCtrl"}}}).state("app.board",{url:"board",views:{"contents@app":{templateUrl:"/categoryes/board/form.html"}}}).state("app.management",{url:"management",views:{"content@":{templateUrl:"/management/form.html"},"menu@app.management":{templateUrl:"/management/menu.html"}}}).state("app.management.category",{url:"category",views:{"contents@app.management":{templateUrl:"/management/partial/category.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"}}}).state("app.management.items",{url:"/items",views:{"contents@app.management":{templateUrl:"/management/partial/items.html",controller:"itemsCtrl",controllerAs:"items"}}}).state("app.management.items.update",{url:"/update:item_type",views:{"contents@app.management":{templateUrl:"/management/partial/type/update.html",controller:"updateTypeCtrl",controllerAs:"updateType"}}}).state("app.management.items.updateItem",{url:"/update/item:item_id",views:{"contents@app.management":{templateUrl:"/management/partial/item/update.html",controller:"updateItemCtrl",controllerAs:"updateItem"}}}).state("app.management.items.readItem",{url:":item_id",views:{"contents@app.management":{templateUrl:"/management/partial/item/read.html",controller:"readItemCtrl",controllerAs:"readItem"}}}).state("app.management.bannerUpload",{url:"/bannerUpload",views:{"contents@app.management":{templateUrl:"/management/partial/bannerUpload.html"}}}).state("app.management.orderStatus",{url:"/orderStatus",views:{"contents@app.management":{templateUrl:"/management/partial/orderStatus.html"}}}).state("app.management.members",{url:"/members",views:{"contents@app.management":{templateUrl:"/management/partial/members.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/users/register/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/users/register/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}})}]),app.run(["$rootScope","User","$state",function(e,t,a){e.$on("$stateChangeStart",function(e,t,a,r,n,s){}),e.$on("$stateChangeError",function(e,t,r,n,s,i){a.go("app")})}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var n=e(r.fileModel),s=n.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("adminServices",[]).factory("Admin",["$http",function(e){return adminFactory={},adminFactory.deleteItem=function(t){return e.delete("/api/item/"+t)},adminFactory.deleteType=function(t){return e.delete("/api/itemManagement/"+t)},adminFactory.readUpdateType=function(t){return e.get("/api/itemManagement/"+t)},adminFactory.updateUpdateType=function(t){return e.put("/api/itemManagement",t)},adminFactory.createType=function(t){return e.post("/api/item_type",t)},adminFactory.readType=function(){return e.get("/api/item_type")},adminFactory.readAristCrop=function(t){return e.post("/api/createCropImage",t)},adminFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},adminFactory.createItem=function(t){return e.post("/api/item",t)},adminFactory.readItems=function(){return e.get("/api/item")},adminFactory.readItem=function(t){return e.get("/api/item/"+t)},adminFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return console.log(e),t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("menuServices",[]).factory("Menu",["$http",function(e){return menuFactory={},menuFactory.deleteMenu=function(t){return e.delete("/api/menu/"+t)},menuFactory.updateMenu=function(t){return e.put("/api/menu/",t)},menuFactory.createMenu=function(t){return e.post("/api/menu",t)},menuFactory.readMainMenu=function(){return e.get("/api/menu")},menuFactory.readSubMenu=function(t){return e.get("/api/menu/"+t)},menuFactory}]),angular.module("orderServices",[]).factory("Order",["$http",function(e){return orderFactory={},orderFactory.createBasket=function(t){return e.post("/api/basket",t)},orderFactory.createOrder=function(t){return e.post("/api/makeOrder",t)},orderFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.getPermission=function(){return e.get("/api/permission")},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,n,s,i,o,l,d){var u=this;u.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),n.$on("$stateChangeStart",function(){m?e.isLoggedIn()?(u.isLoggedIn=!0,u.loadme=!0,e.getUser().then(function(e){u.user=e.data,u.loadme=!0,l.getPermission().then(function(e){e.data.success?"admin"===e.data.permission?(u.authorized=!0,u.loadme=!0):"artist"===e.data.permission?(u.permission=!0,u.loadme=!0):(u.permission=!1,u.authorized=!1,u.loadme=!0):(u.permission=!1,u.authorized=!1,u.loadme=!0)})})):(u.user=!1,u.isLoggedIn=!1,u.loadme=!0):m()});var m=function(){if(e.isLoggedIn()){u.checkSession=!0;var t=o(function(){var e=i.localStorage.getItem("token");if(null===e)o.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(i.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(c("expired"),o.cancel(t))}},2e3)}};m(),u.renewSession=function(){u.choiceMade=!0,l.renewSession(u.user.username).then(function(e){e.data.success?(d.setToken(e.data.token),m(),p("expired")):(u.ModalBody=e.data.message,p("expired"))})},u.endSession=function(){u.choiceMade=!0,p("expired"),t(function(){c("logout")},500)};var c=function(a){u.choiceMade=!1,u.modalHeader=void 0,u.modalBody=void 0,u.hideButton=!1,"expired"===a?(u.modalHeader="Timeout Warning",u.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(u.hideButton=!0,u.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),u.isLoggedIn=!1,p("logout"),r.reload()},1e3)):"login"===a&&$("#login").modal({backdrop:"static"}),t(function(){u.choiceMade||p("logout")},2e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e&&$("#login").modal("hide")};this.doLogin=function(a,n){u.errorMsg=!1,u.expired=!1,u.disabled=!0,n?e.login(u.loginData).then(function(e){e.data.success?(u.disabled=!0,u.successMsg=e.data.message,t(function(){p("login"),u.loginData=null,u.isLoggedIn=!0,m(),r.reload()},1e3)):e.data.expired?(u.expired=!0,u.disabled=!0,u.errorMsg=e.data.message):(u.disabled=!1,u.errorMsg=e.data.message)}):(u.disabled=!1,u.loading=!1,u.errorMsg="올바른 정보를 입력해주세요.")},u.login=function(){u.successMsg=!1,u.errorMsg=!1,u.disabled=!1,c("login")},u.logout=function(){c("logout")},u.resend=function(){p("login"),t(function(){r.go("resend"),u.expired=!1},500)},u.resetusername=function(){p("login"),t(function(){r.go("resetusername")},500)},u.resetpassword=function(){p("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("managementControllers",["adminServices","menuServices","orderServices"]).controller("updateTypeCtrl",["$stateParams","Menu","Admin","$state",function(e,t,a,r){var n=this,s=e.item_type;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readUpdateType(s).then(function(e){n.errorMsg=!1,e.data.success?(t.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.updataData=e.data.result,n.data.selectedOption={id:n.updataData.category_id}):n.errorMsg=e.data.message}),this.updateType=function(e){n.updateData=e,n.updateData.category_id=n.data.selectedOption.id,n.updateData.name=n.data.selectedOption.name,a.updateUpdateType(n.updateData).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})}}]).controller("readTypeCtrl",["Admin","$state","$window","Menu",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.deleteType=function(a){n.errorMsg=!1;var r=a.item_type;e.deleteType(r).then(function(e){e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},e.readType().then(function(e){if(e.data.success){r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(a=0;a<t.length;a++)n.data.availableOptions[a+1]={name:t[a].name,id:t[a].category_id}}else n.errorMsg=e.data.message}),n.typeDatas=e.data.result;for(var t=[],a=0;a<e.data.result.length;a++)t[a]={kind:n.typeDatas[a].kind.split(","),price:n.typeDatas[a].price.split(",")},n.typeDatas[a].kind=t[a].kind,n.typeDatas[a].price=t[a].price}else n.errorMsg=e.data.message})}]).controller("createTypeCtrl",["Admin","$state","Menu","$window",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),this.createType=function(a){n.errorMsg=!1,n.typeData={category:n.data.selectedOption.id,type_description:a.type,kind:n.type_tiny.toString(),price:n.type_price.toString()},e.createType(n.typeData).then(function(e){e.data.success?(n.success=e.data.message,t.reload()):n.errorMsg=e.data.message})},n.kindList=[],n.type_tiny=[],n.type_price=[],this.addLine=function(e){e?null===e.kindValue||void 0===e.kindValue||""===e.kindValue?r.alert("옵션명을 입력해주세요."):null===e.kindPrice||void 0===e.kindPrice||""===e.kindPrice?r.alert("옵션 가격을 입력해주세요."):(n.kindList.push({kind:e.kindValue,price:e.kindPrice}),n.type_tiny.push(e.kindValue),n.type_price.push(e.kindPrice)):r.alert("정확한 값을 입력해주세요.")}}]).controller("itemsCtrl",["Admin","$state",function(e,t){var a=this;e.readItems().then(function(e){a.errorMsg=!1,e.data.success?(a.itemsData=e.data.result,console.log(a.itemsData)):a.errorMsg=e.data.message}),this.deleteItem=function(r){a.errorMsg=!1;var n=r.item_id;e.deleteItem(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]).controller("readItemCtrl",["Admin","$stateParams","$scope","Order","$window",function(e,t,a,r,n){var s=this,o=t.item_id;s.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},s.amount=1,e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(","),a=e.data.result.price.split(","),r=[];for(i=0;i<a.length;i++)r[i]=Number(a[i]);for(s.itemData=e.data.result,s.data.selectedOption={id:r[0]},i=0;i<r.length;i++)s.data.availableOptions[i+1]={name:t[i],id:r[i]}}else s.errorMsg=e.data.message})}]).controller("updateItemCtrl",["Admin","$stateParams","$scope","$http","$timeout","$state","$window","Menu",function(e,t,a,r,n,s,o,l){function d(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var u=this,m=t.item_id;u.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},u.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},l.readMainMenu().then(function(e){if(u.errorMsg=!1,e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)u.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else u.errorMsg=e.data.message}),this.readMenu=function(e){if(u.errorMsg=!1,u.readMenuStatus=!1,0===e.id)o.alert("카테고리를 선택해주세요.");else{var t=e.id;r.get("/api/menu/"+t).then(function(e){if(e.data.success)if(0===e.data.result.length)u.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},o.alert("등록된 상품이 없습니다.");else{u.readMenuStatus=!0,u.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)u.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}else u.errorMsg=e.data.message})}},e.readItem(m).then(function(e){e.data.success?(u.itemData=e.data.result,u.data.selectedOption={id:u.itemData.category_id}):u.errorMsg=e.data.message}),this.updateItem=function(e){if(u.errorMsg=!1,u.readMenuStatus)if(0===e.item_type||"0"===e.item_type)o.alert("상품 분류를 선택해주세요.!");else{var t={type:e.item_type,name:e.name};r.put("/api/item/"+m,t).then(function(e){e.data.success?(u.successMsg=e.data.message,s.reload()):u.errorMsg=e.data.message})}else updateData2={type:u.itemData.item_type_id,name:e.name},r.put("/api/item/"+m,updateData2).then(function(e){e.data.success?(u.successMsg=e.data.message,s.reload()):u.errorMsg=e.data.message})},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),u.mainThumbnail={},u.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),u.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),u.mainPhoto=!1,u.disabled=!0;var e=new FormData;e.append("myfile",u.file.upload),r.post("/api/createPhotoImage/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),u.mainPhoto=!0,u.disabled=!1;var t={image:e.data.item_path};r.put("/api/item/"+m,t).then(function(e){e.data.success,console.log(e.data.message)}),u.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),u.disabled=!1,u.file={}})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),u.explainThumbnail={},u.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),u.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),u.explainPhoto=!1,u.disabled=!0;var e=new FormData;e.append("myfile",u.file.upload),r.post("/api/createPhotoExplain/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),u.explainPhoto=!0,u.disabled=!1;var t={explain:e.data.item_path};r.put("/api/item/"+m,t).then(function(e){e.data.success,console.log(e.data.message)}),u.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),u.disabled=!1,u.file={}})},u.myImage="",u.myCroppedImage="";var c=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),u.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",c),this.readCropImage=function(t){if(a.$emit("LOAD"),u.thumbnail=!1,u.disabled=!0,""===t.base64Url||null===t.base64Url||void 0===t.base64Url)u.disabled=!1;else{a.$emit("UNLOAD");var n=d(a.myCroppedImage);e.readAristCrop(n).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),u.thumbnail=!0,u.disabled=!1;var t={thumbnail:e.data.filePath};r.put("/api/item/"+m,t).then(function(e){e.data.success,console.log(e.data.message)})}else a.$emit("UNLOAD"),u.disabled=!1})}}}]).controller("createItemCtrl",["$http","$timeout","$scope","Admin","$state","$window","Menu",function(e,t,a,r,n,s,o){function l(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var d=this;d.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},o.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)d.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else d.errorMsg=e.data.message}),this.readMenu=function(t){if(0===t.id)s.alert("카테고리를 선택해주세요.");else{var a=t.id;e.get("/api/menu/"+a).then(function(e){if(e.data.success)if(0===e.data.result.length)d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},s.alert("등록된 상품이 없습니다.");else{d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)d.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}})}},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),d.mainThumbnail={},d.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),d.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),d.mainPhoto=!1,d.disabled=!0;var t=new FormData;t.append("myfile",d.file.upload),e.post("/api/createPhotoImage/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.mainPhoto=!0,d.disabled=!1,d.mainImagePath=e.data.item_path,d.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),d.disabled=!1,d.file={})})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),d.explainThumbnail={},d.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),d.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),d.explainPhoto=!1,d.disabled=!0;var t=new FormData;t.append("myfile",d.file.upload),e.post("/api/createPhotoExplain/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.explainPhoto=!0,d.disabled=!1,d.explainImagePath=e.data.item_path,d.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),d.disabled=!1,d.file={})})},d.myImage="",d.myCroppedImage="";var u=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),d.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",u),this.readCropImage=function(e){if(a.$emit("LOAD"),d.thumbnail=!1,d.disabled=!0,""===e.base64Url||null===e.base64Url||void 0===e.base64Url)d.disabled=!1;else{a.$emit("UNLOAD");var t=l(a.myCroppedImage);r.readAristCrop(t).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.thumbnail=!0,d.disabled=!1,d.thumbnailPath=e.data.filePath):(a.$emit("UNLOAD"),d.disabled=!1)})}},this.createPhoto=function(e){a.$emit("LOAD"),void 0===e||null===e||""===e?(s.alert("빈칸을 모두 입력해주세요."),d.disabled=!1,a.$emit("UNLOAD")):"0"===d.data2.selectedOption.id?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 분류을 선택해주세요.")):void 0===d.mainImagePath||null===d.mainImagePath||""===d.mainImagePath?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 이미지를 입력해주세요.")):void 0===e.title||null===e.title||""===e.title?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 제목를 입력해주세요.")):void 0===d.explainImagePath||null===d.explainImagePath||""===d.explainImagePath?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 설명 이미지를 업로드해주세요.")):void 0===d.thumbnailPath||null===d.thumbnailPath||""===d.thumbnailPath?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("썸네일 이미지를 업로드해주세요.")):(d.uploadData={title:e.title,type:d.data2.selectedOption.id,thumbnail:d.thumbnailPath,explain:d.explainImagePath,image:d.mainImagePath},r.createItem(d.uploadData).then(function(e){e.data.success?(a.$emit("UNLOAD"),d.disabled=!0,s.alert(e.data.message),n.reload()):(a.$emit("UNLOAD"),d.disabled=!1,s.alert(e.data.message))}))}}]),angular.module("menuControllers",["menuServices"]).controller("mainMenuCtrl",["Menu","$state",function(e,t){var a=this;e.readMainMenu().then(function(e){e.data.success?a.mainMenues=e.data.result:a.errorMsg=e.data.message}),this.createMenu=function(r){if(a.errorMsg=!1,void 0===r)a.errorMsg="올바른 정보를 입력해주세요.";else{var n={name:r.name};e.createMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}},this.update=function(r){a.errorMsg=!1;var n={category_id:r.category_id,name:r.name};console.log(n),e.updateMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})},this.delete=function(r){a.errorMsg=!1;var n=r.category_id;e.deleteMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]),angular.module("orderControllers",[]).controller("readOrderCtrl",["$stateParams","$http","$state","$window",function(e,t,a,r){var n=this;t.get("/api/makeOrder").then(function(e){e.data.success&&(n.orderData=e.data.result)}),this.confirmOrder=function(){a.go("app.confirmOrder")}}]).controller("basketCtrl",["$http","$window",function(e,t){var a=this;a.amount=1,this.plus=function(){a.amount++},this.minus=function(){a.amount<=0?(t.alert("올바른 수량을 입력해주세요."),a.amount=1):a.amount--},e.get("/api/basket").then(function(e){a.errorMsg=!1,e.data.success?a.basketData=e.data.result:a.errorMsg=e.data.message})}]),angular.module("typeControllers",["orderServices"]).controller("getTypeItemsCtrl",["$stateParams","$http",function(e,t){var a=this,r=e.type;t.get("/api/item_type/"+r).then(function(e){e.data.success?a.itemsData=e.data.result:a.errorMsg=e.data.message})}]).controller("getTypeItemCtrl",["Admin","$stateParams","$window","$state","Order",function(e,t,a,r,n){var s=this,o=t.item_id;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},s.amount=1,this.plus=function(){s.amount++},this.minus=function(){s.amount<=0?(a.alert("올바른 수량을 입력해주세요."),s.amount=1):s.amount--},this.createBasket=function(e){var t={item_id:e.item_id,amount:e.amount};n.createBasket(t).then(function(e){e.data.success,a.alert(e.data.message)})},this.createOrder=function(e){var t={item_id:o,amount:e.amount,kindOf:e.kindOf.name,item_type_id:e.item_type_id};n.createOrder(t).then(function(e){e.data.success?(s.successMsg=e.data.message,r.go("app.makeOrder")):s.errorMsg=e.data})},e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(",");for(s.itemData=e.data.result,i=0;i<t.length;i++)s.data.availableOptions[i+1]={name:t[i],id:i+1}}else s.errorMsg=e.data.message})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var n=this;t.activeAccount(e.token).then(function(e){n.successMsg=!1,n.errorMsg=!1,e.data.success?(n.disabled=!0,n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(n.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,n){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,i,o){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,i&&o?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){n.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,n,s){var i=this;this.regStep1=function(e){i.errorMsg=!1,e?e.terms&&e.privacy?(i.successMsg="약관에 성공적으로 동의하셨습니다.",i.disabled=!0,s.go("registerStep2")):(i.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",i.disabled=!1):i.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,o){i.errorMsg=!1,i.disabled=!0,t&&o?r.create(i.regData).then(function(e){e.data.success?(i.disabled=!0,i.successMsg=e.data.message,n.login(i.regData).then(function(e){e.data.success?(i.disabled=!0,i.successMsg=e.data.message,a(function(){s.go("app")},1e3)):e.data.expired?(i.expired=!0,i.disabled=!0,i.errorMsg=e.data.message):(i.disabled=!1,i.errorMsg=e.data.message)})):(i.disabled=!1,i.errorMsg=e.data.message)}):(i.disabled=!1,i.loading=!1,i.errorMsg="올바른 정보를 입력해주세요.")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlLmpzIiwiZGlyZWN0aXZlcy9maWxlTW9kZWwuanMiLCJkaXJlY3RpdmVzL21hdGNoUGFzc3dvcmQuanMiLCJzZXJ2aWNlcy9hZG1pblNlcnZpY2VzLmpzIiwic2VydmljZXMvYXV0aFNlcnZpY2VzLmpzIiwic2VydmljZXMvbWVudVNlcnZpY2VzLmpzIiwic2VydmljZXMvb3JkZXJTZXJ2aWNlcy5qcyIsInNlcnZpY2VzL3VzZXJTZXJ2aWNlcy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21haW5Db250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21hbmFnZW1lbnRDb250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21lbnVDb250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL29yZGVyQ29udHJvbGxlcnMuanMiLCJjb250b3JvbGxlcnMvbWFpbi90eXBlQ29udHJvbGxlcnMuanMiLCJjb250b3JvbGxlcnMvdXNlci9lbWFpbEN0cmwuanMiLCJjb250b3JvbGxlcnMvdXNlci91c2VyQ3RybC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJGh0dHBQcm92aWRlciIsImludGVyY2VwdG9ycyIsInB1c2giLCJhcHAiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwib3RoZXJ3aXNlIiwiaGFzaFByZWZpeCIsImh0bWw1TW9kZSIsInN0YXRlIiwidXJsIiwidmlld3MiLCJoZWFkZXIiLCJ0ZW1wbGF0ZVVybCIsImNvbnRlbnQiLCJtZW51QGFwcCIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJhY2NvdW50QGFwcCIsImNvbnRlbnRzQGFwcCIsImZvb3RlciIsInN1Yk1lbnVAYXBwIiwiY29udGVudEAiLCJtZW51QGFwcC5tYW5hZ2VtZW50IiwiY29udGVudHNAYXBwLm1hbmFnZW1lbnQiLCJhdXRoZW50aWNhdGVkIiwicnVuIiwiJHJvb3RTY29wZSIsIlVzZXIiLCIkc3RhdGUiLCIkb24iLCJldmVudCIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJvcHRpb25zIiwiZXJyb3IiLCJnbyIsImRpcmVjdGl2ZSIsIiRwYXJzZSIsInJlc3RyaWN0IiwibGluayIsInNjb3BlIiwiZWxlbWVudCIsImF0dHJzIiwicGFyc2VkRmlsZSIsImZpbGVNb2RlbCIsInBhcnNlZGZpbGVTZXR0ZXIiLCJhc3NpZ24iLCJiaW5kIiwiJGFwcGx5IiwiZmlsZXMiLCIkc2NvcGUiLCJkb0NvbmZpcm0iLCJ2YWx1ZXMiLCJjb25maXJtZWQiLCJmb3JFYWNoIiwiZWxlIiwiY29uZmlybSIsIiRvYnNlcnZlIiwibWF0Y2hlcyIsIkpTT04iLCJwYXJzZSIsIm1hdGNoIiwiJHdhdGNoIiwiZmFjdG9yeSIsIiRodHRwIiwiYWRtaW5GYWN0b3J5IiwiZGVsZXRlSXRlbSIsIml0ZW1faWQiLCJkZWxldGUiLCJkZWxldGVUeXBlIiwiaXRlbV90eXBlX2lkIiwicmVhZFVwZGF0ZVR5cGUiLCJpdGVtX3R5cGUiLCJnZXQiLCJ1cGRhdGVVcGRhdGVUeXBlIiwidXBkYXRlRGF0YSIsInB1dCIsImNyZWF0ZVR5cGUiLCJ0eXBlRGF0YSIsInBvc3QiLCJyZWFkVHlwZSIsInJlYWRBcmlzdENyb3AiLCJibG9iIiwiY3JlYXRlQXJpc3RQaG90byIsInBob3RvRGF0YSIsImNyZWF0ZUl0ZW0iLCJpdGVtRGF0YSIsInJlYWRJdGVtcyIsInJlYWRJdGVtIiwiQXV0aFRva2VuIiwiYXV0aEZhY3RvcnkiLCJnZXRVc2VyIiwiZ2V0VG9rZW4iLCIkcSIsInJlamVjdCIsIm1lc3NhZ2UiLCJsb2dpbiIsImxvZ2luRGF0YSIsInRoZW4iLCJkYXRhIiwiY29uc29sZSIsImxvZyIsInNldFRva2VuIiwidG9rZW4iLCJpc0xvZ2dlZEluIiwibG9nb3V0IiwiJHdpbmRvdyIsImF1dGhUb2tlbkZhY3RvcnkiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwicmVtb3ZlSXRlbSIsImdldEl0ZW0iLCJhdXRoSW50ZXJjZXB0b3JzRmFjdG9yeSIsInJlcXVlc3QiLCJoZWFkZXJzIiwibWVudUZhY3RvcnkiLCJkZWxldGVNZW51IiwiY2F0ZWdvcnlfaWQiLCJ1cGRhdGVNZW51IiwiY3JlYXRlTWVudSIsIm1lbnVEYXRhIiwicmVhZE1haW5NZW51IiwicmVhZFN1Yk1lbnUiLCJtYWluTWVudVR5cGUiLCJvcmRlckZhY3RvcnkiLCJjcmVhdGVCYXNrZXQiLCJiYXNrZXREYXRhIiwiY3JlYXRlT3JkZXIiLCJvcmRlckRhdGEiLCJ1c2VyRmFjdG9yeSIsImdldFBlcm1pc3Npb24iLCJjcmVhdGUiLCJyZWdEYXRhIiwiYWN0aXZlQWNjb3VudCIsImNoZWNrQ3JlZGVudGlhbHMiLCJyZXNlbmRMaW5rIiwidXNlcm5hbWUiLCJzZW5kVXNlcm5hbWUiLCJ1c2VyRGF0YSIsInNlbmRQYXNzd29yZCIsInJlc2V0RGF0YSIsInJlc2V0UGFzc3dvcmQiLCJzYXZlUGFzc3dvcmQiLCJyZW5ld1Nlc3Npb24iLCJBdXRoIiwiJHRpbWVvdXQiLCIkbG9jYXRpb24iLCIkaW50ZXJ2YWwiLCJ0aGlzIiwibG9hZG1lIiwibG9hZGluZyIsImNoZWNrU2Vzc2lvbiIsInVzZXIiLCJzdWNjZXNzIiwicGVybWlzc2lvbiIsImF1dGhvcml6ZWQiLCJpbnRlcnZhbCIsImNhbmNlbCIsInNlbGYiLCJwYXJzZUp3dCIsImJhc2U2NFVybCIsInNwbGl0IiwiYmFzZTY0IiwicmVwbGFjZSIsImF0b2IiLCJleHBpcmVUaW1lIiwidGltZVN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImV4cCIsInNob3dNb2RhbCIsImNob2ljZU1hZGUiLCJoaWRlTW9kYWwiLCJNb2RhbEJvZHkiLCJlbmRTZXNzaW9uIiwib3B0aW9uIiwibW9kYWxIZWFkZXIiLCJ1bmRlZmluZWQiLCJtb2RhbEJvZHkiLCJoaWRlQnV0dG9uIiwiJCIsIm1vZGFsIiwiYmFja2Ryb3AiLCJyZWxvYWQiLCJkb0xvZ2luIiwidmFsaWQiLCJlcnJvck1zZyIsImV4cGlyZWQiLCJkaXNhYmxlZCIsInN1Y2Nlc3NNc2ciLCJyZXNlbmQiLCJyZXNldHVzZXJuYW1lIiwicmVzZXRwYXNzd29yZCIsIiRzdGF0ZVBhcmFtcyIsIk1lbnUiLCJBZG1pbiIsImF2YWlsYWJsZU9wdGlvbnMiLCJpZCIsIm5hbWUiLCJzZWxlY3RlZE9wdGlvbiIsInR5cGUiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwidXBkYXRhRGF0YSIsInVwZGF0ZVR5cGUiLCJ0eXBlRGF0YXMiLCJraW5kRGF0YXMiLCJraW5kIiwicHJpY2UiLCJjYXRlZ29yeSIsInR5cGVfZGVzY3JpcHRpb24iLCJ0eXBlX3RpbnkiLCJ0b1N0cmluZyIsInR5cGVfcHJpY2UiLCJraW5kTGlzdCIsImFkZExpbmUiLCJraW5kRGF0YSIsImtpbmRWYWx1ZSIsImFsZXJ0Iiwia2luZFByaWNlIiwiaXRlbXNEYXRhIiwiT3JkZXIiLCJhbW91bnQiLCJ0ZW1wIiwiTnVtYmVyIiwiZGVjb2RlQmFzZTY0SW1hZ2UiLCJkYXRhU3RyaW5nIiwiRXJyb3IiLCJkYXRhMiIsInJlYWRNZW51IiwicmVhZE1lbnVTdGF0dXMiLCJ1cGRhdGVJdGVtIiwidXBkYXRlRGF0YTIiLCJmaWxlIiwibWFpblBob3RvQ2hhbmdlZCIsIiRlbWl0IiwiZmlsZVJlYWRlciIsIkZpbGVSZWFkZXIiLCJyZWFkQXNEYXRhVVJMIiwib25sb2FkIiwiZSIsIm1haW5UaHVtYm5haWwiLCJkYXRhVXJsIiwidGFyZ2V0IiwicmVhZFBob3RvIiwibWFpblBob3RvIiwiZmQiLCJGb3JtRGF0YSIsImFwcGVuZCIsInVwbG9hZCIsInRyYW5zZm9ybVJlcXVlc3QiLCJpZGVudGl0eSIsIkNvbnRlbnQtVHlwZSIsImltYWdlIiwiaXRlbV9wYXRoIiwiZXhwbGFpblBob3RvQ2hhbmdlZCIsImV4cGxhaW5UaHVtYm5haWwiLCJyZWFkUGhvdG9FeHBsYWluIiwiZXhwbGFpblBob3RvIiwiZXhwbGFpbiIsIm15SW1hZ2UiLCJteUNyb3BwZWRJbWFnZSIsImhhbmRsZUZpbGVTZWxlY3QiLCJldnQiLCJjdXJyZW50VGFyZ2V0IiwicmVhZGVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwib24iLCJyZWFkQ3JvcEltYWdlIiwidGh1bWJuYWlsIiwiZmlsZVBhdGgiLCJtYWluSW1hZ2VQYXRoIiwiZXhwbGFpbkltYWdlUGF0aCIsInRodW1ibmFpbFBhdGgiLCJjcmVhdGVQaG90byIsInVwbG9hZERhdGEiLCJ0aXRsZSIsIm1haW5NZW51ZXMiLCJ1cGRhdGUiLCJkZWxldGVEYXRhIiwiY29uZmlybU9yZGVyIiwicGx1cyIsIm1pbnVzIiwia2luZE9mIiwiZW1haWwiLCJoaWRlIiwicmVnU3RlcDEiLCJyZWdTdGVwMiJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQUFDLE9BQUEsT0FDQSxZQUNBLGVBQ0Esa0JBQ0Esa0JBQ0Esa0JBQ0EsbUJBQ0Esd0JBQ0Esa0JBQ0EsbUJBQ0EsY0FDQUMsUUFBQSxnQkFBQSxTQUFBQyxHQUNBQSxFQUFBQyxhQUFBQyxLQUFBLHNCQ1pBLElBQUFDLEtBQUFOLFFBQUFDLE9BQUEsTUFDQUssS0FBQUosUUFBQSxpQkFBQSxxQkFBQSxvQkFBQSxTQUFBSyxFQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxVQUFBLEtBQ0FELEVBQUFFLFdBQUEsSUFDQUYsRUFBQUcsV0FBQSxHQUVBTCxFQUNBTSxNQUFBLE9BQ0FDLElBQUEsSUFDQUMsT0FDQUMsUUFDQUMsWUFBQSx1QkFFQUMsU0FDQUQsWUFBQSxtQkFFQUUsWUFDQUYsWUFBQSx3QkFDQUcsV0FBQSxlQUNBQyxhQUFBLFlBRUFDLGVBQ0FMLFlBQUEsc0JBRUFNLGdCQUNBTixZQUFBLG1CQUVBTyxRQUNBUCxZQUFBLDJCQUlBSixNQUFBLFlBQ0FDLElBQUEsT0FDQUMsT0FDQVEsZ0JBQ0FOLFlBQUEsK0JBSUFKLE1BQUEsc0JBQ0FDLElBQUEsa0JBQ0FDLE9BQ0FRLGdCQUNBTixZQUFBLHlDQUlBSixNQUFBLGNBQ0FDLElBQUEsU0FDQUMsT0FDQVEsZ0JBQ0FO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QSxFQUNBL0wsRUFBQTZMLFNBQUF6RixFQUFBQSxLQUFBSixhQUtBaEcsRUFBQStMLFVBQUEsRUFDQS9MLEVBQUE2TCxTQUFBekYsRUFBQUEsS0FBQUosWUFLQWhHLEVBQUErTCxVQUFBLEVBQ0EvTCxFQUFBdUosU0FBQSxFQUNBdkosRUFBQTZMLFNBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsW1xyXG4gICAgJ3VpLnJvdXRlcicsXHJcbiAgICAndWkuYm9vdHN0cmFwJyxcclxuICAgICdtZW51Q29udHJvbGxlcnMnLFxyXG4gICAgJ3VzZXJDb250cm9sbGVycycsXHJcbiAgICAnbWFpbkNvbnRyb2xsZXJzJyxcclxuICAgICdlbWFpbENvbnRyb2xsZXJzJyxcclxuICAgICdtYW5hZ2VtZW50Q29udHJvbGxlcnMnLFxyXG4gICAgJ3R5cGVDb250cm9sbGVycycsXHJcbiAgICAnb3JkZXJDb250cm9sbGVycycsXHJcbiAgICAndWlDcm9wcGVyJ1xyXG5dKS5jb25maWcoZnVuY3Rpb24oJGh0dHBQcm92aWRlcil7XHJcbiAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnQXV0aEludGVyY2VwdG9ycycpO1xyXG59KTtcclxuIiwidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdhcHAnKTtcclxuYXBwLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcclxuJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xuJGxvY2F0aW9uUHJvdmlkZXIuaGFzaFByZWZpeCgnJyk7XHJcbiRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcclxuXHJcbiAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgICAgIC5zdGF0ZSgnYXBwJywge1xyXG4gICAgICAgICAgICAgdXJsOiAnLycsXHJcbiAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICdoZWFkZXInOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21lbnVlcy9oZWFkZXIuaHRtbCdcclxuICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgJ2NvbnRlbnQnOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vZm9ybS5odG1sJ1xyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAnbWVudUBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWVudWVzL21haW5NZW51Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ21haW5NZW51J1xyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAnYWNjb3VudEBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9hY2NvdW50Lmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9ob21lLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdmb290ZXInOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvZm9vdGVyLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAudXNlcicsIHtcclxuICAgICAgICAgICAgICB1cmw6ICd1c2VyJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcGFydGlhbC91c2VyLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuY29tbWVyY2VEZXRhaWwnLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnY29tbWVyY2UtZGV0YWlsJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcGFydGlhbC9jb21tZXJjZURldGFpbC5odG1sJyxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLmJhc2tldCcsIHtcclxuICAgICAgICAgICAgICB1cmw6ICdiYXNrZXQnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9wYXJ0aWFsL2Jhc2tldC5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2Jhc2tldEN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdiYXNrZXQnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuY2F0ZWdvcnknLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnY2F0ZWdvcnk9OnR5cGUnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnc3ViTWVudUBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21lbnVlcy9zdWJNZW51Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAvLyBjb250cm9sbGVyOiAnc3ViTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAvLyBjb250cm9sbGVyQXM6ICdzdWJNZW51J1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NhdGVnb3J5ZXMvaXRlbXMvZm9ybS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dldFR5cGVJdGVtc0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbXMnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuY2F0ZWdvcnkuc2hvdycsIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvaXRlbTppdGVtX2lkJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9pdGVtcy9pdGVtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZ2V0VHlwZUl0ZW1DdHJsJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnZ2V0VHlwZUl0ZW0nXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFrZU9yZGVyJywge1xyXG4gICAgICAgICAgICAgIHVybDogJ21ha2VPcmRlcicsXHJcbiAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL29yZGVyL21ha2VPcmRlci5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlYWRPcmRlckN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWFkT3JkZXInXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuY29uZmlybU9yZGVyJywge1xyXG4gICAgICAgICAgICAgIHVybDogJ2NvbmZpcm1PcmRlcicsXHJcbiAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL29yZGVyL2NvbmZpcm1PcmRlci5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlYWRPcmRlckN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWFkT3JkZXJDdHJsJ1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLmJvYXJkJywge1xyXG4gICAgICAgICAgICAgIHVybDogJ2JvYXJkJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9ib2FyZC9mb3JtLmh0bWwnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudCcsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJ21hbmFnZW1lbnQnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRAJyA6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvZm9ybS5odG1sJyxcclxuICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICdtZW51QGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9tZW51Lmh0bWwnXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LmNhdGVnb3J5JyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnY2F0ZWdvcnknLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL2NhdGVnb3J5Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ21haW5NZW51Q3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdtYWluTWVudSdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50Lml0ZW1zJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL2l0ZW1zJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9pdGVtcy5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdpdGVtc0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnaXRlbXMnXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50Lml0ZW1zLnVwZGF0ZScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy91cGRhdGU6aXRlbV90eXBlJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC90eXBlL3VwZGF0ZS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd1cGRhdGVUeXBlQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1cGRhdGVUeXBlJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50Lml0ZW1zLnVwZGF0ZUl0ZW0nLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICcvdXBkYXRlL2l0ZW06aXRlbV9pZCcsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvaXRlbS91cGRhdGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAndXBkYXRlSXRlbUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAndXBkYXRlSXRlbSdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLm1hbmFnZW1lbnQuaXRlbXMucmVhZEl0ZW0nLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICc6aXRlbV9pZCcsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvaXRlbS9yZWFkLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlYWRJdGVtQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWFkSXRlbSdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC5iYW5uZXJVcGxvYWQnLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICcvYmFubmVyVXBsb2FkJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9iYW5uZXJVcGxvYWQuaHRtbCdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC5vcmRlclN0YXR1cycsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy9vcmRlclN0YXR1cycsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvb3JkZXJTdGF0dXMuaHRtbCdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC5tZW1iZXJzJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL21lbWJlcnMnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL21lbWJlcnMuaHRtbCdcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVnaXN0ZXJTdGVwMScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy9yZWdpc3Rlci9zdGVwMScsXHJcbiAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZWdDdHJsJyxcclxuICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVnaXN0ZXInLFxyXG4gICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZWdpc3Rlci9yZWdpc3RlclN0ZXAxLmh0bWwnLFxyXG4gICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZWdpc3RlclN0ZXAyJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL3JlZ2lzdGVyL3N0ZXAyJyxcclxuICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnLFxyXG4gICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWdpc3RlcicsXHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyU3RlcDIuaHRtbCcsXHJcbiAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ3Jlc2V0dXNlcm5hbWUnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL3Jlc2V0dXNlcm5hbWUnLFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3Jlc2V0L3VzZXJuYW1lLmh0bWwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd1c2VybmFtZUN0cmwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VzZXJuYW1lJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZXNldHBhc3N3b3JkJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJy9yZXNldHBhc3N3b3JkJyxcclxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZXNldC9wYXNzd29yZC5odG1sJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyOiAncGFzc3dvcmRDdHJsJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdwYXNzd29yZCdcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVzZXQnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL3Jlc2V0Lzp0b2tlbicsXHJcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcmVzZXQvbmV3cGFzc3dvcmQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Jlc2V0Q3RybCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVzZXQnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhY3RpdmF0ZScsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvYWN0aXZhdGUvOnRva2VuJyxcclxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9hY3RpdmF0aW9uL2FjdGl2YXRlLmh0bWwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdlbWFpbEN0cmwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2VtYWlsJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZXNlbmQnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL3Jlc2VuZCcsXHJcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvYWN0aXZhdGlvbi9yZXNlbmQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Jlc2VuZEN0cmwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3Jlc2VuZCdcclxuICAgICAgICAgICAgfSlcclxuXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5pbnRybycsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICdpbnRybycsXHJcbiAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jb21wYW55L2ludHJvLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLnRlcm1zJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJ3Rlcm1zJyxcclxuICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvdGVybXMuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAucHJpdmFjeScsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICdwcml2YWN5JyxcclxuICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvcHJpdmFjeS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxufSk7XG5cbmFwcC5ydW4oZnVuY3Rpb24oJHJvb3RTY29wZSwgVXNlciwgJHN0YXRlKXtcbiAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN0YXJ0JywgIGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zLCBvcHRpb25zKXtcbiAgfSk7XG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VFcnJvcicsICBmdW5jdGlvbihldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcywgZXJyb3Ipe1xuICAgICRzdGF0ZS5nbygnYXBwJyk7XG4gIH0pO1xufSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmRpcmVjdGl2ZSgnZmlsZU1vZGVsJyxmdW5jdGlvbigkcGFyc2Upe1xyXG4gIHJldHVybiB7XHJcbiAgICByZXN0cmljdDogJ0EnLFxyXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKXtcclxuICAgICAgdmFyIHBhcnNlZEZpbGUgPSAkcGFyc2UoYXR0cnMuZmlsZU1vZGVsKTtcclxuICAgICAgdmFyIHBhcnNlZGZpbGVTZXR0ZXIgPSBwYXJzZWRGaWxlLmFzc2lnbjtcclxuXHJcbiAgICAgIGVsZW1lbnQuYmluZCgnY2hhbmdlJyxmdW5jdGlvbigpe1xyXG4gICAgICAgIHNjb3BlLiRhcHBseShmdW5jdGlvbigpe1xyXG4gICAgICAgICAgcGFyc2VkZmlsZVNldHRlcihzY29wZSwgZWxlbWVudFswXS5maWxlc1swXSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmRpcmVjdGl2ZSgnbWF0Y2gnLGZ1bmN0aW9uKCl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICBjb250cm9sbGVyOmZ1bmN0aW9uKCRzY29wZSl7XHJcbiAgICAgICRzY29wZS5kb0NvbmZpcm0gPSBmdW5jdGlvbih2YWx1ZXMpe1xyXG5cclxuICAgICAgICAkc2NvcGUuY29uZmlybWVkID0gZmFsc2U7XHJcbiAgICAgICAgdmFsdWVzLmZvckVhY2goZnVuY3Rpb24oZWxlKXtcclxuICAgICAgICAgIGlmKCRzY29wZS5jb25maXJtID09IGVsZSl7XHJcbiAgICAgICAgICAgICRzY29wZS5jb25maXJtZWQgPSB0cnVlO1xyXG4gICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAkc2NvcGUuY29uZmlybWVkID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH07XHJcbiAgICB9LFxyXG5cclxuICAgIGxpbms6ZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKXtcclxuICAgICAgYXR0cnMuJG9ic2VydmUoJ21hdGNoJywgZnVuY3Rpb24oKXtcclxuICAgICAgICBzY29wZS5tYXRjaGVzID0gSlNPTi5wYXJzZShhdHRycy5tYXRjaCk7XHJcbiAgICAgICAgc2NvcGUuZG9Db25maXJtKHNjb3BlLm1hdGNoZXMpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHNjb3BlLiR3YXRjaCgnY29uZmlybScsIGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc2NvcGUubWF0Y2hlcyA9IEpTT04ucGFyc2UoYXR0cnMubWF0Y2gpO1xyXG4gICAgICAgIHNjb3BlLmRvQ29uZmlybShzY29wZS5tYXRjaGVzKTtcclxuXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYWRtaW5TZXJ2aWNlcycsW10pXHJcbi5mYWN0b3J5KCdBZG1pbicsIGZ1bmN0aW9uKCRodHRwKXtcclxuICBhZG1pbkZhY3RvcnkgPSB7fTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LmRlbGV0ZUl0ZW0gPSBmdW5jdGlvbihpdGVtX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvaXRlbS8nK2l0ZW1faWQpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5kZWxldGVUeXBlID0gZnVuY3Rpb24oaXRlbV90eXBlX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvaXRlbU1hbmFnZW1lbnQvJytpdGVtX3R5cGVfaWQpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkVXBkYXRlVHlwZSA9IGZ1bmN0aW9uKGl0ZW1fdHlwZSl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2l0ZW1NYW5hZ2VtZW50LycraXRlbV90eXBlKTtcclxuICB9O1xyXG5cclxuICBhZG1pbkZhY3RvcnkudXBkYXRlVXBkYXRlVHlwZSA9IGZ1bmN0aW9uKHVwZGF0ZURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9pdGVtTWFuYWdlbWVudCcsIHVwZGF0ZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5jcmVhdGVUeXBlID0gZnVuY3Rpb24odHlwZURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvaXRlbV90eXBlJywgdHlwZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkVHlwZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2l0ZW1fdHlwZScpO1xyXG4gIH07XHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRBcmlzdENyb3AgPSBmdW5jdGlvbihibG9iKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZUNyb3BJbWFnZScsIGJsb2IpO1xyXG4gIH07XHJcbiAgLy8gQXJ0aXN0LmNyZWF0ZVBob3RvKHBob3RvRGF0YSlcclxuICBhZG1pbkZhY3RvcnkuY3JlYXRlQXJpc3RQaG90byA9IGZ1bmN0aW9uKHBob3RvRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hcnRpc3RQcm9maWxlcycsIHBob3RvRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LmNyZWF0ZUl0ZW0gPSBmdW5jdGlvbihpdGVtRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9pdGVtJywgaXRlbURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkSXRlbXMgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtJyk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRJdGVtID0gZnVuY3Rpb24oaXRlbV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2l0ZW0vJytpdGVtX2lkKTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gYWRtaW5GYWN0b3J5O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2F1dGhTZXJ2aWNlcycsW10pXHJcblxyXG4uZmFjdG9yeSgnQXV0aCcsIGZ1bmN0aW9uKCRodHRwLCBBdXRoVG9rZW4pe1xyXG4gICAgdmFyIGF1dGhGYWN0b3J5ID0ge307XHJcbi8vIEF1dGguZ2V0VXNlcigpO1xyXG4gICAgYXV0aEZhY3RvcnkuZ2V0VXNlciA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGlmKEF1dGhUb2tlbi5nZXRUb2tlbigpKXtcclxuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9tZScpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICRxLnJlamVjdCh7bWVzc2FnZTonVXNlciBoYXMgbm8gdG9rZW4nfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4vLyBBdXRoLmxvZ2luKGxvZ2luRGF0YSk7XHJcbiAgICBhdXRoRmFjdG9yeS5sb2dpbiA9IGZ1bmN0aW9uKGxvZ2luRGF0YSl7XHJcbiAgICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2F1dGhlbnRpY2F0ZScsIGxvZ2luRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICBBdXRoVG9rZW4uc2V0VG9rZW4oZGF0YS5kYXRhLnRva2VuKTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuLy8gQXV0aC5pc0xvZ2dlZEluKCk7XHJcbiAgICBhdXRoRmFjdG9yeS5pc0xvZ2dlZEluID0gZnVuY3Rpb24oKXtcclxuICAgICAgaWYoQXV0aFRva2VuLmdldFRva2VuKCkpe1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbi8vIEF1dGgubG9nb3V0KCk7XHJcbiAgICBhdXRoRmFjdG9yeS5sb2dvdXQgPSBmdW5jdGlvbigpe1xyXG4gICAgICBBdXRoVG9rZW4uc2V0VG9rZW4oKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gYXV0aEZhY3Rvcnk7XHJcbn0pXHJcblxyXG4uZmFjdG9yeSgnQXV0aFRva2VuJywgZnVuY3Rpb24oJHdpbmRvdyl7XHJcbiAgdmFyIGF1dGhUb2tlbkZhY3RvcnkgPSB7fTtcclxuXHJcbiAgLy8gQXV0aFRva2VuLnNldFRva2VuKHRva2VuKTtcclxuICBhdXRoVG9rZW5GYWN0b3J5LnNldFRva2VuID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgaWYodG9rZW4pe1xyXG4gICAgICAkd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHRva2VuKTtcclxuICAgIH1lbHNlIHtcclxuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nLCB0b2tlbik7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbi8vIEF1dGhUb2tlbi5nZXRUb2tlbigpO1xyXG4gIGF1dGhUb2tlbkZhY3RvcnkuZ2V0VG9rZW4gPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICR3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgfTtcclxuICByZXR1cm4gYXV0aFRva2VuRmFjdG9yeTtcclxufSlcclxuXHJcbi5mYWN0b3J5KCdBdXRoSW50ZXJjZXB0b3JzJywgZnVuY3Rpb24oQXV0aFRva2VuKXtcclxuICB2YXIgYXV0aEludGVyY2VwdG9yc0ZhY3RvcnkgPSB7fTtcclxuXHJcbiAgYXV0aEludGVyY2VwdG9yc0ZhY3RvcnkucmVxdWVzdCA9IGZ1bmN0aW9uKGNvbmZpZyl7XHJcbiAgICB2YXIgdG9rZW4gPSBBdXRoVG9rZW4uZ2V0VG9rZW4oKTtcclxuXHJcbiAgICBpZih0b2tlbikgY29uZmlnLmhlYWRlcnNbJ3gtYWNjZXNzLXRva2VuJ10gPSB0b2tlbjtcclxuXHJcbiAgICByZXR1cm4gY29uZmlnO1xyXG4gIH07XHJcbiAgcmV0dXJuIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ21lbnVTZXJ2aWNlcycsW10pXHJcbi5mYWN0b3J5KCdNZW51JywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIG1lbnVGYWN0b3J5ID0ge307XHJcblxyXG4gIG1lbnVGYWN0b3J5LmRlbGV0ZU1lbnUgPSBmdW5jdGlvbihjYXRlZ29yeV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZGVsZXRlKCcvYXBpL21lbnUvJytjYXRlZ29yeV9pZCk7XHJcbiAgfTtcclxuXHJcbiAgbWVudUZhY3RvcnkudXBkYXRlTWVudSA9IGZ1bmN0aW9uKHVwZGF0ZURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9tZW51LycsIHVwZGF0ZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIG1lbnVGYWN0b3J5LmNyZWF0ZU1lbnUgPSBmdW5jdGlvbihtZW51RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9tZW51JywgbWVudURhdGEpO1xyXG4gIH07XHJcblxyXG4gIG1lbnVGYWN0b3J5LnJlYWRNYWluTWVudSA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL21lbnUnKTtcclxuICB9O1xyXG4gIG1lbnVGYWN0b3J5LnJlYWRTdWJNZW51ID0gIGZ1bmN0aW9uKG1haW5NZW51VHlwZSl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL21lbnUvJyttYWluTWVudVR5cGUpO1xyXG4gIH07XHJcbiAgcmV0dXJuIG1lbnVGYWN0b3J5O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ29yZGVyU2VydmljZXMnLFtdKVxyXG4uZmFjdG9yeSgnT3JkZXInLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgb3JkZXJGYWN0b3J5ID0ge307XHJcblxyXG4gIG9yZGVyRmFjdG9yeS5jcmVhdGVCYXNrZXQgPSBmdW5jdGlvbihiYXNrZXREYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2Jhc2tldCcsIGJhc2tldERhdGEpO1xyXG4gIH07XHJcblxyXG4gIG9yZGVyRmFjdG9yeS5jcmVhdGVPcmRlciA9IGZ1bmN0aW9uKG9yZGVyRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9tYWtlT3JkZXInLG9yZGVyRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIG9yZGVyRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCd1c2VyU2VydmljZXMnLFtdKVxyXG4uZmFjdG9yeSgnVXNlcicsIGZ1bmN0aW9uKCRodHRwKXtcclxuICB1c2VyRmFjdG9yeSA9IHt9O1xyXG5cclxuICB1c2VyRmFjdG9yeS5nZXRQZXJtaXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcGVybWlzc2lvbicpO1xyXG4gIH07XHJcbi8vIFVzZXIuY3JlYXRlKHJlZ0RhdGEpXHJcbiAgdXNlckZhY3RvcnkuY3JlYXRlID0gZnVuY3Rpb24ocmVnRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHJlZ0RhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLmFjdGl2ZUFjY291bnQodG9rZW4pO1xyXG4gIHVzZXJGYWN0b3J5LmFjdGl2ZUFjY291bnQgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL2FjdGl2YXRlLycrdG9rZW4pO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLmNoZWNrQ3JlZGVudGlhbHMobG9naW5EYXRhKTtcclxuICB1c2VyRmFjdG9yeS5jaGVja0NyZWRlbnRpYWxzID0gZnVuY3Rpb24obG9naW5EYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Jlc2VuZCcsIGxvZ2luRGF0YSk7XHJcbiAgfTtcclxuXHJcbi8vIFVzZXIucmVzZW5kTGluayh1c2VybmFtZSlcclxuICB1c2VyRmFjdG9yeS5yZXNlbmRMaW5rID0gZnVuY3Rpb24odXNlcm5hbWUpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9yZXNlbmQnLCB1c2VybmFtZSk7XHJcbiAgfTtcclxuXHJcbi8vIFVzZXIuc2VuZFVzZXJuYW1lKHVzZXJEYXRhKTtcclxuICB1c2VyRmFjdG9yeS5zZW5kVXNlcm5hbWUgPSBmdW5jdGlvbih1c2VyRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Jlc2V0dXNlcm5hbWUvJyt1c2VyRGF0YSk7XHJcbiAgfTtcclxuXHJcbi8vIFVzZXIuc2VuZFBhc3N3b3JkKHJlc2V0RGF0YSk7XHJcbiAgdXNlckZhY3Rvcnkuc2VuZFBhc3N3b3JkID0gZnVuY3Rpb24ocmVzZXREYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvcmVzZXRwYXNzd29yZCcsIHJlc2V0RGF0YSk7XHJcbiAgfTtcclxuXHJcbi8vIFVzZXIucmVzZXRQYXNzd29yZCh0b2tlbik7XHJcbiAgdXNlckZhY3RvcnkucmVzZXRQYXNzd29yZCA9IGZ1bmN0aW9uKHRva2VuKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcmVzZXRwYXNzd29yZC8nK3Rva2VuKTtcclxuICB9O1xyXG5cclxuXHJcbi8vIFVzZXIuc2F2ZVBhc3N3b3JkKHJlZ0RhdGEpXHJcbiAgdXNlckZhY3Rvcnkuc2F2ZVBhc3N3b3JkID0gZnVuY3Rpb24ocmVnRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL3NhdmVwYXNzd29yZCcsIHJlZ0RhdGEpO1xyXG4gIH07XHJcblxyXG4vLyAgVXNlci5yZW5ld1Nlc3Npb24odXNlcm5hbWUpXHJcbiAgdXNlckZhY3RvcnkucmVuZXdTZXNzaW9uID0gZnVuY3Rpb24odXNlcm5hbWUpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9yZW5ld1Rva2VuLycrIHVzZXJuYW1lKTtcclxuICB9O1xyXG5cclxuXHJcbiAgcmV0dXJuIHVzZXJGYWN0b3J5O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ21haW5Db250cm9sbGVycycsWydhdXRoU2VydmljZXMnLCAndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdtYWluQ3RybCcsIGZ1bmN0aW9uKEF1dGgsICR0aW1lb3V0LCAkbG9jYXRpb24sICRzdGF0ZSwgJHJvb3RTY29wZSwgJHNjb3BlLCAkd2luZG93LCAkaW50ZXJ2YWwsIFVzZXIsIEF1dGhUb2tlbil7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcblxyXG4gIGFwcC5sb2FkbWUgPSBmYWxzZTtcclxuXHJcbiAgJHNjb3BlLiRvbignTE9BRCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAkc2NvcGUubG9hZGluZyA9IHRydWU7XHJcbiAgfSk7XHJcblxyXG4gICRzY29wZS4kb24oJ1VOTE9BRCcsIGZ1bmN0aW9uKCl7XHJcbiAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xyXG4gIH0pO1xyXG5cclxuICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbigpe1xyXG4gICAgaWYoIWNoZWNrU2Vzc2lvbikge1xyXG4gICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmKEF1dGguaXNMb2dnZWRJbigpKXtcclxuICAgICAgICBhcHAuaXNMb2dnZWRJbiA9IHRydWU7XHJcbiAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgQXV0aC5nZXRVc2VyKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGFwcC51c2VyID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgICBVc2VyLmdldFBlcm1pc3Npb24oKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnBlcm1pc3Npb24gPT09ICdhZG1pbicpe1xyXG4gICAgICAgICAgICAgICAgYXBwLmF1dGhvcml6ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIGlmKGRhdGEuZGF0YS5wZXJtaXNzaW9uID09PSAnYXJ0aXN0Jyl7XHJcbiAgICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYXBwLnBlcm1pc3Npb24gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGFwcC5hdXRob3JpemVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLnBlcm1pc3Npb24gPSBmYWxzZTtcclxuICAgICAgICAgICAgICBhcHAuYXV0aG9yaXplZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAudXNlciA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5pc0xvZ2dlZEluID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdmFyIGNoZWNrU2Vzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZihBdXRoLmlzTG9nZ2VkSW4oKSl7XHJcbiAgICAgIGFwcC5jaGVja1Nlc3Npb24gPSB0cnVlO1xyXG4gICAgICB2YXIgaW50ZXJ2YWwgPSAkaW50ZXJ2YWwoZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgdG9rZW4gPSAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgIGlmKHRva2VuID09PSBudWxsKXtcclxuICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoaW50ZXJ2YWwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzZWxmLnBhcnNlSnd0ID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgICAgICAgICB2YXIgYmFzZTY0VXJsID0gdG9rZW4uc3BsaXQoJy4nKVsxXTtcclxuICAgICAgICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NFVybC5yZXBsYWNlKCctJywnKycpLnJlcGxhY2UoJ18nLCAnLycpO1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSgkd2luZG93LmF0b2IoYmFzZTY0KSk7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgdmFyIGV4cGlyZVRpbWUgPSBzZWxmLnBhcnNlSnd0KHRva2VuKTtcclxuICAgICAgICAgIHZhciB0aW1lU3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcclxuICAgICAgICAgIHZhciB0aW1lQ2hlY2sgPSBleHBpcmVUaW1lLmV4cCAtIHRpbWVTdGFtcDtcclxuXHJcbiAgICAgICAgICBpZih0aW1lQ2hlY2sgPD0gNSl7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgICAgICAkaW50ZXJ2YWwuY2FuY2VsKGludGVydmFsKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAyMDAwKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjaGVja1Nlc3Npb24oKTtcclxuXHJcblxyXG4gICAgYXBwLnJlbmV3U2Vzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGFwcC5jaG9pY2VNYWRlID0gdHJ1ZTtcclxuICAgICAgVXNlci5yZW5ld1Nlc3Npb24oYXBwLnVzZXIudXNlcm5hbWUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgQXV0aFRva2VuLnNldFRva2VuKGRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgIGFwcC5Nb2RhbEJvZHkgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGFwcC5lbmRTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmNob2ljZU1hZGUgPSB0cnVlO1xyXG4gICAgICBoaWRlTW9kYWwoJ2V4cGlyZWQnKTtcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICBzaG93TW9kYWwoJ2xvZ291dCcpO1xyXG4gICAgICB9LDUwMCk7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgdmFyIHNob3dNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcbiAgICBhcHAuY2hvaWNlTWFkZSA9IGZhbHNlO1xyXG4gICAgYXBwLm1vZGFsSGVhZGVyID0gdW5kZWZpbmVkO1xyXG4gICAgYXBwLm1vZGFsQm9keSA9IHVuZGVmaW5lZDtcclxuICAgIGFwcC5oaWRlQnV0dG9uID0gZmFsc2U7XHJcbi8vIGNoZWNrIHRva2VuIGV4cGlyZWRcclxuICAgIGlmKG9wdGlvbiA9PT0gICdleHBpcmVkJyApe1xyXG4gICAgICBhcHAubW9kYWxIZWFkZXIgPSAnVGltZW91dCBXYXJuaW5nJztcclxuICAgICAgYXBwLm1vZGFsQm9keSA9ICdZb3VyIHNlc3Npb24gd2lsbCBleHBpcmVkIGluIDUgbWludXRlcy4gV291bGQgeW91IGxpa2UgdG8gcmVuZXcgeW91ciBzZXNzaW9uPyc7XHJcbiAgICAgICQoXCIjbXlNb2RhbFwiKS5tb2RhbCh7YmFja2Ryb3A6XCJzdGF0aWNcIn0pO1xyXG4gICAgfSBlbHNlIGlmKG9wdGlvbiA9PT0gJ2xvZ291dCcpe1xyXG4vLyBsb2dvdXRcclxuICAgICAgYXBwLmhpZGVCdXR0b24gPSB0cnVlO1xyXG4gICAgICBhcHAubW9kYWxIZWFkZXIgPSAn66Gc6re47JWE7JuDJztcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgQXV0aC5sb2dvdXQoKTtcclxuICAgICAgICBhcHAuaXNMb2dnZWRJbiA9IGZhbHNlO1xyXG4gICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dpbicpe1xyXG4vLyBMb2dpblxyXG4gICAgICAkKFwiI2xvZ2luXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYoIWFwcC5jaG9pY2VNYWRlKXtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAyMDAwKTtcclxuXHJcbiAgfTtcclxuXHJcbiAgdmFyIGhpZGVNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcblxyXG4gICAgaWYob3B0aW9uID09PSAnZXhwaXJlZCcpe1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoJ2hpZGUnKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dvdXQnKXtcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9naW4nKXtcclxuICAgICAgJChcIiNsb2dpblwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuLy8g66Gc6re47J24XHJcbiAgdGhpcy5kb0xvZ2luID0gZnVuY3Rpb24obG9naW5EYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5leHBpcmVkID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmKHZhbGlkKXtcclxuICAgICAgQXV0aC5sb2dpbihhcHAubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgICAgICAgICBhcHAubG9naW5EYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgfSwxMDAwKTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuZXhwaXJlZCl7XHJcbiAgICAgICAgICAgIGFwcC5leHBpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBJZiBlcnJvciBvY2N1cnMsIHJlbW92ZSBkaXNhYmxlIGxvY2sgZnJvbSBmb3JtXHJcbiAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgYm9vdHN0cmFwIGxvYWRpbmcgaWNvblxyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOygleuztOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsgLy8gRGlzcGxheSBlcnJvciBpZiB2YWxpZCByZXR1cm5zIGZhbHNlXHJcbiAgICB9XHJcblxyXG4gIH07XHJcblxyXG5cclxuICBhcHAubG9naW4gPSBmdW5jdGlvbigpe1xyXG4gICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICBzaG93TW9kYWwoJ2xvZ2luJyk7XHJcbiAgfTtcclxuXHJcbiAgYXBwLmxvZ291dCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBzaG93TW9kYWwoJ2xvZ291dCcpO1xyXG4gIH07XHJcblxyXG4gIGFwcC5yZXNlbmQgPSBmdW5jdGlvbigpe1xyXG4gICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgJHN0YXRlLmdvKCdyZXNlbmQnKTtcclxuICAgICAgYXBwLmV4cGlyZWQgPSBmYWxzZTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXR1c2VybmFtZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0dXNlcm5hbWUnKTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXRwYXNzd29yZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0cGFzc3dvcmQnKTtcclxuICAgIH0sNTAwKTtcclxuXHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnbWFuYWdlbWVudENvbnRyb2xsZXJzJyxbJ2FkbWluU2VydmljZXMnLCAnbWVudVNlcnZpY2VzJywgJ29yZGVyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ3VwZGF0ZVR5cGVDdHJsJywgZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCBNZW51LCBBZG1pbiwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgaXRlbV90eXBlID0gJHN0YXRlUGFyYW1zLml0ZW1fdHlwZTtcclxuICBhcHAuZGF0YSA9IHtcclxuICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuICAgQWRtaW4ucmVhZFVwZGF0ZVR5cGUoaXRlbV90eXBlKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgIGlkOiB0eXBlW2ldLmNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgYXBwLnVwZGF0YURhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgIGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uID0ge1xyXG4gICAgICAgICAgICAgaWQgOiBhcHAudXBkYXRhRGF0YS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgIH07XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICAgICB9XHJcbiAgIH0pO1xyXG5cclxuICAgdGhpcy51cGRhdGVUeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgYXBwLnVwZGF0ZURhdGEgPSBkYXRhO1xyXG4gICAgIGFwcC51cGRhdGVEYXRhLmNhdGVnb3J5X2lkID0gYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24uaWQ7XHJcbiAgICAgYXBwLnVwZGF0ZURhdGEubmFtZSA9IGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLm5hbWU7XHJcbiAgICAgQWRtaW4udXBkYXRlVXBkYXRlVHlwZShhcHAudXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdyZWFkVHlwZUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlLCAkd2luZG93LCBNZW51KXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICAgIGFwcC5kYXRhID0ge1xyXG4gICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICBdLFxyXG4gICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG5cclxuICAgdGhpcy5kZWxldGVUeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgdmFyIGl0ZW1fdHlwZV9pZCA9IGRhdGEuaXRlbV90eXBlO1xyXG4gICAgIEFkbWluLmRlbGV0ZVR5cGUoaXRlbV90eXBlX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxuXHJcbi8vIOyDge2SiCDrtoTrpZjtkZxcclxuICBBZG1pbi5yZWFkVHlwZSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgYXBwLnR5cGVEYXRhcyA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgIHZhciBraW5kRGF0YXMgPSBbXTtcclxuICAgICAgZm9yKHZhciBpPTA7IGk8ZGF0YS5kYXRhLnJlc3VsdC5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICBraW5kRGF0YXNbaV0gPSB7XHJcbiAgICAgICAgICAgICAga2luZDogYXBwLnR5cGVEYXRhc1tpXS5raW5kLnNwbGl0KCcsJyksXHJcbiAgICAgICAgICAgICAgcHJpY2U6IGFwcC50eXBlRGF0YXNbaV0ucHJpY2Uuc3BsaXQoJywnKVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIGFwcC50eXBlRGF0YXNbaV0ua2luZCA9IGtpbmREYXRhc1tpXS5raW5kO1xyXG4gICAgICAgICAgYXBwLnR5cGVEYXRhc1tpXS5wcmljZSA9IGtpbmREYXRhc1tpXS5wcmljZTtcclxuICAgICAgfVxyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2NyZWF0ZVR5cGVDdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZSwgTWVudSwgJHdpbmRvdyl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgfTtcclxuICAgICAgIH1cclxuICAgICB9IGVsc2Uge1xyXG4gICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgfVxyXG4gICB9KTtcclxuXHJcblxyXG4gIHRoaXMuY3JlYXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBhcHAudHlwZURhdGEgPSB7XHJcbiAgICAgIGNhdGVnb3J5OiBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbi5pZCxcclxuICAgICAgdHlwZV9kZXNjcmlwdGlvbjogZGF0YS50eXBlLFxyXG4gICAgICBraW5kOiBhcHAudHlwZV90aW55LnRvU3RyaW5nKCksXHJcbiAgICAgIHByaWNlOiBhcHAudHlwZV9wcmljZS50b1N0cmluZygpXHJcbiAgICB9O1xyXG5cclxuICAgIEFkbWluLmNyZWF0ZVR5cGUoYXBwLnR5cGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3MgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBhcHAua2luZExpc3QgPSBbXTtcclxuICBhcHAudHlwZV90aW55ID0gW107XHJcbiAgYXBwLnR5cGVfcHJpY2UgPSBbXTtcclxuXHJcbiAgdGhpcy5hZGRMaW5lID0gZnVuY3Rpb24oa2luZERhdGEpe1xyXG4gICAgaWYoIWtpbmREYXRhKXtcclxuICAgICAgJHdpbmRvdy5hbGVydCgn7KCV7ZmV7ZWcIOqwkuydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZihraW5kRGF0YS5raW5kVmFsdWUgPT09IG51bGwgfHwga2luZERhdGEua2luZFZhbHVlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFZhbHVlID09PSAnJylcclxuICAgICAge1xyXG4gICAgICAgICR3aW5kb3cuYWxlcnQoJ+yYteyFmOuqheydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgIH0gZWxzZSBpZihraW5kRGF0YS5raW5kUHJpY2UgPT09IG51bGwgfHwga2luZERhdGEua2luZFByaWNlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFByaWNlID09PSAnJyl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWYIOqwgOqyqeydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmtpbmRMaXN0LnB1c2goXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGtpbmQ6IGtpbmREYXRhLmtpbmRWYWx1ZSxcclxuICAgICAgICAgICAgcHJpY2U6IGtpbmREYXRhLmtpbmRQcmljZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgYXBwLnR5cGVfdGlueS5wdXNoKGtpbmREYXRhLmtpbmRWYWx1ZSk7XHJcbiAgICAgICAgYXBwLnR5cGVfcHJpY2UucHVzaChraW5kRGF0YS5raW5kUHJpY2UpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH07XHJcbn0pXHJcblxyXG5cclxuXHJcblxyXG4uY29udHJvbGxlcignaXRlbXNDdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgQWRtaW4ucmVhZEl0ZW1zKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICBhcHAuaXRlbXNEYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgY29uc29sZS5sb2coYXBwLml0ZW1zRGF0YSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdGhpcy5kZWxldGVJdGVtID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIHZhciBpdGVtX2lkID0gZGF0YS5pdGVtX2lkO1xyXG4gICAgQWRtaW4uZGVsZXRlSXRlbShpdGVtX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3JlYWRJdGVtQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGVQYXJhbXMsICRzY29wZSwgT3JkZXIsICR3aW5kb3cpe1xyXG5cclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgdmFyIGl0ZW1faWQgPSAkc3RhdGVQYXJhbXMuaXRlbV9pZDtcclxuICAgIGFwcC5kYXRhID0ge1xyXG4gICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgIHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgXSxcclxuICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgIH07XHJcblxyXG4gICAgIGFwcC5hbW91bnQgPSAxO1xyXG5cclxuICAgIEFkbWluLnJlYWRJdGVtKGl0ZW1faWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICB2YXIga2luZCA9IGRhdGEuZGF0YS5yZXN1bHQua2luZC5zcGxpdCgnLCcpO1xyXG4gICAgICAgIHZhciB0ZW1wID0gZGF0YS5kYXRhLnJlc3VsdC5wcmljZS5zcGxpdCgnLCcpO1xyXG4gICAgICAgIHZhciBwcmljZSA9IFtdO1xyXG4gICAgICAgIGZvcihpPTA7aTx0ZW1wLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgcHJpY2VbaV0gPSBOdW1iZXIodGVtcFtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFwcC5pdGVtRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24gPSB7XHJcbiAgICAgICAgICBpZCA6IHByaWNlWzBdXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZm9yKGk9MDsgaTxwcmljZS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IGtpbmRbaV0sXHJcbiAgICAgICAgICAgIGlkOiBwcmljZVtpXVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG59KVxyXG5cclxuXHJcblxyXG5cclxuLmNvbnRyb2xsZXIoJ3VwZGF0ZUl0ZW1DdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZVBhcmFtcywgJHNjb3BlLCAkaHR0cCwgJHRpbWVvdXQsICAkc3RhdGUsICR3aW5kb3csIE1lbnUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIHZhciBpdGVtX2lkID0gJHN0YXRlUGFyYW1zLml0ZW1faWQ7XHJcblxyXG4gICAgICAgICBhcHAuZGF0YSA9IHtcclxuICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgIF0sXHJcbiAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBhcHAuZGF0YTIgPSB7XHJcbiAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIHRoaXMucmVhZE1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5yZWFkTWVudVN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihkYXRhLmlkID09PSAwKXtcclxuICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL21lbnUvJytjYXRlZ29yeV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgIC8vIOy0iOq4sO2ZlCDsi5ztgrRcclxuICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnJlc3VsdC5sZW5ndGggPT09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn65Ox66Gd65CcIOyDge2SiOydtCDsl4bsirXri4jri6QuJyk7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnJlYWRNZW51U3RhdHVzID0gdHJ1ZTtcclxuICAgIC8vIOy0iOq4sO2ZlCDsi5zsvJzslbztlZjripTrjbAg7Ja065a76rKMIO2VoOq5jOyalFxyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMi5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0udHlwZV9kZXNjcmlwdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uaXRlbV90eXBlX2lkXHJcbiAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgQWRtaW4ucmVhZEl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLml0ZW1EYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24gPSB7XHJcbiAgICAgICAgaWQgOiBhcHAuaXRlbURhdGEuY2F0ZWdvcnlfaWRcclxuICAgICAgfTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG5cclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdGhpcy51cGRhdGVJdGVtID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGlmKGFwcC5yZWFkTWVudVN0YXR1cyl7XHJcbiAgICAgIGlmKGRhdGEuaXRlbV90eXBlID09PSAwIHx8IGRhdGEuaXRlbV90eXBlID09PSAnMCcpe1xyXG4gICAgICAgICR3aW5kb3cuYWxlcnQoJ+yDge2SiCDrtoTrpZjrpbwg7ISg7YOd7ZW07KO87IS47JqULiEnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgdXBkYXRlRGF0YSA9IHtcclxuICAgICAgICAgIHR5cGU6IGRhdGEuaXRlbV90eXBlLFxyXG4gICAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB1cGRhdGVEYXRhMiA9IHtcclxuICAgICAgICAgIHR5cGU6IGFwcC5pdGVtRGF0YS5pdGVtX3R5cGVfaWQsXHJcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICAkaHR0cC5wdXQoJy9hcGkvaXRlbS8nK2l0ZW1faWQsIHVwZGF0ZURhdGEyKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuXHJcbn07XHJcblxyXG5cclxuICAvLyDtjIzsnbzsnZgg6rK966Gc66eMIOyggOyepe2VmOq4sCDrqZTsnbgg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgICB0aGlzLmZpbGUgPSB7fTtcclxuICAvLyDrqZTsnbgg7J6R7ZKI7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICAgIHRoaXMubWFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbC5kYXRhVXJsID0gZS50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgLy8g66mU7J24IOyeke2SiCDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgICAgdGhpcy5yZWFkUGhvdG8gPSBmdW5jdGlvbigpe1xyXG4gIC8vIOuplOyduCDsnbTrr7jsp4Ag7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgIGFwcC5tYWluUGhvdG8gPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9JbWFnZS8nLCBmZCx7XHJcbiAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5tYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgaW1hZ2U6IGRhdGEuZGF0YS5pdGVtX3BhdGhcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAvLyDsnpHtkogg7ISk66qFIOydtOuvuOyngCDsl4XroZzrk5wg65CY7JeI64qU7KeAIOuztOyXrOyjvOq4sFxyXG4gICAgICB0aGlzLmV4cGxhaW5QaG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDAgJiYgZmlsZXNbMF0ubmFtZS5tYXRjaCgvXFwuKHBuZ3xqcGVnfGpwZykkLykpIHtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOyeke2SiCDshKTrqoUgIOydtOuvuOyngCDsl4XroZzrk5ztlbTshJwg6rK966GcIOyggOyepVxyXG4gICAgICB0aGlzLnJlYWRQaG90b0V4cGxhaW4gPSBmdW5jdGlvbigpe1xyXG4gIC8vIOyeke2SiCDshKTrqoUgIOyXheuhnOuTnCDsl6zrtoBcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICBhcHAuZXhwbGFpblBob3RvID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmZC5hcHBlbmQoJ215ZmlsZScsIGFwcC5maWxlLnVwbG9hZCk7XHJcbiAgICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZVBob3RvRXhwbGFpbi8nLCBmZCx7XHJcbiAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5leHBsYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgZXhwbGFpbjogZGF0YS5kYXRhLml0ZW1fcGF0aFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAkaHR0cC5wdXQoJy9hcGkvaXRlbS8nK2l0ZW1faWQsIHVwZGF0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOyNuOuEpOydvCDsnbTrr7jsp4Ag66eM65Ok6riwXHJcbiAgICAgICAgYXBwLm15SW1hZ2U9Jyc7XHJcbiAgICAgICAgYXBwLm15Q3JvcHBlZEltYWdlPScnO1xyXG5cclxuICAgICAgICB2YXIgaGFuZGxlRmlsZVNlbGVjdD1mdW5jdGlvbihldnQpIHtcclxuICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgdmFyIGZpbGU9ZXZ0LmN1cnJlbnRUYXJnZXQuZmlsZXNbMF07XHJcbiAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgIGFwcC5teUltYWdlPWV2dC50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmaWxlSW5wdXQnKSkub24oJ2NoYW5nZScsaGFuZGxlRmlsZVNlbGVjdCk7XHJcblxyXG4gICAgICAgICAgZnVuY3Rpb24gZGVjb2RlQmFzZTY0SW1hZ2UoZGF0YVN0cmluZykge1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IGRhdGFTdHJpbmcubWF0Y2goL15kYXRhOihbQS1aYS16LStcXC9dKyk7YmFzZTY0LCguKykkLyk7XHJcblxyXG4gICAgICAgICAgICBpZiAobWF0Y2hlcy5sZW5ndGggIT09IDMpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdJbnZhbGlkIGlucHV0IHN0cmluZycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlID0ge1xyXG4gICAgICAgICAgICAgICAgdHlwZSA6IG1hdGNoZXNbMV0sXHJcbiAgICAgICAgICAgICAgICBkYXRhIDogbWF0Y2hlc1syXVxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZpbGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgLy8g7I2464Sk7J28IOydtOuvuOyngCDroZzsu6zrlJTsiqTtgazsl5Ag7KCA7J6lIO2bhCDsoIDsnqUg7JyE7LmYIOqwgOyguOyYpOq4sFxyXG4gICAgICAgICAgdGhpcy5yZWFkQ3JvcEltYWdlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAudGh1bWJuYWlsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuYmFzZTY0VXJsID09PSAnJyB8fCBkYXRhLmJhc2U2NFVybCA9PT0gbnVsbCB8fCBkYXRhLmJhc2U2NFVybCA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgdmFyIGJsb2IgPSBkZWNvZGVCYXNlNjRJbWFnZSgkc2NvcGUubXlDcm9wcGVkSW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICBBZG1pbi5yZWFkQXJpc3RDcm9wKGJsb2IpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgIHZhciB1cGRhdGVEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGRhdGEuZGF0YS5maWxlUGF0aFxyXG4gICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICRodHRwLnB1dCgnL2FwaS9pdGVtLycraXRlbV9pZCwgdXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcblxyXG59KVxyXG5cclxuXHJcblxyXG4uY29udHJvbGxlcignY3JlYXRlSXRlbUN0cmwnLCBmdW5jdGlvbiAoJGh0dHAsICR0aW1lb3V0LCAkc2NvcGUsIEFkbWluLCAkc3RhdGUsICR3aW5kb3csIE1lbnUpIHtcclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICAgICBhcHAuZGF0YSA9IHtcclxuICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgXSxcclxuICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgYXBwLmRhdGEyID0ge1xyXG4gICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICAgfTtcclxuXHJcbiAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRoaXMucmVhZE1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmlkID09PSAwKXtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvbWVudS8nK2NhdGVnb3J5X2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbi8vIOy0iOq4sO2ZlCDsi5ztgrRcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aCA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICBhcHAuZGF0YTIgPSB7XHJcbiAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfrk7HroZ3rkJwg7IOB7ZKI7J20IOyXhuyKteuLiOuLpC4nKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4vLyDstIjquLDtmZQg7Iuc7Lyc7JW87ZWY64qU642wIOyWtOuWu+qyjCDtlaDquYzsmpRcclxuICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgICAgYXBwLmRhdGEyLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLnR5cGVfZGVzY3JpcHRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uaXRlbV90eXBlX2lkXHJcbiAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDtjIzsnbzsnZgg6rK966Gc66eMIOyggOyepe2VmOq4sCDrqZTsnbgg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgdGhpcy5maWxlID0ge307XHJcbi8vIOuplOyduCDsnpHtkojsnbTrr7jsp4Ag7JeF66Gc65OcIOuQmOyXiOuKlOyngCDrs7Tsl6zso7zquLBcclxuICAgIHRoaXMubWFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzWzBdLm5hbWUubWF0Y2goL1xcLihwbmd8anBlZ3xqcGcpJC8pKSB7XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuXHJcbi8vIOuplOyduCDsnpHtkogg7J2066+47KeAIOyXheuhnOuTnO2VtOyEnCDqsr3roZwg7KCA7J6lXHJcbiAgICB0aGlzLnJlYWRQaG90byA9IGZ1bmN0aW9uKCl7XHJcbi8vIOuplOyduCDsnbTrr7jsp4Ag7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgYXBwLm1haW5QaG90byA9IGZhbHNlO1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgZmQuYXBwZW5kKCdteWZpbGUnLCBhcHAuZmlsZS51cGxvYWQpO1xyXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9JbWFnZS8nLCBmZCx7XHJcbiAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eSxcclxuICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAubWFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLm1haW5JbWFnZVBhdGggPSBkYXRhLmRhdGEuaXRlbV9wYXRoO1xyXG4gICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcbi8vIOyeke2SiCDshKTrqoUg7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICB0aGlzLmV4cGxhaW5QaG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5leHBsYWluVGh1bWJuYWlsLmRhdGFVcmwgPSBlLnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDsnpHtkogg7ISk66qFICDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgIHRoaXMucmVhZFBob3RvRXhwbGFpbiA9IGZ1bmN0aW9uKCl7XHJcbi8vIOyeke2SiCDshKTrqoUgIOyXheuhnOuTnCDsl6zrtoBcclxuICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgIGFwcC5leHBsYWluUGhvdG8gPSBmYWxzZTtcclxuICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZVBob3RvRXhwbGFpbi8nLCBmZCx7XHJcbiAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eSxcclxuICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAuZXhwbGFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmV4cGxhaW5JbWFnZVBhdGggPSBkYXRhLmRhdGEuaXRlbV9wYXRoO1xyXG4gICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDsjbjrhKTsnbwg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgICBhcHAubXlJbWFnZT0nJztcclxuICAgICAgYXBwLm15Q3JvcHBlZEltYWdlPScnO1xyXG5cclxuICAgICAgdmFyIGhhbmRsZUZpbGVTZWxlY3Q9ZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgdmFyIGZpbGU9ZXZ0LmN1cnJlbnRUYXJnZXQuZmlsZXNbMF07XHJcbiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgYXBwLm15SW1hZ2U9ZXZ0LnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICB9O1xyXG4gICAgICAgIGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZmlsZUlucHV0JykpLm9uKCdjaGFuZ2UnLGhhbmRsZUZpbGVTZWxlY3QpO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBkZWNvZGVCYXNlNjRJbWFnZShkYXRhU3RyaW5nKSB7XHJcbiAgICAgICAgICB2YXIgbWF0Y2hlcyA9IGRhdGFTdHJpbmcubWF0Y2goL15kYXRhOihbQS1aYS16LStcXC9dKyk7YmFzZTY0LCguKykkLyk7XHJcblxyXG4gICAgICAgICAgaWYgKG1hdGNoZXMubGVuZ3RoICE9PSAzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0ludmFsaWQgaW5wdXQgc3RyaW5nJyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgZmlsZSA9IHtcclxuICAgICAgICAgICAgICB0eXBlIDogbWF0Y2hlc1sxXSxcclxuICAgICAgICAgICAgICBkYXRhIDogbWF0Y2hlc1syXVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXR1cm4gZmlsZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4vLyDsjbjrhKTsnbwg7J2066+47KeAIOuhnOy7rOuUlOyKpO2BrOyXkCDsoIDsnqUg7ZuEIOyggOyepSDsnITsuZgg6rCA7KC47Jik6riwXHJcbiAgICAgICAgdGhpcy5yZWFkQ3JvcEltYWdlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgIGFwcC50aHVtYm5haWwgPSBmYWxzZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICBpZihkYXRhLmJhc2U2NFVybCA9PT0gJycgfHwgZGF0YS5iYXNlNjRVcmwgPT09IG51bGwgfHwgZGF0YS5iYXNlNjRVcmwgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYmxvYiA9IGRlY29kZUJhc2U2NEltYWdlKCRzY29wZS5teUNyb3BwZWRJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICBBZG1pbi5yZWFkQXJpc3RDcm9wKGJsb2IpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC50aHVtYm5haWwgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC50aHVtYm5haWxQYXRoID0gZGF0YS5kYXRhLmZpbGVQYXRoO1xyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG5cclxuXHJcbi8vIOyekeqwgCDsnpHtkogg7JeF66Gc65OcXHJcbiAgICAgIHRoaXMuY3JlYXRlUGhvdG8gPSBmdW5jdGlvbih1cGxvYWREYXRhKXtcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICBpZih1cGxvYWREYXRhID09PSB1bmRlZmluZWQgfHwgdXBsb2FkRGF0YSA9PT0gbnVsbCB8fCB1cGxvYWREYXRhID09PSAnJyl7XHJcbiAgICAgICAgICAkd2luZG93LmFsZXJ0KCfruYjsubjsnYQg66qo65GQIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZihhcHAuZGF0YTIuc2VsZWN0ZWRPcHRpb24uaWQgPT09ICcwJyl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsg4Htkogg67aE66WY7J2EIOyEoO2Dne2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIH0gZWxzZSBpZihhcHAubWFpbkltYWdlUGF0aCA9PT0gdW5kZWZpbmVkIHx8IGFwcC5tYWluSW1hZ2VQYXRoID09PSAgbnVsbCB8fCBhcHAubWFpbkltYWdlUGF0aCA9PT0gJycpe1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn7IOB7ZKIIOydtOuvuOyngOulvCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICB9IGVsc2UgaWYodXBsb2FkRGF0YS50aXRsZSA9PT0gdW5kZWZpbmVkIHx8IHVwbG9hZERhdGEudGl0bGUgPT09ICBudWxsIHx8IHVwbG9hZERhdGEudGl0bGU9PT0gJycpe1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn7IOB7ZKIIOygnOuqqeulvCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICB9IGVsc2UgaWYoYXBwLmV4cGxhaW5JbWFnZVBhdGggPT09IHVuZGVmaW5lZCB8fCBhcHAuZXhwbGFpbkltYWdlUGF0aCA9PT0gbnVsbCB8fCBhcHAuZXhwbGFpbkltYWdlUGF0aCA9PT0gJycpIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+yDge2SiCDshKTrqoUg7J2066+47KeA66W8IOyXheuhnOuTnO2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIH0gZWxzZSBpZihhcHAudGh1bWJuYWlsUGF0aCA9PT0gdW5kZWZpbmVkIHx8IGFwcC50aHVtYm5haWxQYXRoID09PSBudWxsIHx8IGFwcC50aHVtYm5haWxQYXRoID09PSAnJykge1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn7I2464Sk7J28IOydtOuvuOyngOulvCDsl4XroZzrk5ztlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGFwcC51cGxvYWREYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6IHVwbG9hZERhdGEudGl0bGUsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBhcHAuZGF0YTIuc2VsZWN0ZWRPcHRpb24uaWQsXHJcbiAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGFwcC50aHVtYm5haWxQYXRoLFxyXG4gICAgICAgICAgICAgICAgZXhwbGFpbjogYXBwLmV4cGxhaW5JbWFnZVBhdGgsXHJcbiAgICAgICAgICAgICAgICBpbWFnZTogYXBwLm1haW5JbWFnZVBhdGhcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIEFkbWluLmNyZWF0ZUl0ZW0oYXBwLnVwbG9hZERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnbWVudUNvbnRyb2xsZXJzJyxbJ21lbnVTZXJ2aWNlcyddKVxyXG4uY29udHJvbGxlcignbWFpbk1lbnVDdHJsJywgZnVuY3Rpb24gKE1lbnUsICRzdGF0ZSkge1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLm1haW5NZW51ZXMgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHRoaXMuY3JlYXRlTWVudSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihkYXRhID09PSB1bmRlZmluZWQpe1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOygleuztOulvCDsnoXroKXtlbTso7zshLjsmpQuJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHZhciBtZW51RGF0YSA9IHtcclxuICAgICAgICAgIG5hbWU6IGRhdGEubmFtZVxyXG4gICAgICB9O1xyXG4gICAgICBNZW51LmNyZWF0ZU1lbnUobWVudURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICB0aGlzLnVwZGF0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICB2YXIgdXBkYXRlRGF0YSA9IHtcclxuICAgICAgY2F0ZWdvcnlfaWQ6IGRhdGEuY2F0ZWdvcnlfaWQsXHJcbiAgICAgIG5hbWU6IGRhdGEubmFtZVxyXG4gICAgfTtcclxuICAgIGNvbnNvbGUubG9nKHVwZGF0ZURhdGEpO1xyXG4gICAgICBNZW51LnVwZGF0ZU1lbnUodXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHRoaXMuZGVsZXRlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIHZhciBkZWxldGVEYXRhID0gZGF0YS5jYXRlZ29yeV9pZDtcclxuICAgIE1lbnUuZGVsZXRlTWVudShkZWxldGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ29yZGVyQ29udHJvbGxlcnMnLFtdKVxyXG4uY29udHJvbGxlcigncmVhZE9yZGVyQ3RybCcsIGZ1bmN0aW9uICgkc3RhdGVQYXJhbXMsICRodHRwLCAkc3RhdGUsICR3aW5kb3cpIHtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICAkaHR0cC5nZXQoJy9hcGkvbWFrZU9yZGVyJykudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLm9yZGVyRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgIH1cclxuICB9KTtcclxuICB0aGlzLmNvbmZpcm1PcmRlciA9IGZ1bmN0aW9uKCl7XHJcbiAgICAkc3RhdGUuZ28oJ2FwcC5jb25maXJtT3JkZXInKTtcclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2Jhc2tldEN0cmwnLCBmdW5jdGlvbiAoJGh0dHAsICR3aW5kb3cpIHtcclxuICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgYXBwLmFtb3VudCA9IDE7XHJcblxyXG4gdGhpcy5wbHVzID0gZnVuY3Rpb24oKXtcclxuICAgYXBwLmFtb3VudCsrO1xyXG4gfTtcclxuXHJcbiB0aGlzLm1pbnVzID0gZnVuY3Rpb24oKXtcclxuICAgaWYoYXBwLmFtb3VudCA8PSAwKXtcclxuICAgICAkd2luZG93LmFsZXJ0KCfsmKzrsJTrpbgg7IiY65+J7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICBhcHAuYW1vdW50ID0gMTtcclxuICAgfSBlbHNlIHtcclxuICAgICBhcHAuYW1vdW50LS07XHJcbiAgIH1cclxuIH07XHJcblxyXG5cclxuICAkaHR0cC5nZXQoJy9hcGkvYmFza2V0JykudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAvLyBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICBhcHAuYmFza2V0RGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgIH1cclxuXHJcbiAgfSk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgndHlwZUNvbnRyb2xsZXJzJyxbJ29yZGVyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ2dldFR5cGVJdGVtc0N0cmwnLCBmdW5jdGlvbiAoJHN0YXRlUGFyYW1zLCAkaHR0cCkge1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIHZhciB0eXBlID0gJHN0YXRlUGFyYW1zLnR5cGU7XHJcbiAgJGh0dHAuZ2V0KCcvYXBpL2l0ZW1fdHlwZS8nK3R5cGUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5pdGVtc0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuXHJcbi5jb250cm9sbGVyKCdnZXRUeXBlSXRlbUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlUGFyYW1zLCAkd2luZG93LCAkc3RhdGUsIE9yZGVyKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgaXRlbV9pZCA9ICRzdGF0ZVBhcmFtcy5pdGVtX2lkO1xyXG4gIGFwcC5kYXRhID0ge1xyXG4gICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICBdLFxyXG4gICBzZWxlY3RlZE9wdGlvbjoge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgIH07XHJcblxyXG4gICBhcHAuYW1vdW50ID0gMTtcclxuICB0aGlzLnBsdXMgPSBmdW5jdGlvbigpe1xyXG4gICAgYXBwLmFtb3VudCsrO1xyXG4gIH07XHJcblxyXG4gIHRoaXMubWludXMgPSBmdW5jdGlvbigpe1xyXG4gICAgaWYoYXBwLmFtb3VudCA8PSAwKXtcclxuICAgICAgJHdpbmRvdy5hbGVydCgn7Jis67CU66W4IOyImOufieydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgIGFwcC5hbW91bnQgPSAxO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmFtb3VudC0tO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHRoaXMuY3JlYXRlQmFza2V0ID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB2YXIgYmFza2V0RGF0YSA9IHtcclxuICAgICAgaXRlbV9pZDogZGF0YS5pdGVtX2lkLFxyXG4gICAgICBhbW91bnQ6IGRhdGEuYW1vdW50XHJcbiAgICB9O1xyXG5cclxuICAgIE9yZGVyLmNyZWF0ZUJhc2tldChiYXNrZXREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vICR3aW5kb3cuYWxlcnQoJ+yDge2SiOydhCDsnqXrsJTqtazri4jsl5Ag64u07JWY7Iq164uI64ukLicpO1xyXG4gIH07XHJcblxyXG4gIHRoaXMuY3JlYXRlT3JkZXIgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIHZhciBvcmRlckRhdGEgPSB7XHJcbiAgICAgIGl0ZW1faWQ6IGl0ZW1faWQsXHJcbiAgICAgIGFtb3VudDogZGF0YS5hbW91bnQsXHJcbiAgICAgIGtpbmRPZjogZGF0YS5raW5kT2YubmFtZSxcclxuICAgICAgaXRlbV90eXBlX2lkOiBkYXRhLml0ZW1fdHlwZV9pZFxyXG4gICAgfTtcclxuXHJcbiAgICBPcmRlci5jcmVhdGVPcmRlcihvcmRlckRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICRzdGF0ZS5nbygnYXBwLm1ha2VPcmRlcicpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGE7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgfTtcclxuXHJcbiAgQWRtaW4ucmVhZEl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0LmtpbmQuc3BsaXQoJywnKTtcclxuICAgICAgYXBwLml0ZW1EYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgIG5hbWU6IHR5cGVbaV0sXHJcbiAgICAgICAgICBpZDogaSsxXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2VtYWlsQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdlbWFpbEN0cmwnLCBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIFVzZXIuYWN0aXZlQWNjb3VudCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuc3VjY2Vzc01zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICB9LDIwMDApO1xyXG4gICAgfWVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgIH0sMjAwMCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVzZW5kQ3RybCcsIGZ1bmN0aW9uKFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5jaGVja0NyZWRlbnRpYWxzID0gZnVuY3Rpb24obG9naW5EYXRhKXtcclxuICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgVXNlci5jaGVja0NyZWRlbnRpYWxzKHRoaXMubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgVXNlci5yZXNlbmRMaW5rKGFwcC5sb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICB9LDIwMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9ZWxzZSB7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigndXNlcm5hbWVDdHJsJywgZnVuY3Rpb24oVXNlciwgJHRpbWVvdXQsICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5zZW5kVXNlcm5hbWUgPSBmdW5jdGlvbih1c2VyRGF0YSwgdmFsaWQpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgaWYodmFsaWQpe1xyXG4gICAgICBVc2VyLnNlbmRVc2VybmFtZShhcHAudXNlckRhdGEuZW1haWwpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOydtOuplOydvCDso7zshozqsIAg7JWE64uZ64uI64ukLic7XHJcbiAgICB9XHJcbiAgfTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdwYXNzd29yZEN0cmwnLCBmdW5jdGlvbihVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBhcHAuc2VuZFBhc3N3b3JkID0gZnVuY3Rpb24ocmVzZXREYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBpZih2YWxpZCl7XHJcbiAgICAgIFVzZXIuc2VuZFBhc3N3b3JkKGFwcC5yZXNldERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOyVhOydtOuUlOqwgCDslYTri5nri4jri6QuJztcclxuICAgIH1cclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3Jlc2V0Q3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgJHNjb3BlLCBVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICBhcHAuaGlkZSA9IHRydWU7IC8vIEhpZGUgZm9ybSB1bnRpbCB0b2tlbiBjYW4gYmUgdmVyaWZpZWQgdG8gYmUgdmFsaWRcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBjaGVjayBpZiB0b2tlbiBpcyB2YWxpZCBhbmQgZ2V0IHRoZSB1c2VyJ3MgaW5mbyBmcm9tIGRhdGFiYXNlIChydW5zIG9uIHBhZ2UgbG9hZClcclxuICAgIFVzZXIucmVzZXRQYXNzd29yZCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHVzZXIgd2FzIHJldHJpZXZlZFxyXG4gICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICBhcHAuaGlkZSA9IGZhbHNlOyAvLyBTaG93IGZvcm1cclxuICAgICAgICAgICAgJHNjb3BlLmFsZXJ0ID0gJ2FsZXJ0IGFsZXJ0LXN1Y2Nlc3MnOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gJ+yDiOuhnOyatCDruYTrsIDrsojtmLjrpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIExldCB1c2VyIGtub3cgdGhleSBjYW4gZW50ZXIgbmV3IHBhc3N3b3JkXHJcbiAgICAgICAgICAgICRzY29wZS51c2VybmFtZSA9IGRhdGEuZGF0YS51c2VyWzBdLnVzZXJuYW1lOyAvLyBTYXZlIHVzZXJuYW1lIGluIHNjb3BlIGZvciB1c2UgaW4gc2F2ZVBhc3N3b3JkKCkgZnVuY3Rpb25cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTsgLy8gR3JhYiBlcnJvciBtZXNzYWdlIGZyb20gSlNPTiBvYmplY3RcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBzYXZlIHVzZXIncyBuZXcgcGFzc3dvcmQgdG8gZGF0YWJhc2VcclxuICAgIGFwcC5zYXZlUGFzc3dvcmQgPSBmdW5jdGlvbihyZWdEYXRhLCB2YWxpZCwgY29uZmlybWVkKSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7IC8vIENsZWFyIGVycm9yTXNnIHdoZW4gdXNlciBzdWJtaXRzXHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlOyAvLyBEaXNhYmxlIGZvcm0gd2hpbGUgcHJvY2Vzc2luZ1xyXG4gICAgICAgIGFwcC5sb2FkaW5nID0gdHJ1ZTsgLy8gRW5hYmxlIGxvYWRpbmcgaWNvblxyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiBmb3JtIGlzIHZhbGlkIGFuZCBwYXNzd29yZHMgbWF0Y2hcclxuICAgICAgICBpZiAodmFsaWQgJiYgY29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgIGFwcC5yZWdEYXRhLnVzZXJuYW1lID0gJHNjb3BlLnVzZXJuYW1lOyAvLyBHcmFiIHVzZXJuYW1lIGZyb20gJHNjb3BlXHJcblxyXG4gICAgICAgICAgICAvLyBSdW4gZnVuY3Rpb24gdG8gc2F2ZSB1c2VyJ3MgbmV3IHBhc3N3b3JkIHRvIGRhdGFiYXNlXHJcbiAgICAgICAgICAgIFVzZXIuc2F2ZVBhc3N3b3JkKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBwYXNzd29yZCB3YXMgc2F2ZWQgdG8gZGF0YWJhc2VcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1zdWNjZXNzJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2ZlOuptOycvOuhnCDsnbTrj5ntlanri4jri6QuJzsgLy8gR3JhYiBzdWNjZXNzIG1lc3NhZ2UgZnJvbSBKU09OIG9iamVjdCBhbmQgcmVkaXJlY3RcclxuICAgICAgICAgICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBsb2dpbiBwYWdlIGFmdGVyIDIwMDAgbWlsbGlzZWNvbmRzICgyIHNlY29uZHMpXHJcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7IC8vIEdyYWIgZXJyb3IgbWVzc2FnZSBmcm9tIEpTT04gb2JqZWN0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1kYW5nZXInOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC4nOyAvLyBMZXQgdXNlciBrbm93IGZvcm0gaXMgbm90IHZhbGlkXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCd1c2VyQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdyZWdDdHJsJywgZnVuY3Rpb24gKCAkaHR0cCwgJGxvY2F0aW9uLCAkdGltZW91dCwgVXNlciwgQXV0aCwgJHN0YXRlKSB7XHJcbiAgICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICAgIHRoaXMucmVnU3RlcDEgPSBmdW5jdGlvbihyZWdEYXRhKXtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICBpZighcmVnRGF0YSl7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7JW96rSA7JeQIOuPmeydmO2VtOyVvOunjCDtmozsm5DqsIDsnoXsnYQg7KeE7ZaJ7ZWgIOyImCDsnojsirXri4jri6QuJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYoKHJlZ0RhdGEudGVybXMpICYmIChyZWdEYXRhLnByaXZhY3kpKSB7XHJcbiAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9ICfslb3qtIDsl5Ag7ISx6rO17KCB7Jy866GcIOuPmeydmO2VmOyFqOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICRzdGF0ZS5nbygncmVnaXN0ZXJTdGVwMicpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfslb3qtIDsl5Ag64+Z7J2Y7ZW07JW866eMIO2ajOybkOqwgOyeheydhCDsp4TtlontlaAg7IiYIOyeiOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfTtcclxuXHJcbiAgICAvLyDtmozsm5DqsIDsnoVcclxuICAgICAgdGhpcy5yZWdTdGVwMiA9IGZ1bmN0aW9uKHJlZ0RhdGEsIHZhbGlkLCBjb25maXJtZWQpe1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgICAgIGlmKHZhbGlkICYmIGNvbmZpcm1lZCl7XHJcbiAgICAgICAgICBVc2VyLmNyZWF0ZShhcHAucmVnRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICBBdXRoLmxvZ2luKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICAgICAgICB9LDEwMDApO1xyXG4gICAgICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuZXhwaXJlZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGlyZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBJZiBlcnJvciBvY2N1cnMsIHJlbW92ZSBkaXNhYmxlIGxvY2sgZnJvbSBmb3JtXHJcbiAgICAgICAgICAgICBhcHAubG9hZGluZyA9IGZhbHNlOyAvLyBTdG9wIGJvb3RzdHJhcCBsb2FkaW5nIGljb25cclxuICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC4nOyAvLyBEaXNwbGF5IGVycm9yIGlmIHZhbGlkIHJldHVybnMgZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbn0pO1xyXG4iXX0=
