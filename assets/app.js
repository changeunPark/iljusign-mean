angular.module("app",["ui.router","ui.bootstrap","menuControllers","userControllers","mainControllers","emailControllers","managementControllers","itemControllers","typeControllers","orderControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),a.hashPrefix(""),a.html5Mode(!0),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/header.html"},content:{templateUrl:"/main/form.html"},"menu@app":{templateUrl:"/menues/mainMenu.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"},"account@app":{templateUrl:"/main/account.html"},"contents@app":{templateUrl:"/main/home.html"},"quickMenu@app":{templateUrl:"/main/quickMenu.html"},footer:{templateUrl:"/company/footer.html"}}}).state("app.registerStep1",{url:"register/step1",views:{"contents@app":{templateUrl:"/users/register/registerStep1.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.registerStep2",{url:"register/step2",views:{"contents@app":{templateUrl:"/users/register/registerStep2.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.registerStep3",{url:"register/step3",views:{"contents@app":{templateUrl:"/users/register/registerStep3.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.login",{url:"login",views:{"contents@app":{templateUrl:"/users/login/login.html"}}}).state("app.management",{url:"management",views:{"content@":{templateUrl:"/management/form.html"},"menu@app.management":{templateUrl:"/management/menu.html"}}}).state("app.management.category",{url:"category",views:{"contents@app.management":{templateUrl:"/management/partial/category.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"}}}).state("app.management.typeAndItems",{url:"/typeAndItems",views:{"contents@app.management":{templateUrl:"/management/partial/typeAndItems.html"}}}).state("app.management.typeAndItems.update",{url:"/updateType:item_type",views:{"contents@app.management":{templateUrl:"/management/partial/update/type.html",controller:"updateTypeCtrl",controllerAs:"updateType"}}}).state("app.management.typeAndItems.updateItemType",{url:"/updateItem:item_id",views:{"contents@app.management":{templateUrl:"/management/partial/update/itemType.html",controller:"updateItemTypeCtrl",controllerAs:"updateItemType"}}}).state("app.management.typeAndItems.updateItem",{url:"/update/item:item_id",views:{"contents@app.management":{templateUrl:"/management/partial/update/item.html",controller:"updateItemCtrl",controllerAs:"updateItem"}}}).state("app.management.typeAndItems.readItem",{url:":item_id",views:{"contents@app.management":{templateUrl:"/management/partial/read/item.html",controller:"readItemCtrl",controllerAs:"readItem"}}}).state("app.management.banner",{url:"/banner",views:{"contents@app.management":{templateUrl:"/management/partial/banner.html"}}}).state("app.management.gallery",{url:"/gallery",views:{"contents@app.management":{templateUrl:"/management/partial/gallery.html"}}}).state("app.management.orderStatus",{url:"/orderStatus",views:{"contents@app.management":{templateUrl:"/management/partial/orderStatus.html"}}}).state("app.management.members",{url:"/members",views:{"contents@app.management":{templateUrl:"/management/partial/members.html"}}}).state("app.user",{url:"user",views:{"contents@app":{templateUrl:"/users/partial/user.html"}}}).state("app.commerceDetail",{url:"commerce-detail",views:{"contents@app":{templateUrl:"/users/partial/commerceDetail.html"}}}).state("app.basket",{url:"basket",views:{"contents@app":{templateUrl:"/users/partial/basket.html",controller:"basketCtrl",controllerAs:"basket"}}}).state("app.category",{url:"category=:category_id",views:{"subMenu@app":{templateUrl:"/menues/subMenu.html",controller:"subMenuCtrl",controllerAs:"subMenu"},"contents@app":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.item_type",{url:"/item_type=:type_code",views:{"contents@app":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.item_type.show",{url:"/item:item_id",views:{"contents@app":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.category.show",{url:"/item:item_id",views:{"contents@app":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.makeOrder",{url:"makeOrder",views:{"contents@app":{templateUrl:"/order/makeOrder.html",controller:"readOrderCtrl",controllerAs:"readOrder"}}}).state("app.confirmOrder",{url:"confirmOrder",views:{"contents@app":{templateUrl:"/order/confirmOrder.html",controller:"readOrderCtrl",controllerAs:"readOrderCtrl"}}}).state("app.board",{url:"board",views:{"contents@app":{templateUrl:"/categoryes/board/form.html"}}}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}})}]),app.run(["$rootScope","User","$state",function(e,t,a){e.$on("$stateChangeStart",function(e,t,a,r,n,s){}),e.$on("$stateChangeError",function(e,t,r,n,s,i){a.go("app")})}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var n=e(r.fileModel),s=n.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("adminServices",[]).factory("Admin",["$http",function(e){return adminFactory={},adminFactory.deleteItem=function(t){return e.delete("/api/item/"+t)},adminFactory.readAristCrop=function(t){return e.post("/api/createCropImage",t)},adminFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},adminFactory.createItem=function(t){return e.post("/api/item",t)},adminFactory.readItems=function(){return e.get("/api/item")},adminFactory.readItem=function(t){return e.get("/api/item/"+t)},adminFactory.updateItemType=function(t){return e.put("/api/itemType",t)},adminFactory.readUpdateItemType=function(t){return e.get("/api/itemType/"+t)},adminFactory.readItemType=function(){return e.get("/api/itemType")},adminFactory.deleteType=function(t){return e.delete("/api/type/"+t)},adminFactory.readUpdateType=function(t){return e.get("/api/type/"+t)},adminFactory.updateUpdateType=function(t){return e.put("/api/type",t)},adminFactory.createType=function(t){return e.post("/api/type",t)},adminFactory.readType=function(){return e.get("/api/type")},adminFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("menuServices",[]).factory("Menu",["$http",function(e){return menuFactory={},menuFactory.deleteMenu=function(t){return e.delete("/api/menu/"+t)},menuFactory.updateMenu=function(t){return e.put("/api/menu/",t)},menuFactory.createMenu=function(t){return e.post("/api/menu",t)},menuFactory.readMainMenu=function(){return e.get("/api/menu")},menuFactory.readSubMenu=function(t){return e.get("/api/menu/"+t)},menuFactory}]),angular.module("orderServices",[]).factory("Order",["$http",function(e){return orderFactory={},orderFactory.updateDelivery=function(t){return e.put("/api/delivery/"+t.user_id,t)},orderFactory.createDelivery=function(t){return e.post("/api/delivery",t)},orderFactory.deleteBasket=function(t){return e.delete("/api/basket/"+t)},orderFactory.readBasket=function(){return e.get("/api/basket")},orderFactory.createBasket=function(t){return e.post("/api/basket",t)},orderFactory.deleteOrder=function(t){return e.delete("/api/makeOrder/"+t)},orderFactory.readOrder=function(t){return e.get("/api/makeOrder/"+t)},orderFactory.readOrderAndDeli=function(){return e.get("/api/makeOrder")},orderFactory.createOrder=function(t){return e.post("/api/makeOrder",t)},orderFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.getPermission=function(){return e.get("/api/permission")},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory}]),angular.module("itemControllers",["orderServices"]).filter("sumByKey",function(){return function(e,t){var a=e instanceof Array?e.length:0;if(void 0===t||0===a)return a;for(var r=0;a--;)r+=e[a][t[0]]*e[a][t[1]];return r}}).controller("getTypeItemsCtrl",["$stateParams","$http",function(e,t){var a=this,r=e.category_id;if(e.type_code){var n=e.type_code;t.get("/api/item_type/"+r,{params:{type_code:n}}).then(function(e){e.data.success?0===e.data.result.length?a.errorMsg="등록된 상품이 없습니다.":a.itemsData=e.data.result:a.errorMsg=e.data.message})}else t.get("/api/item_type/"+r).then(function(e){e.data.success?0===e.data.result.length?a.errorMsg="등록된 상품이 없습니다.":a.itemsData=e.data.result:a.errorMsg=e.data.message})}]).controller("getTypeItemCtrl",["Admin","$stateParams","$window","$state","Order",function(e,t,a,r,n){var s=this,o=t.item_id;s.optionItem=!1,s.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},s.amount=1,s.optionList=[],this.addItem=function(e){0===e.id?a.alert("옵션을 선택해주세요."):(s.optionItem=!0,s.optionList.push({kind:e.name,price:e.id,amount:1}))},this.createBasket=function(e){var t={item_id:e.item_id};n.createBasket(t).then(function(e){e.data.success,a.alert(e.data.message)})},this.createOrder=function(e){var t={item_id:e.item_id,amount:e.amount,kind_of:e.kind_of,price:e.price};n.createOrder(t).then(function(e){e.data.success?(s.successMsg=e.data.message,r.go("app.makeOrder")):s.errorMsg=e.data})},e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(","),a=e.data.result.price.split(","),r=[];for(i=0;i<a.length;i++)r[i]=Number(a[i]);for(s.itemData=e.data.result,i=0;i<r.length;i++)s.data.availableOptions[i+1]={name:t[i],id:r[i]}}else s.errorMsg=e.data.message})}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,n,s,i,o,d,l){var c=this;c.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),n.$on("$stateChangeStart",function(){u?e.isLoggedIn()?(c.isLoggedIn=!0,c.loadme=!0,e.getUser().then(function(e){c.user=e.data,c.loadme=!0,d.getPermission().then(function(e){e.data.success?"admin"===e.data.permission?(c.authorized=!0,c.loadme=!0):"artist"===e.data.permission?(c.permission=!0,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0)})})):(c.user=!1,c.isLoggedIn=!1,c.loadme=!0):u()});var u=function(){if(e.isLoggedIn()){c.checkSession=!0;var t=o(function(){var e=i.localStorage.getItem("token");if(null===e)o.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(i.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(m("expired"),o.cancel(t))}},2e3)}};u(),c.renewSession=function(){c.choiceMade=!0,d.renewSession(c.user.username).then(function(e){e.data.success?(l.setToken(e.data.token),u(),p("expired")):(c.ModalBody=e.data.message,p("expired"))})},c.endSession=function(){c.choiceMade=!0,p("expired"),t(function(){m("logout")},500)};var m=function(a){c.choiceMade=!1,c.modalHeader=void 0,c.modalBody=void 0,c.hideButton=!1,"expired"===a?(c.modalHeader="Timeout Warning",c.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(c.hideButton=!0,c.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),c.isLoggedIn=!1,c.authorized=!1,c.permission=!1,c.disabled=!1,c.successMsg=!1,p("logout"),r.reload()},1e3)):"login"===a&&$("#login").modal({backdrop:"static"}),t(function(){c.choiceMade||p("logout")},2e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e&&$("#login").modal("hide")};this.doLogin=function(a,n){c.errorMsg=!1,c.expired=!1,c.disabled=!0,n?e.login(c.loginData).then(function(e){e.data.success?(c.successMsg=e.data.message,t(function(){c.loginData=null,c.isLoggedIn=!0,u(),r.go("app")},1e3)):e.data.expired?(c.expired=!0,c.disabled=!0,c.errorMsg=e.data.message):(c.disabled=!1,c.errorMsg=e.data.message)}):(c.disabled=!1,c.loading=!1,c.errorMsg="올바른 정보를 입력해주세요.")},c.logout=function(){m("logout")},c.resend=function(){p("login"),t(function(){r.go("resend"),c.expired=!1},500)},c.resetusername=function(){p("login"),t(function(){r.go("resetusername")},500)},c.resetpassword=function(){p("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("managementControllers",["adminServices","menuServices","orderServices"]).controller("readItemsCtrl",["Admin","$state",function(e,t){var a=this;e.readItems().then(function(e){a.errorMsg=!1,e.data.success?a.itemsData=e.data.result:a.errorMsg=e.data.message}),this.deleteItem=function(r){a.errorMsg=!1;var n=r.item_id;e.deleteItem(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]).controller("readItemCtrl",["Admin","$stateParams","$scope","Order","$window",function(e,t,a,r,n){var s=this,o=t.item_id;s.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},s.amount=1,e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(","),a=e.data.result.price.split(","),r=[];for(i=0;i<a.length;i++)r[i]=Number(a[i]);for(s.itemData=e.data.result,s.data.selectedOption={id:r[0]},i=0;i<r.length;i++)s.data.availableOptions[i+1]={name:t[i],id:r[i]}}else s.errorMsg=e.data.message})}]).controller("updateItemCtrl",["Admin","$stateParams","$scope","$http","$timeout","$state","$window","Menu",function(e,t,a,r,n,s,o,d){function l(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var c=this,u=t.item_id;c.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},d.readMainMenu().then(function(e){if(c.errorMsg=!1,e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)c.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else c.errorMsg=e.data.message}),this.readMenu=function(e){if(c.errorMsg=!1,c.readMenuStatus=!1,0===e.id)o.alert("카테고리를 선택해주세요.");else{var t=e.id;r.get("/api/menu/"+t).then(function(e){if(e.data.success)if(0===e.data.result.length)c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},o.alert("등록된 상품이 없습니다.");else{c.readMenuStatus=!0,c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)c.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}else c.errorMsg=e.data.message})}},e.readItem(u).then(function(e){console.log(e),e.data.success?(c.itemData=e.data.result,c.data.selectedOption={id:c.itemData.category_id}):c.errorMsg=e.data.message}),this.updateItem=function(e){if(c.errorMsg=!1,c.readMenuStatus)if(0===e.item_type||"0"===e.item_type)o.alert("상품 분류를 선택해주세요.!");else{var t={type:e.item_type,item_name:e.item_name};r.put("/api/item/"+u,t).then(function(e){e.data.success?(c.successMsg=e.data.message,s.reload()):c.errorMsg=e.data.message})}else updateData2={type:c.itemData.item_type_id,item_name:e.item_name},r.put("/api/item/"+u,updateData2).then(function(e){e.data.success?(c.successMsg=e.data.message,s.reload()):c.errorMsg=e.data.message})},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),c.mainThumbnail={},c.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),c.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),c.mainPhoto=!1,c.disabled=!0;var e=new FormData;e.append("myfile",c.file.upload),r.post("/api/createPhotoImage/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.mainPhoto=!0,c.disabled=!1;var t={image:e.data.item_path};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)}),c.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),c.disabled=!1,c.file={}})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),c.explainThumbnail={},c.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),c.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),c.explainPhoto=!1,c.disabled=!0;var e=new FormData;e.append("myfile",c.file.upload),r.post("/api/createPhotoExplain/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.explainPhoto=!0,c.disabled=!1;var t={explain:e.data.item_path};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)}),c.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),c.disabled=!1,c.file={}})},c.myImage="",c.myCroppedImage="";var m=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),c.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",m),this.readCropImage=function(t){if(a.$emit("LOAD"),c.thumbnail=!1,c.disabled=!0,""===t.base64Url||null===t.base64Url||void 0===t.base64Url)c.disabled=!1;else{a.$emit("UNLOAD");var n=l(a.myCroppedImage);e.readAristCrop(n).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.thumbnail=!0,c.disabled=!1;var t={thumbnail:e.data.filePath};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)})}else a.$emit("UNLOAD"),c.disabled=!1})}}}]).controller("createItemCtrl",["$http","$timeout","$scope","Admin","$state","$window","Menu",function(e,t,a,r,n,s,o){function d(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var l=this;l.kindList=[],l.type_tiny=[],l.type_price=[],this.addLine=function(e){e?null===e.kindValue||void 0===e.kindValue||""===e.kindValue?s.alert("옵션명을 입력해주세요."):null===e.kindPrice||void 0===e.kindPrice||""===e.kindPrice?s.alert("옵션 가격을 입력해주세요."):(l.kindList.push({kind:e.kindValue,price:e.kindPrice}),l.type_tiny.push(e.kindValue),l.type_price.push(e.kindPrice)):s.alert("정확한 값을 입력해주세요.")},l.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},l.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},o.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)l.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else l.errorMsg=e.data.message}),this.readMenu=function(t){if(0===t.id)s.alert("카테고리를 선택해주세요.");else{var a=t.id;e.get("/api/menu/"+a).then(function(e){if(e.data.success)if(0===e.data.result.length)l.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},s.alert("등록된 상품이 없습니다.");else{l.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)l.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}})}},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),l.mainThumbnail={},l.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),l.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),l.mainPhoto=!1,l.disabled=!0;var t=new FormData;t.append("myfile",l.file.upload),e.post("/api/createPhotoImage/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.mainPhoto=!0,l.disabled=!1,l.mainImagePath=e.data.item_path,l.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),l.disabled=!1,l.file={})})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),l.explainThumbnail={},l.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),l.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),l.explainPhoto=!1,l.disabled=!0;var t=new FormData;t.append("myfile",l.file.upload),e.post("/api/createPhotoExplain/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.explainPhoto=!0,l.disabled=!1,l.explainImagePath=e.data.item_path,l.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),l.disabled=!1,l.file={})})},l.myImage="",l.myCroppedImage="";var c=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),l.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",c),this.readCropImage=function(e){if(a.$emit("LOAD"),l.thumbnail=!1,l.disabled=!0,""===e.base64Url||null===e.base64Url||void 0===e.base64Url)l.disabled=!1;else{a.$emit("UNLOAD");var t=d(a.myCroppedImage);r.readAristCrop(t).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.thumbnail=!0,l.disabled=!1,l.thumbnailPath=e.data.filePath):(a.$emit("UNLOAD"),l.disabled=!1)})}},this.createPhoto=function(e){a.$emit("LOAD"),void 0===e||null===e||""===e?(s.alert("빈칸을 모두 입력해주세요."),l.disabled=!1,a.$emit("UNLOAD")):"0"===l.data2.selectedOption.id?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 분류을 선택해주세요.")):void 0===e.title||null===e.title||""===e.title?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 제목를 입력해주세요.")):(l.uploadData={title:e.title,type:l.data2.selectedOption.id,kind:l.type_tiny.toString(),price:l.type_price.toString()},r.createItem(l.uploadData).then(function(e){e.data.success?(a.$emit("UNLOAD"),l.disabled=!0,s.alert(e.data.message),n.reload()):(a.$emit("UNLOAD"),l.disabled=!1,s.alert(e.data.message))}))}}]),angular.module("menuControllers",["menuServices"]).controller("mainMenuCtrl",["Menu","$state",function(e,t){var a=this;e.readMainMenu().then(function(e){e.data.success?a.mainMenues=e.data.result:a.errorMsg=e.data.message}),this.createMenu=function(r){if(a.errorMsg=!1,void 0===r)a.errorMsg="올바른 정보를 입력해주세요.";else{var n={name:r.name};e.createMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}},this.update=function(r){a.errorMsg=!1;var n={category_id:r.category_id,name:r.name};e.updateMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})},this.delete=function(r){a.errorMsg=!1;var n=r.category_id;e.deleteMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]).controller("subMenuCtrl",["Menu","$state","$stateParams","$http",function(e,t,a,r){var n=this,s=a.category_id;r.get("/api/category/"+s).then(function(e){e.data.success&&(n.subMenuDatas=e.data.result)})}]),angular.module("orderControllers",["orderServices"]).controller("readOrderCtrl",["$stateParams","$state","$window","Order","$scope",function(e,t,a,r,n){var s=this,o=n.main.user.user_id;s.getItemFail=!1,s.cashReceipt=!0,s.cashReceipt?s.getCashReceipt=!0:s.getCashReceipt=!1,this.readAddress=function(){daum.postcode.load(function(){s.addressDetail="",new daum.Postcode({oncomplete:function(e){s.deliData={sigungu_code:e.sigunguCode,jibun_address:e.jibunAddress,road_address:e.roadAddress}}}).open()})},r.readOrderAndDeli().then(function(e){if(s.errorMsg=!1,e.data.success)if(0===e.data.result.length)s.delivery=!1,r.readOrder(o).then(function(e){var t=[];for(s.allItemPrice=0,s.orderData=e.data.result,i=0;i<s.orderData.length;i++)t[i]=s.orderData[i].price*s.orderData[i].amount;for(i=0;i<t.length;i++)s.allItemPrice=s.allItemPrice+t[i]});else{var t=[];for(s.delivery=!0,s.allItemPrice=0,s.orderData=e.data.result,i=0;i<s.orderData.length;i++)t[i]=s.orderData[i].price*s.orderData[i].amount;for(i=0;i<t.length;i++)s.allItemPrice=s.allItemPrice+t[i]}else s.errorMsg=e.data.message}),this.confirmOrder=function(e){var t="";s.delivery?void 0===e.daliData?console.log("변경사항 없음"):(t=e.daliData,r.updateDelivery(t).then(function(e){})):(t=e.daliData,e.receiptData,r.createDelivery(t).then(function(e){}))},this.delete=function(e){s.errorMsg=!1;var a=e.item_id;r.deleteOrder(a).then(function(e){e.data.success?(s.successMsg=e.data.message,t.reload()):s.errorMsg=e.data.message})}}]).controller("basketCtrl",["Order","$window","$state",function(e,t,a){var r=this;r.amount=1,r.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},this.delete=function(t){r.errorMsg=!1;var n=t.basket_id;e.deleteBasket(n).then(function(e){e.data.success?(r.successMsg=e.data.message,a.reload()):r.errorMsg=e.data.message})},this.makeBasket=function(){},e.readBasket().then(function(e){if(r.errorMsg=!1,e.data.success){r.basketData=e.data.result;var t,a=[],n=[];for(t=0;t<r.basketData.length;t++)a[t]=r.basketData[t].kind.split(","),n[t]=r.basketData[t].price.split(",");for(t=0;t<a.length;t++)for(r.data[t]={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},j=0;j<a[t].length;j++)r.data[t].availableOptions[j+1]={name:a[t][j],id:Number(n[t][j])}}else r.errorMsg=e.data.message})}]),angular.module("typeControllers",["adminServices","menuServices","orderServices"]).controller("updateItemTypeCtrl",["$stateParams","Menu","Admin","$state",function(e,t,a,r){var n=this,s=e.item_id;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readUpdateItemType(s).then(function(e){if(n.errorMsg=!1,e.data.success){t.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.updataData=e.data.result,n.data.selectedOption={id:n.updataData.category_id};var a={kind:n.updataData.kind.split(","),price:n.updataData.price.split(",")};for(n.optionDatas=[],i=0;i<a.kind.length;i++)n.optionDatas[i]={kind:a.kind[i],price:a.price[i]}}else n.errorMsg=e.data.message}),this.updateType=function(e){n.updateData=e,n.updateData.category_id=n.data.selectedOption.id,a.updateUpdateType(n.updateData).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})},this.updateitemType=function(e){var t=[],s=[];for(i=0;i<n.optionDatas.length;i++)t.push(n.optionDatas[i].kind),s.push(n.optionDatas[i].price);var o={item_id:e.item_id,item_name:e.item_name,price:s.toString(),kind:t.toString()};a.updateItemType(o).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})}}]).controller("readItemTypeCtrl",["Admin","$state","$window","Menu",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.copyItemType=function(a){var r={type:a.item_type_id,title:a.item_name,kind:a.kind.toString(),price:a.price.toString()};e.createItem(r).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},this.deleteType=function(a){n.errorMsg=!1;var r=a.item_id;e.deleteItem(r).then(function(e){e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},e.readItemType().then(function(e){if(e.data.success){r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(a=0;a<t.length;a++)n.data.availableOptions[a+1]={name:t[a].name,id:t[a].category_id}}else n.errorMsg=e.data.message}),n.typeDatas=e.data.result;for(var t=[],a=0;a<e.data.result.length;a++)t[a]={kind:n.typeDatas[a].kind.split(","),price:n.typeDatas[a].price.split(",")},n.typeDatas[a].kind=t[a].kind,n.typeDatas[a].price=t[a].price}else n.errorMsg=e.data.message})}]).controller("updateTypeCtrl",["$stateParams","Menu","Admin","$state",function(e,t,a,r){var n=this,s=e.item_type;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readUpdateType(s).then(function(e){n.errorMsg=!1,e.data.success?(t.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.updataData=e.data.result,n.data.selectedOption={id:n.updataData.category_id}):n.errorMsg=e.data.message}),this.updateType=function(e){n.updateData=e,n.updateData.category_id=n.data.selectedOption.id,a.updateUpdateType(n.updateData).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})}
}]).controller("readTypeCtrl",["Admin","$state","$window","Menu",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.copyType=function(a){var r={category:a.category_id,type_description:a.type_description,type_code:a.type_code};e.createType(r).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},this.deleteType=function(a){n.errorMsg=!1;var r=a.item_type;e.deleteType(r).then(function(e){e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},e.readType().then(function(e){e.data.success?(r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.typeDatas=e.data.result):n.errorMsg=e.data.message})}]).controller("createTypeCtrl",["Admin","$state","Menu","$window",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),this.createType=function(a){n.errorMsg=!1,n.typeData={category:n.data.selectedOption.id,type_description:a.type_description,type_code:a.type_code},e.createType(n.typeData).then(function(e){e.data.success?(n.success=e.data.message,t.reload()):n.errorMsg=e.data.message})},n.kindList=[],n.type_tiny=[],n.type_price=[],this.addLine=function(e){e?null===e.kindValue||void 0===e.kindValue||""===e.kindValue?r.alert("옵션명을 입력해주세요."):null===e.kindPrice||void 0===e.kindPrice||""===e.kindPrice?r.alert("옵션 가격을 입력해주세요."):(n.kindList.push({kind:e.kindValue,price:e.kindPrice}),n.type_tiny.push(e.kindValue),n.type_price.push(e.kindPrice)):r.alert("정확한 값을 입력해주세요.")}}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var n=this;t.activeAccount(e.token).then(function(e){n.successMsg=!1,n.errorMsg=!1,e.data.success?(n.disabled=!0,n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(n.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,n){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,i,o){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,i&&o?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){n.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,n,s){var i=this;this.regStep1=function(e){i.errorMsg=!1,e?e.terms&&e.privacy?(i.successMsg="약관에 성공적으로 동의하셨습니다.",i.disabled=!0,s.go("app.registerStep2")):(i.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",i.disabled=!1):i.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,a){i.errorMsg=!1,i.disabled=!0,s.go("app.registerStep3")},this.regStep3=function(e,t,o){i.errorMsg=!1,i.disabled=!0,t&&o?r.create(i.regData).then(function(e){e.data.success?(i.disabled=!0,i.successMsg=e.data.message,n.login(i.regData).then(function(e){e.data.success?(i.disabled=!0,i.successMsg=e.data.message,a(function(){s.go("app")},1e3)):e.data.expired?(i.expired=!0,i.disabled=!0,i.errorMsg=e.data.message):(i.disabled=!1,i.errorMsg=e.data.message)})):(i.disabled=!1,i.errorMsg=e.data.message)}):(i.disabled=!1,i.loading=!1,i.errorMsg="올바른 정보를 입력해주세요.")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlLmpzIiwiZGlyZWN0aXZlcy9maWxlTW9kZWwuanMiLCJkaXJlY3RpdmVzL21hdGNoUGFzc3dvcmQuanMiLCJzZXJ2aWNlcy9hZG1pblNlcnZpY2VzLmpzIiwic2VydmljZXMvYXV0aFNlcnZpY2VzLmpzIiwic2VydmljZXMvbWVudVNlcnZpY2VzLmpzIiwic2VydmljZXMvb3JkZXJTZXJ2aWNlcy5qcyIsInNlcnZpY2VzL3VzZXJTZXJ2aWNlcy5qcyIsImNvbnRvcm9sbGVycy9tYWluL2l0ZW1Db250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21haW5Db250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21hbmFnZW1lbnRDb250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL21lbnVDb250cm9sbGVycy5qcyIsImNvbnRvcm9sbGVycy9tYWluL29yZGVyQ29udHJvbGxlcnMuanMiLCJjb250b3JvbGxlcnMvbWFpbi90eXBlQ29udHJvbGxlcnMuanMiLCJjb250b3JvbGxlcnMvdXNlci9lbWFpbEN0cmwuanMiLCJjb250b3JvbGxlcnMvdXNlci91c2VyQ3RybC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJGh0dHBQcm92aWRlciIsImludGVyY2VwdG9ycyIsInB1c2giLCJhcHAiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwib3RoZXJ3aXNlIiwiaGFzaFByZWZpeCIsImh0bWw1TW9kZSIsInN0YXRlIiwidXJsIiwidmlld3MiLCJoZWFkZXIiLCJ0ZW1wbGF0ZVVybCIsImNvbnRlbnQiLCJtZW51QGFwcCIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJhY2NvdW50QGFwcCIsImNvbnRlbnRzQGFwcCIsInF1aWNrTWVudUBhcHAiLCJmb290ZXIiLCJjb250ZW50QCIsIm1lbnVAYXBwLm1hbmFnZW1lbnQiLCJjb250ZW50c0BhcHAubWFuYWdlbWVudCIsInN1Yk1lbnVAYXBwIiwiYXV0aGVudGljYXRlZCIsInJ1biIsIiRyb290U2NvcGUiLCJVc2VyIiwiJHN0YXRlIiwiJG9uIiwiZXZlbnQiLCJ0b1N0YXRlIiwidG9QYXJhbXMiLCJmcm9tU3RhdGUiLCJmcm9tUGFyYW1zIiwib3B0aW9ucyIsImVycm9yIiwiZ28iLCJkaXJlY3RpdmUiLCIkcGFyc2UiLCJyZXN0cmljdCIsImxpbmsiLCJzY29wZSIsImVsZW1lbnQiLCJhdHRycyIsInBhcnNlZEZpbGUiLCJmaWxlTW9kZWwiLCJwYXJzZWRmaWxlU2V0dGVyIiwiYXNzaWduIiwiYmluZCIsIiRhcHBseSIsImZpbGVzIiwiJHNjb3BlIiwiZG9Db25maXJtIiwidmFsdWVzIiwiY29uZmlybWVkIiwiZm9yRWFjaCIsImVsZSIsImNvbmZpcm0iLCIkb2JzZXJ2ZSIsIm1hdGNoZXMiLCJKU09OIiwicGFyc2UiLCJtYXRjaCIsIiR3YXRjaCIsImZhY3RvcnkiLCIkaHR0cCIsImFkbWluRmFjdG9yeSIsImRlbGV0ZUl0ZW0iLCJpdGVtX2lkIiwiZGVsZXRlIiwicmVhZEFyaXN0Q3JvcCIsImJsb2IiLCJwb3N0IiwiY3JlYXRlQXJpc3RQaG90byIsInBob3RvRGF0YSIsImNyZWF0ZUl0ZW0iLCJpdGVtRGF0YSIsInJlYWRJdGVtcyIsImdldCIsInJlYWRJdGVtIiwidXBkYXRlSXRlbVR5cGUiLCJ1cGRhdGVEYXRhIiwicHV0IiwicmVhZFVwZGF0ZUl0ZW1UeXBlIiwicmVhZEl0ZW1UeXBlIiwiZGVsZXRlVHlwZSIsIml0ZW1fdHlwZV9pZCIsInJlYWRVcGRhdGVUeXBlIiwiaXRlbV90eXBlIiwidXBkYXRlVXBkYXRlVHlwZSIsImNyZWF0ZVR5cGUiLCJ0eXBlRGF0YSIsInJlYWRUeXBlIiwiQXV0aFRva2VuIiwiYXV0aEZhY3RvcnkiLCJnZXRVc2VyIiwiZ2V0VG9rZW4iLCIkcSIsInJlamVjdCIsIm1lc3NhZ2UiLCJsb2dpbiIsImxvZ2luRGF0YSIsInRoZW4iLCJkYXRhIiwic2V0VG9rZW4iLCJ0b2tlbiIsImlzTG9nZ2VkSW4iLCJsb2dvdXQiLCIkd2luZG93IiwiYXV0aFRva2VuRmFjdG9yeSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwiZ2V0SXRlbSIsImF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5IiwicmVxdWVzdCIsImhlYWRlcnMiLCJtZW51RmFjdG9yeSIsImRlbGV0ZU1lbnUiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZU1lbnUiLCJjcmVhdGVNZW51IiwibWVudURhdGEiLCJyZWFkTWFpbk1lbnUiLCJyZWFkU3ViTWVudSIsIm1haW5NZW51VHlwZSIsIm9yZGVyRmFjdG9yeSIsInVwZGF0ZURlbGl2ZXJ5IiwiZGVsaURhdGEiLCJ1c2VyX2lkIiwiY3JlYXRlRGVsaXZlcnkiLCJkZWxldGVCYXNrZXQiLCJiYXNrZXRfaWQiLCJyZWFkQmFza2V0IiwiY3JlYXRlQmFza2V0IiwiYmFza2V0RGF0YSIsImRlbGV0ZU9yZGVyIiwicmVhZE9yZGVyIiwicmVhZE9yZGVyQW5kRGVsaSIsImNyZWF0ZU9yZGVyIiwib3JkZXJEYXRhIiwidXNlckZhY3RvcnkiLCJnZXRQZXJtaXNzaW9uIiwiY3JlYXRlIiwicmVnRGF0YSIsImFjdGl2ZUFjY291bnQiLCJjaGVja0NyZWRlbnRpYWxzIiwicmVzZW5kTGluayIsInVzZXJuYW1lIiwic2VuZFVzZXJuYW1lIiwidXNlckRhdGEiLCJzZW5kUGFzc3dvcmQiLCJyZXNldERhdGEiLCJyZXNldFBhc3N3b3JkIiwic2F2ZVBhc3N3b3JkIiwicmVuZXdTZXNzaW9uIiwiZmlsdGVyIiwiaW5wdXQiLCJwcm9wZXJ0eSIsImkiLCJBcnJheSIsImxlbmd0aCIsInRvdGFsIiwiJHN0YXRlUGFyYW1zIiwidGhpcyIsInR5cGVfY29kZSIsInBhcmFtcyIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJlcnJvck1zZyIsIml0ZW1zRGF0YSIsIkFkbWluIiwiT3JkZXIiLCJvcHRpb25JdGVtIiwiYXZhaWxhYmxlT3B0aW9ucyIsImlkIiwibmFtZSIsInNlbGVjdGVkT3B0aW9uIiwiYW1vdW50Iiwib3B0aW9uTGlzdCIsImFkZEl0ZW0iLCJhbGVydCIsImtpbmQiLCJwcmljZSIsImtpbmRfb2YiLCJzdWNjZXNzTXNnIiwic3BsaXQiLCJ0ZW1wIiwiTnVtYmVyIiwiQXV0aCIsIiR0aW1lb3V0IiwiJGxvY2F0aW9uIiwiJGludGVydmFsIiwibG9hZG1lIiwibG9hZGluZyIsImNoZWNrU2Vzc2lvbiIsInVzZXIiLCJwZXJtaXNzaW9uIiwiYXV0aG9yaXplZCIsImludGVydmFsIiwiY2FuY2VsIiwic2VsZiIsInBhcnNlSnd0IiwiYmFzZTY0VXJsIiwiYmFzZTY0IiwicmVwbGFjZSIsImF0b2IiLCJleHBpcmVUaW1lIiwidGltZVN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsIm5vdyIsImV4cCIsInNob3dNb2RhbCIsImNob2ljZU1hZGUiLCJoaWRlTW9kYWwiLCJNb2RhbEJvZHkiLCJlbmRTZXNzaW9uIiwib3B0aW9uIiwibW9kYWxIZWFkZXIiLCJ1bmRlZmluZWQiLCJtb2RhbEJvZHkiLCJoaWRlQnV0dG9uIiwiJCIsIm1vZGFsIiwiYmFja2Ryb3AiLCJkaXNhYmxlZCIsInJlbG9hZCIsImRvTG9naW4iLCJ2YWxpZCIsImV4cGlyZWQiLCJyZXNlbmQiLCJyZXNldHVzZXJuYW1lIiwicmVzZXRwYXNzd29yZCIsIk1lbnUiLCJkZWNvZGVCYXNlNjRJbWFnZSIsImRhdGFTdHJpbmciLCJFcnJvciIsInR5cGUiLCJkYXRhMiIsInJlYWRNZW51IiwicmVhZE1lbnVTdGF0dXMiLCJ0eXBlX2Rlc2NyaXB0aW9uIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZUl0ZW0iLCJpdGVtX25hbWUiLCJ1cGRhdGVEYXRhMiIsImZpbGUiLCJtYWluUGhvdG9DaGFuZ2VkIiwiJGVtaXQiLCJmaWxlUmVhZGVyIiwiRmlsZVJlYWRlciIsInJlYWRBc0RhdGFVUkwiLCJvbmxvYWQiLCJlIiwibWFpblRodW1ibmFpbCIsImRhdGFVcmwiLCJ0YXJnZXQiLCJyZWFkUGhvdG8iLCJtYWluUGhvdG8iLCJmZCIsIkZvcm1EYXRhIiwiYXBwZW5kIiwidXBsb2FkIiwidHJhbnNmb3JtUmVxdWVzdCIsImlkZW50aXR5IiwiQ29udGVudC1UeXBlIiwiaW1hZ2UiLCJpdGVtX3BhdGgiLCJleHBsYWluUGhvdG9DaGFuZ2VkIiwiZXhwbGFpblRodW1ibmFpbCIsInJlYWRQaG90b0V4cGxhaW4iLCJleHBsYWluUGhvdG8iLCJleHBsYWluIiwibXlJbWFnZSIsIm15Q3JvcHBlZEltYWdlIiwiaGFuZGxlRmlsZVNlbGVjdCIsImV2dCIsImN1cnJlbnRUYXJnZXQiLCJyZWFkZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJvbiIsInJlYWRDcm9wSW1hZ2UiLCJ0aHVtYm5haWwiLCJmaWxlUGF0aCIsImtpbmRMaXN0IiwidHlwZV90aW55IiwidHlwZV9wcmljZSIsImFkZExpbmUiLCJraW5kRGF0YSIsImtpbmRWYWx1ZSIsImtpbmRQcmljZSIsIm1haW5JbWFnZVBhdGgiLCJleHBsYWluSW1hZ2VQYXRoIiwidGh1bWJuYWlsUGF0aCIsImNyZWF0ZVBob3RvIiwidXBsb2FkRGF0YSIsInRpdGxlIiwidG9TdHJpbmciLCJtYWluTWVudWVzIiwidXBkYXRlIiwiZGVsZXRlRGF0YSIsInN1Yk1lbnVEYXRhcyIsIm1haW4iLCJnZXRJdGVtRmFpbCIsImNhc2hSZWNlaXB0IiwiZ2V0Q2FzaFJlY2VpcHQiLCJyZWFkQWRkcmVzcyIsImRhdW0iLCJwb3N0Y29kZSIsImxvYWQiLCJhZGRyZXNzRGV0YWlsIiwiUG9zdGNvZGUiLCJvbmNvbXBsZXRlIiwic2lndW5ndV9jb2RlIiwic2lndW5ndUNvZGUiLCJqaWJ1bl9hZGRyZXNzIiwiamlidW5BZGRyZXNzIiwicm9hZF9hZGRyZXNzIiwicm9hZEFkZHJlc3MiLCJvcGVuIiwiZGVsaXZlcnkiLCJpdGVtUHJpY2UiLCJhbGxJdGVtUHJpY2UiLCJjb25maXJtT3JkZXIiLCJkYWxpRGF0YSIsInJlY2VpcHREYXRhIiwibWFrZUJhc2tldCIsImoiLCJ1cGRhdGFEYXRhIiwic3BsaXRPcHRpb25EYXRhcyIsIm9wdGlvbkRhdGFzIiwidXBkYXRlVHlwZSIsInVwZGF0ZWl0ZW1UeXBlIiwia2luZEFycmF5IiwicHJpY2VBcnJheSIsImNvcHlJdGVtVHlwZSIsInR5cGVEYXRhcyIsImtpbmREYXRhcyIsImNvcHlUeXBlIiwiY2F0ZWdvcnkiLCJlbWFpbCIsImhpZGUiLCJyZWdTdGVwMSIsInJlZ1N0ZXAyIiwicmVnU3RlcDMiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUFDQSxlQUNBLGtCQUNBLGtCQUNBLGtCQUNBLG1CQUNBLHdCQUNBLGtCQUNBLGtCQUNBLG1CQUNBLGNBQ0FDLFFBQUEsZ0JBQUEsU0FBQUMsR0FDQUEsRUFBQUMsYUFBQUMsS0FBQSxzQkNiQSxJQUFBQyxLQUFBTixRQUFBQyxPQUFBLE1BQ0FLLEtBQUFKLFFBQUEsaUJBQUEscUJBQUEsb0JBQUEsU0FBQUssRUFBQUMsRUFBQUMsR0FDQUQsRUFBQUUsVUFBQSxLQUNBRCxFQUFBRSxXQUFBLElBQ0FGLEVBQUFHLFdBQUEsR0FFQUwsRUFDQU0sTUFBQSxPQUNBQyxJQUFBLElBQ0FDLE9BQ0FDLFFBQ0FDLFlBQUEsdUJBRUFDLFNBQ0FELFlBQUEsbUJBRUFFLFlBQ0FGLFlBQUEsd0JBQ0FHLFdBQUEsZUFDQUMsYUFBQSxZQUVBQyxlQUNBTCxZQUFBLHNCQUVBTSxnQkFDQU4sWUFBQSxtQkFFQU8saUJBQ0FQLFlBQUEsd0JBRUFRLFFBQ0FSLFlBQUEsMkJBS0FKLE1BQUEscUJBRUFDLElBQUEsaUJBQ0FDLE9BQ0FRLGdCQUNBTixZQUFBLHFDQUNBRyxXQUFBLFVBQ0FDLGFBQUEsZUFNQVIsTUFBQSxxQkFFQUMsSUFBQSxpQkFDQUMsT0FDQVEsZ0JBQ0FOLFlBQUEscUNBQ0FHLFdBQUEsVUFDQUMsYUFBQSxlQUtBUixNQUFBLHFCQUVBQyxJQUFBLGlCQUNBQyxPQUNBUSxnQkFDQU4sWUFBQSxxQ0FDQUcsV0FBQSxVQUNBQyxhQUFBLGVBS0FSLE1BQUEsYUFDQUMs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aEosRUFBQWlKLFNBQUExQyxLQUFBLFNBQUFDLEdBQ0FBLEVBQUFBLEtBQUFnRSxTQUNBeEssRUFBQW9PLFVBQUEsRUFDQXBPLEVBQUEwTCxXQUFBbEYsRUFBQUEsS0FBQUosUUFDQTBGLEVBQUF6RixNQUFBckcsRUFBQWlKLFNBQUExQyxLQUFBLFNBQUFDLEdBQ0FBLEVBQUFBLEtBQUFnRSxTQUNBeEssRUFBQW9PLFVBQUEsRUFDQXBPLEVBQUEwTCxXQUFBbEYsRUFBQUEsS0FBQUosUUFDQTJGLEVBQUEsV0FDQW5LLEVBQUFTLEdBQUEsUUFDQSxNQUVBbUUsRUFBQUEsS0FBQWdJLFNBQ0F4TyxFQUFBd08sU0FBQSxFQUNBeE8sRUFBQW9PLFVBQUEsRUFDQXBPLEVBQUEwSyxTQUFBbEUsRUFBQUEsS0FBQUosVUFFQXBHLEVBQUFvTyxVQUFBLEVBQ0FwTyxFQUFBMEssU0FBQWxFLEVBQUFBLEtBQUFKLGFBS0FwRyxFQUFBb08sVUFBQSxFQUNBcE8sRUFBQTBLLFNBQUFsRSxFQUFBQSxLQUFBSixZQUtBcEcsRUFBQW9PLFVBQUEsRUFDQXBPLEVBQUFtTSxTQUFBLEVBQ0FuTSxFQUFBMEssU0FBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJyxbXHJcbiAgICAndWkucm91dGVyJyxcclxuICAgICd1aS5ib290c3RyYXAnLFxyXG4gICAgJ21lbnVDb250cm9sbGVycycsXHJcbiAgICAndXNlckNvbnRyb2xsZXJzJyxcclxuICAgICdtYWluQ29udHJvbGxlcnMnLFxyXG4gICAgJ2VtYWlsQ29udHJvbGxlcnMnLFxyXG4gICAgJ21hbmFnZW1lbnRDb250cm9sbGVycycsXHJcbiAgICAnaXRlbUNvbnRyb2xsZXJzJyxcclxuICAgICd0eXBlQ29udHJvbGxlcnMnLFxyXG4gICAgJ29yZGVyQ29udHJvbGxlcnMnLFxyXG4gICAgJ3VpQ3JvcHBlcidcclxuXSkuY29uZmlnKGZ1bmN0aW9uKCRodHRwUHJvdmlkZXIpe1xyXG4gICRodHRwUHJvdmlkZXIuaW50ZXJjZXB0b3JzLnB1c2goJ0F1dGhJbnRlcmNlcHRvcnMnKTtcclxufSk7XHJcbiIsInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXBwJyk7XHJcbmFwcC5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XHJcbiR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcclxuJGxvY2F0aW9uUHJvdmlkZXIuaGFzaFByZWZpeCgnJyk7XHJcbiRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcclxuXHJcbiAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgICAgIC5zdGF0ZSgnYXBwJywge1xyXG4gICAgICAgICAgICAgdXJsOiAnLycsXHJcbiAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICdoZWFkZXInOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21lbnVlcy9oZWFkZXIuaHRtbCdcclxuICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgJ2NvbnRlbnQnOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vZm9ybS5odG1sJ1xyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAnbWVudUBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWVudWVzL21haW5NZW51Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ21haW5NZW51J1xyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAnYWNjb3VudEBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9hY2NvdW50Lmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9ob21lLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdxdWlja01lbnVAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vcXVpY2tNZW51Lmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdmb290ZXInOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvZm9vdGVyLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLnJlZ2lzdGVyU3RlcDEnLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICdyZWdpc3Rlci9zdGVwMScsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyU3RlcDEuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVnQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWdpc3RlcidcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5yZWdpc3RlclN0ZXAyJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAncmVnaXN0ZXIvc3RlcDInLFxyXG4gICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZWdpc3Rlci9yZWdpc3RlclN0ZXAyLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVnaXN0ZXInXHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5yZWdpc3RlclN0ZXAzJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAncmVnaXN0ZXIvc3RlcDMnLFxyXG4gICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZWdpc3Rlci9yZWdpc3RlclN0ZXAzLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVnaXN0ZXInXHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5sb2dpbicsIHtcclxuICAgICAgICAgICAgICB1cmw6ICdsb2dpbicsXHJcbiAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL2xvZ2luL2xvZ2luLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLm1hbmFnZW1lbnQnLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICdtYW5hZ2VtZW50JyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50QCcgOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L2Zvcm0uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAnbWVudUBhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvbWVudS5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC5jYXRlZ29yeScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJ2NhdGVnb3J5JyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9jYXRlZ29yeS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnbWFpbk1lbnUnXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcycsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy90eXBlQW5kSXRlbXMnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3R5cGVBbmRJdGVtcy5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcy51cGRhdGUnLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICcvdXBkYXRlVHlwZTppdGVtX3R5cGUnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3VwZGF0ZS90eXBlLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3VwZGF0ZVR5cGVDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VwZGF0ZVR5cGUnXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcy51cGRhdGVJdGVtVHlwZScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy91cGRhdGVJdGVtOml0ZW1faWQnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3VwZGF0ZS9pdGVtVHlwZS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd1cGRhdGVJdGVtVHlwZUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAndXBkYXRlSXRlbVR5cGUnXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcy51cGRhdGVJdGVtJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL3VwZGF0ZS9pdGVtOml0ZW1faWQnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3VwZGF0ZS9pdGVtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3VwZGF0ZUl0ZW1DdHJsJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VwZGF0ZUl0ZW0nXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcy5yZWFkSXRlbScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJzppdGVtX2lkJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9yZWFkL2l0ZW0uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVhZEl0ZW1DdHJsJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3JlYWRJdGVtJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LmJhbm5lcicsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy9iYW5uZXInLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL2Jhbm5lci5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LmdhbGxlcnknLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICcvZ2FsbGVyeScsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvZ2FsbGVyeS5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50Lm9yZGVyU3RhdHVzJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL29yZGVyU3RhdHVzJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9vcmRlclN0YXR1cy5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50Lm1lbWJlcnMnLFxyXG4gICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICB1cmw6ICcvbWVtYmVycycsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvbWVtYmVycy5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC51c2VyJywge1xyXG4gICAgICAgICAgICAgIHVybDogJ3VzZXInLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9wYXJ0aWFsL3VzZXIuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5jb21tZXJjZURldGFpbCcsIHtcclxuICAgICAgICAgICAgICB1cmw6ICdjb21tZXJjZS1kZXRhaWwnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9wYXJ0aWFsL2NvbW1lcmNlRGV0YWlsLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuYmFza2V0Jywge1xyXG4gICAgICAgICAgICAgIHVybDogJ2Jhc2tldCcsXHJcbiAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3BhcnRpYWwvYmFza2V0Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnYmFza2V0Q3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2Jhc2tldCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5jYXRlZ29yeScsIHtcclxuICAgICAgICAgICAgICB1cmw6ICdjYXRlZ29yeT06Y2F0ZWdvcnlfaWQnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnc3ViTWVudUBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21lbnVlcy9zdWJNZW51Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnc3ViTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdzdWJNZW51J1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NhdGVnb3J5ZXMvaXRlbXMvZm9ybS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dldFR5cGVJdGVtc0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbXMnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5jYXRlZ29yeS5pdGVtX3R5cGUnLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL2l0ZW1fdHlwZT06dHlwZV9jb2RlJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9pdGVtcy9mb3JtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZ2V0VHlwZUl0ZW1zQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2dldFR5cGVJdGVtcydcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLmNhdGVnb3J5Lml0ZW1fdHlwZS5zaG93Jywge1xyXG4gICAgICAgICAgICAgIHVybDogJy9pdGVtOml0ZW1faWQnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jYXRlZ29yeWVzL2l0ZW1zL2l0ZW0uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnZXRUeXBlSXRlbUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbSdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5jYXRlZ29yeS5zaG93Jywge1xyXG4gICAgICAgICAgICAgIHVybDogJy9pdGVtOml0ZW1faWQnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jYXRlZ29yeWVzL2l0ZW1zL2l0ZW0uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnZXRUeXBlSXRlbUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbSdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5tYWtlT3JkZXInLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnbWFrZU9yZGVyJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvb3JkZXIvbWFrZU9yZGVyLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVhZE9yZGVyQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3JlYWRPcmRlcidcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5jb25maXJtT3JkZXInLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnY29uZmlybU9yZGVyJyxcclxuICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvb3JkZXIvY29uZmlybU9yZGVyLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVhZE9yZGVyQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3JlYWRPcmRlckN0cmwnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuYm9hcmQnLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnYm9hcmQnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jYXRlZ29yeWVzL2JvYXJkL2Zvcm0uaHRtbCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVzZXR1c2VybmFtZScsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvcmVzZXR1c2VybmFtZScsXHJcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcmVzZXQvdXNlcm5hbWUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3VzZXJuYW1lQ3RybCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAndXNlcm5hbWUnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ3Jlc2V0cGFzc3dvcmQnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL3Jlc2V0cGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3Jlc2V0L3Bhc3N3b3JkLmh0bWwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdwYXNzd29yZEN0cmwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3Bhc3N3b3JkJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZXNldCcsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvcmVzZXQvOnRva2VuJyxcclxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZXNldC9uZXdwYXNzd29yZC5odG1sJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVzZXRDdHJsJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZXNldCdcclxuICAgICAgICAgICAgfSlcclxuXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FjdGl2YXRlJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJy9hY3RpdmF0ZS86dG9rZW4nLFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL2FjdGl2YXRpb24vYWN0aXZhdGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2VtYWlsQ3RybCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnZW1haWwnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ3Jlc2VuZCcsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvcmVzZW5kJyxcclxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9hY3RpdmF0aW9uL3Jlc2VuZC5odG1sJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVzZW5kQ3RybCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVzZW5kJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLmludHJvJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJ2ludHJvJyxcclxuICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvaW50cm8uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAudGVybXMnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAndGVybXMnLFxyXG4gICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY29tcGFueS90ZXJtcy5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5wcml2YWN5JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJ3ByaXZhY3knLFxyXG4gICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY29tcGFueS9wcml2YWN5Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG59KTtcclxuXHJcbmFwcC5ydW4oZnVuY3Rpb24oJHJvb3RTY29wZSwgVXNlciwgJHN0YXRlKXtcclxuICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCAgZnVuY3Rpb24oZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMsIG9wdGlvbnMpe1xyXG4gIH0pO1xyXG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VFcnJvcicsICBmdW5jdGlvbihldmVudCwgdG9TdGF0ZSwgdG9QYXJhbXMsIGZyb21TdGF0ZSwgZnJvbVBhcmFtcywgZXJyb3Ipe1xyXG4gICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdmaWxlTW9kZWwnLGZ1bmN0aW9uKCRwYXJzZSl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICB2YXIgcGFyc2VkRmlsZSA9ICRwYXJzZShhdHRycy5maWxlTW9kZWwpO1xyXG4gICAgICB2YXIgcGFyc2VkZmlsZVNldHRlciA9IHBhcnNlZEZpbGUuYXNzaWduO1xyXG5cclxuICAgICAgZWxlbWVudC5iaW5kKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBwYXJzZWRmaWxlU2V0dGVyKHNjb3BlLCBlbGVtZW50WzBdLmZpbGVzWzBdKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdtYXRjaCcsZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgIGNvbnRyb2xsZXI6ZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgJHNjb3BlLmRvQ29uZmlybSA9IGZ1bmN0aW9uKHZhbHVlcyl7XHJcblxyXG4gICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbihlbGUpe1xyXG4gICAgICAgICAgaWYoJHNjb3BlLmNvbmZpcm0gPT0gZWxlKXtcclxuICAgICAgICAgICAgJHNjb3BlLmNvbmZpcm1lZCA9IHRydWU7XHJcbiAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuICAgIH0sXHJcblxyXG4gICAgbGluazpmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICBhdHRycy4kb2JzZXJ2ZSgnbWF0Y2gnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHNjb3BlLm1hdGNoZXMgPSBKU09OLnBhcnNlKGF0dHJzLm1hdGNoKTtcclxuICAgICAgICBzY29wZS5kb0NvbmZpcm0oc2NvcGUubWF0Y2hlcyk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgc2NvcGUuJHdhdGNoKCdjb25maXJtJywgZnVuY3Rpb24oKXtcclxuICAgICAgICBzY29wZS5tYXRjaGVzID0gSlNPTi5wYXJzZShhdHRycy5tYXRjaCk7XHJcbiAgICAgICAgc2NvcGUuZG9Db25maXJtKHNjb3BlLm1hdGNoZXMpO1xyXG5cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhZG1pblNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ0FkbWluJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIGFkbWluRmFjdG9yeSA9IHt9O1xyXG5cclxuICBhZG1pbkZhY3RvcnkuZGVsZXRlSXRlbSA9IGZ1bmN0aW9uKGl0ZW1faWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9pdGVtLycraXRlbV9pZCk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRBcmlzdENyb3AgPSBmdW5jdGlvbihibG9iKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZUNyb3BJbWFnZScsIGJsb2IpO1xyXG4gIH07XHJcbiAgLy8gQXJ0aXN0LmNyZWF0ZVBob3RvKHBob3RvRGF0YSlcclxuICBhZG1pbkZhY3RvcnkuY3JlYXRlQXJpc3RQaG90byA9IGZ1bmN0aW9uKHBob3RvRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hcnRpc3RQcm9maWxlcycsIHBob3RvRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LmNyZWF0ZUl0ZW0gPSBmdW5jdGlvbihpdGVtRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9pdGVtJywgaXRlbURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkSXRlbXMgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtJyk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRJdGVtID0gZnVuY3Rpb24oaXRlbV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2l0ZW0vJytpdGVtX2lkKTtcclxuICB9O1xyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PSB0eXBlU2VydmljZXMg7IOd7ISxID09PT09PT09PT09PT09PT09PT09PT09PT09PSAvL1xyXG5cclxuXHJcbiAgYWRtaW5GYWN0b3J5LnVwZGF0ZUl0ZW1UeXBlID0gZnVuY3Rpb24odXBkYXRlRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL2l0ZW1UeXBlJywgdXBkYXRlRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRVcGRhdGVJdGVtVHlwZSA9IGZ1bmN0aW9uKGl0ZW1faWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtVHlwZS8nK2l0ZW1faWQpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkSXRlbVR5cGUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtVHlwZScpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5kZWxldGVUeXBlID0gZnVuY3Rpb24oaXRlbV90eXBlX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvdHlwZS8nK2l0ZW1fdHlwZV9pZCk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRVcGRhdGVUeXBlID0gZnVuY3Rpb24oaXRlbV90eXBlKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdHlwZS8nK2l0ZW1fdHlwZSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnVwZGF0ZVVwZGF0ZVR5cGUgPSBmdW5jdGlvbih1cGRhdGVEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdHlwZScsIHVwZGF0ZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5jcmVhdGVUeXBlID0gZnVuY3Rpb24odHlwZURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdHlwZScsIHR5cGVEYXRhKTtcclxuICB9O1xyXG5cclxuICBhZG1pbkZhY3RvcnkucmVhZFR5cGUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS90eXBlJyk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIGFkbWluRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhdXRoU2VydmljZXMnLFtdKVxyXG5cclxuLmZhY3RvcnkoJ0F1dGgnLCBmdW5jdGlvbigkaHR0cCwgQXV0aFRva2VuKXtcclxuICAgIHZhciBhdXRoRmFjdG9yeSA9IHt9O1xyXG4vLyBBdXRoLmdldFVzZXIoKTtcclxuICAgIGF1dGhGYWN0b3J5LmdldFVzZXIgPSBmdW5jdGlvbigpe1xyXG4gICAgICBpZihBdXRoVG9rZW4uZ2V0VG9rZW4oKSl7XHJcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWUnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkcS5yZWplY3Qoe21lc3NhZ2U6J1VzZXIgaGFzIG5vIHRva2VuJ30pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuLy8gQXV0aC5sb2dpbihsb2dpbkRhdGEpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9naW4gPSBmdW5jdGlvbihsb2dpbkRhdGEpe1xyXG4gICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hdXRoZW50aWNhdGUnLCBsb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgQXV0aFRva2VuLnNldFRva2VuKGRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbi8vIEF1dGguaXNMb2dnZWRJbigpO1xyXG4gICAgYXV0aEZhY3RvcnkuaXNMb2dnZWRJbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGlmKEF1dGhUb2tlbi5nZXRUb2tlbigpKXtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4vLyBBdXRoLmxvZ291dCgpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9nb3V0ID0gZnVuY3Rpb24oKXtcclxuICAgICAgQXV0aFRva2VuLnNldFRva2VuKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGF1dGhGYWN0b3J5O1xyXG59KVxyXG5cclxuLmZhY3RvcnkoJ0F1dGhUb2tlbicsIGZ1bmN0aW9uKCR3aW5kb3cpe1xyXG4gIHZhciBhdXRoVG9rZW5GYWN0b3J5ID0ge307XHJcblxyXG4gIC8vIEF1dGhUb2tlbi5zZXRUb2tlbih0b2tlbik7XHJcbiAgYXV0aFRva2VuRmFjdG9yeS5zZXRUb2tlbiA9IGZ1bmN0aW9uKHRva2VuKXtcclxuICAgIGlmKHRva2VuKXtcclxuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCB0b2tlbik7XHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJywgdG9rZW4pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4vLyBBdXRoVG9rZW4uZ2V0VG9rZW4oKTtcclxuICBhdXRoVG9rZW5GYWN0b3J5LmdldFRva2VuID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gIH07XHJcbiAgcmV0dXJuIGF1dGhUb2tlbkZhY3Rvcnk7XHJcbn0pXHJcblxyXG4uZmFjdG9yeSgnQXV0aEludGVyY2VwdG9ycycsIGZ1bmN0aW9uKEF1dGhUb2tlbil7XHJcbiAgdmFyIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5ID0ge307XHJcblxyXG4gIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5LnJlcXVlc3QgPSBmdW5jdGlvbihjb25maWcpe1xyXG4gICAgdmFyIHRva2VuID0gQXV0aFRva2VuLmdldFRva2VuKCk7XHJcblxyXG4gICAgaWYodG9rZW4pIGNvbmZpZy5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddID0gdG9rZW47XHJcblxyXG4gICAgcmV0dXJuIGNvbmZpZztcclxuICB9O1xyXG4gIHJldHVybiBhdXRoSW50ZXJjZXB0b3JzRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdtZW51U2VydmljZXMnLFtdKVxyXG4uZmFjdG9yeSgnTWVudScsIGZ1bmN0aW9uKCRodHRwKXtcclxuICBtZW51RmFjdG9yeSA9IHt9O1xyXG5cclxuICBtZW51RmFjdG9yeS5kZWxldGVNZW51ID0gZnVuY3Rpb24oY2F0ZWdvcnlfaWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9tZW51LycrY2F0ZWdvcnlfaWQpO1xyXG4gIH07XHJcblxyXG4gIG1lbnVGYWN0b3J5LnVwZGF0ZU1lbnUgPSBmdW5jdGlvbih1cGRhdGVEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvbWVudS8nLCB1cGRhdGVEYXRhKTtcclxuICB9O1xyXG5cclxuICBtZW51RmFjdG9yeS5jcmVhdGVNZW51ID0gZnVuY3Rpb24obWVudURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWVudScsIG1lbnVEYXRhKTtcclxuICB9O1xyXG5cclxuICBtZW51RmFjdG9yeS5yZWFkTWFpbk1lbnUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tZW51Jyk7XHJcbiAgfTtcclxuICBtZW51RmFjdG9yeS5yZWFkU3ViTWVudSA9ICBmdW5jdGlvbihtYWluTWVudVR5cGUpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tZW51LycrbWFpbk1lbnVUeXBlKTtcclxuICB9O1xyXG4gIHJldHVybiBtZW51RmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdvcmRlclNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ09yZGVyJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIG9yZGVyRmFjdG9yeSA9IHt9O1xyXG4gIFxyXG4gIG9yZGVyRmFjdG9yeS51cGRhdGVEZWxpdmVyeSA9IGZ1bmN0aW9uKGRlbGlEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvZGVsaXZlcnkvJytkZWxpRGF0YS51c2VyX2lkLCBkZWxpRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmNyZWF0ZURlbGl2ZXJ5ID0gZnVuY3Rpb24oZGVsaURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvZGVsaXZlcnknLGRlbGlEYXRhKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkuZGVsZXRlQmFza2V0ID0gZnVuY3Rpb24oYmFza2V0X2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvYmFza2V0LycrYmFza2V0X2lkKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkucmVhZEJhc2tldD0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYmFza2V0Jyk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmNyZWF0ZUJhc2tldCA9IGZ1bmN0aW9uKGJhc2tldERhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvYmFza2V0JywgYmFza2V0RGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmRlbGV0ZU9yZGVyID0gZnVuY3Rpb24oaXRlbV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZGVsZXRlKCcvYXBpL21ha2VPcmRlci8nK2l0ZW1faWQpO1xyXG4gIH07XHJcblxyXG4gIG9yZGVyRmFjdG9yeS5yZWFkT3JkZXIgPSBmdW5jdGlvbih1c2VyX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvbWFrZU9yZGVyLycrdXNlcl9pZCk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LnJlYWRPcmRlckFuZERlbGkgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tYWtlT3JkZXInKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkuY3JlYXRlT3JkZXIgPSBmdW5jdGlvbihvcmRlckRhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWFrZU9yZGVyJyxvcmRlckRhdGEpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBvcmRlckZhY3Rvcnk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgndXNlclNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ1VzZXInLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgdXNlckZhY3RvcnkgPSB7fTtcclxuXHJcbiAgdXNlckZhY3RvcnkuZ2V0UGVybWlzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Blcm1pc3Npb24nKTtcclxuICB9O1xyXG4vLyBVc2VyLmNyZWF0ZShyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LmNyZWF0ZSA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5hY3RpdmVBY2NvdW50KHRva2VuKTtcclxuICB1c2VyRmFjdG9yeS5hY3RpdmVBY2NvdW50ID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9hY3RpdmF0ZS8nK3Rva2VuKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5jaGVja0NyZWRlbnRpYWxzKGxvZ2luRGF0YSk7XHJcbiAgdXNlckZhY3RvcnkuY2hlY2tDcmVkZW50aWFscyA9IGZ1bmN0aW9uKGxvZ2luRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9yZXNlbmQnLCBsb2dpbkRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2VuZExpbmsodXNlcm5hbWUpXHJcbiAgdXNlckZhY3RvcnkucmVzZW5kTGluayA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvcmVzZW5kJywgdXNlcm5hbWUpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRVc2VybmFtZSh1c2VyRGF0YSk7XHJcbiAgdXNlckZhY3Rvcnkuc2VuZFVzZXJuYW1lID0gZnVuY3Rpb24odXNlckRhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9yZXNldHVzZXJuYW1lLycrdXNlckRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRQYXNzd29yZChyZXNldERhdGEpO1xyXG4gIHVzZXJGYWN0b3J5LnNlbmRQYXNzd29yZCA9IGZ1bmN0aW9uKHJlc2V0RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL3Jlc2V0cGFzc3dvcmQnLCByZXNldERhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2V0UGFzc3dvcmQodG9rZW4pO1xyXG4gIHVzZXJGYWN0b3J5LnJlc2V0UGFzc3dvcmQgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Jlc2V0cGFzc3dvcmQvJyt0b2tlbik7XHJcbiAgfTtcclxuXHJcblxyXG4vLyBVc2VyLnNhdmVQYXNzd29yZChyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LnNhdmVQYXNzd29yZCA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9zYXZlcGFzc3dvcmQnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gIFVzZXIucmVuZXdTZXNzaW9uKHVzZXJuYW1lKVxyXG4gIHVzZXJGYWN0b3J5LnJlbmV3U2Vzc2lvbiA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcmVuZXdUb2tlbi8nKyB1c2VybmFtZSk7XHJcbiAgfTtcclxuXHJcblxyXG4gIHJldHVybiB1c2VyRmFjdG9yeTtcclxufSk7XHJcbiIsIiAgYW5ndWxhci5tb2R1bGUoJ2l0ZW1Db250cm9sbGVycycsWydvcmRlclNlcnZpY2VzJ10pXHJcbiAgLmZpbHRlcignc3VtQnlLZXknLCBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoaW5wdXQsIHByb3BlcnR5KSB7XHJcbiAgICB2YXIgaSA9IGlucHV0IGluc3RhbmNlb2YgQXJyYXkgPyBpbnB1dC5sZW5ndGggOiAwO1xyXG4vLyBpZiBwcm9wZXJ0eSBpcyBub3QgZGVmaW5lZCwgcmV0dXJucyBsZW5ndGggb2YgYXJyYXlcclxuLy8gaWYgYXJyYXkgaGFzIHplcm8gbGVuZ3RoIG9yIGlmIGl0IGlzIG5vdCBhbiBhcnJheSwgcmV0dXJuIHplcm9cclxuICAgIGlmICh0eXBlb2YgcHJvcGVydHkgPT09ICd1bmRlZmluZWQnIHx8IGkgPT09IDApIHtcclxuICAgICAgICByZXR1cm4gaTtcclxuLy8gdGVzdCBpZiBwcm9wZXJ0eSBpcyBudW1iZXIgc28gaXQgY2FuIGJlIGNvdW50ZWRcclxuICAgIH1cclxuICAgICBlbHNlIHtcclxuICAgICAgICB2YXIgdG90YWwgPSAwO1xyXG4gICAgICAgIHdoaWxlIChpLS0pXHJcbiAgICAgICAgICAgIHRvdGFsICs9IChpbnB1dFtpXVtwcm9wZXJ0eVswXV0gKiBpbnB1dFtpXVtwcm9wZXJ0eVsxXV0pO1xyXG4gICAgICAgIHJldHVybiB0b3RhbDtcclxuICAgIH1cclxufTtcclxufSlcclxuLmNvbnRyb2xsZXIoJ2dldFR5cGVJdGVtc0N0cmwnLCBmdW5jdGlvbiAoJHN0YXRlUGFyYW1zLCAkaHR0cCkge1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICB2YXIgY2F0ZWdvcnlfaWQgPSAkc3RhdGVQYXJhbXMuY2F0ZWdvcnlfaWQ7XHJcbiAgaWYoISRzdGF0ZVBhcmFtcy50eXBlX2NvZGUpe1xyXG4gICAgJGh0dHAuZ2V0KCcvYXBpL2l0ZW1fdHlwZS8nK2NhdGVnb3J5X2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnJlc3VsdC5sZW5ndGggPT09IDAgKXtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfrk7HroZ3rkJwg7IOB7ZKI7J20IOyXhuyKteuLiOuLpC4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuaXRlbXNEYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB2YXIgdHlwZV9jb2RlID0gICRzdGF0ZVBhcmFtcy50eXBlX2NvZGU7XHJcbiAgICAkaHR0cC5nZXQoJy9hcGkvaXRlbV90eXBlLycrY2F0ZWdvcnlfaWQsXHJcbiAgICB7ICBwYXJhbXM6IHt0eXBlX2NvZGUgOiB0eXBlX2NvZGUgfX1cclxuICApLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aCA9PT0gMCApe1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+uTseuhneuQnCDsg4HtkojsnbQg7JeG7Iq164uI64ukLic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5pdGVtc0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdnZXRUeXBlSXRlbUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlUGFyYW1zLCAkd2luZG93LCAkc3RhdGUsIE9yZGVyKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgaXRlbV9pZCA9ICRzdGF0ZVBhcmFtcy5pdGVtX2lkO1xyXG4gIGFwcC5vcHRpb25JdGVtID0gZmFsc2U7XHJcblxyXG4gIGFwcC5kYXRhID0ge1xyXG4gICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgIGFwcC5hbW91bnQgPSAxO1xyXG5cclxuICAgYXBwLm9wdGlvbkxpc3QgPSBbXTtcclxuICAgdGhpcy5hZGRJdGVtID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgaWYoZGF0YS5pZCA9PT0gMCl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWY7J2EIOyEoO2Dne2VtOyjvOyEuOyalC4nKTtcclxuICAgICB9IGVsc2Uge1xyXG4gICAgICAgYXBwLm9wdGlvbkl0ZW0gPSB0cnVlO1xyXG4gICAgICAgYXBwLm9wdGlvbkxpc3QucHVzaChcclxuICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICBraW5kOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgICAgICBwcmljZTogZGF0YS5pZCxcclxuICAgICAgICAgICAgIGFtb3VudDogMVxyXG4gICAgICAgICAgIH1cclxuICAgICAgICAgKTtcclxuXHJcbiAgICAgfVxyXG4gICB9O1xyXG5cclxuICB0aGlzLmNyZWF0ZUJhc2tldCA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgdmFyIGJhc2tldERhdGEgPSB7XHJcbiAgICAgIGl0ZW1faWQ6IGRhdGEuaXRlbV9pZCxcclxuICAgIH07XHJcbiAgICBPcmRlci5jcmVhdGVCYXNrZXQoYmFza2V0RGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICB0aGlzLmNyZWF0ZU9yZGVyID0gZnVuY3Rpb24oZGF0YSl7XHJcblxyXG4gICAgdmFyIG9yZGVyRGF0YSA9IHtcclxuICAgICAgaXRlbV9pZDogZGF0YS5pdGVtX2lkLFxyXG4gICAgICBhbW91bnQ6IGRhdGEuYW1vdW50LFxyXG4gICAgICBraW5kX29mOiBkYXRhLmtpbmRfb2YsXHJcbiAgICAgIHByaWNlOiBkYXRhLnByaWNlXHJcbiAgICB9O1xyXG5cclxuICAgIE9yZGVyLmNyZWF0ZU9yZGVyKG9yZGVyRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgJHN0YXRlLmdvKCdhcHAubWFrZU9yZGVyJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICB9O1xyXG5cclxuICBBZG1pbi5yZWFkSXRlbShpdGVtX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICB2YXIga2luZCA9IGRhdGEuZGF0YS5yZXN1bHQua2luZC5zcGxpdCgnLCcpO1xyXG4gICAgICB2YXIgdGVtcCA9IGRhdGEuZGF0YS5yZXN1bHQucHJpY2Uuc3BsaXQoJywnKTtcclxuICAgICAgdmFyIHByaWNlID0gW107XHJcbiAgICAgIGZvcihpPTA7aTx0ZW1wLmxlbmd0aDtpKyspe1xyXG4gICAgICAgIHByaWNlW2ldID0gTnVtYmVyKHRlbXBbaV0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhcHAuaXRlbURhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG5cclxuICAgICAgZm9yKGk9MDsgaTxwcmljZS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgbmFtZToga2luZFtpXSxcclxuICAgICAgICAgIGlkOiBwcmljZVtpXVxyXG4gICAgICAgIH07XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdtYWluQ29udHJvbGxlcnMnLFsnYXV0aFNlcnZpY2VzJywgJ3VzZXJTZXJ2aWNlcyddKVxyXG4uY29udHJvbGxlcignbWFpbkN0cmwnLCBmdW5jdGlvbihBdXRoLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc3RhdGUsICRyb290U2NvcGUsICRzY29wZSwgJHdpbmRvdywgJGludGVydmFsLCBVc2VyLCBBdXRoVG9rZW4pe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIGFwcC5sb2FkbWUgPSBmYWxzZTtcclxuICAkc2NvcGUuJG9uKCdMT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcclxuICB9KTtcclxuXHJcbiAgJHNjb3BlLiRvbignVU5MT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgfSk7XHJcblxyXG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCl7XHJcbiAgICBpZighY2hlY2tTZXNzaW9uKSB7XHJcbiAgICAgIGNoZWNrU2Vzc2lvbigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYoQXV0aC5pc0xvZ2dlZEluKCkpe1xyXG4gICAgICAgIGFwcC5pc0xvZ2dlZEluID0gdHJ1ZTtcclxuICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICBBdXRoLmdldFVzZXIoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgYXBwLnVzZXIgPSBkYXRhLmRhdGE7XHJcbiAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgIFVzZXIuZ2V0UGVybWlzc2lvbigpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEucGVybWlzc2lvbiA9PT0gJ2FkbWluJyl7XHJcbiAgICAgICAgICAgICAgICBhcHAuYXV0aG9yaXplZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICB9IGVsc2UgaWYoZGF0YS5kYXRhLnBlcm1pc3Npb24gPT09ICdhcnRpc3QnKXtcclxuICAgICAgICAgICAgICAgIGFwcC5wZXJtaXNzaW9uID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYXBwLmF1dGhvcml6ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGFwcC5hdXRob3JpemVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC51c2VyID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSBmYWxzZTtcclxuICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB2YXIgY2hlY2tTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKEF1dGguaXNMb2dnZWRJbigpKXtcclxuICAgICAgYXBwLmNoZWNrU2Vzc2lvbiA9IHRydWU7XHJcbiAgICAgIHZhciBpbnRlcnZhbCA9ICRpbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciB0b2tlbiA9ICR3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgICAgICAgaWYodG9rZW4gPT09IG51bGwpe1xyXG4gICAgICAgICAgJGludGVydmFsLmNhbmNlbChpbnRlcnZhbCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNlbGYucGFyc2VKd3QgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICAgICAgICAgIHZhciBiYXNlNjRVcmwgPSB0b2tlbi5zcGxpdCgnLicpWzFdO1xyXG4gICAgICAgICAgICB2YXIgYmFzZTY0ID0gYmFzZTY0VXJsLnJlcGxhY2UoJy0nLCcrJykucmVwbGFjZSgnXycsICcvJyk7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKCR3aW5kb3cuYXRvYihiYXNlNjQpKTtcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICB2YXIgZXhwaXJlVGltZSA9IHNlbGYucGFyc2VKd3QodG9rZW4pO1xyXG4gICAgICAgICAgdmFyIHRpbWVTdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xyXG4gICAgICAgICAgdmFyIHRpbWVDaGVjayA9IGV4cGlyZVRpbWUuZXhwIC0gdGltZVN0YW1wO1xyXG5cclxuICAgICAgICAgIGlmKHRpbWVDaGVjayA8PSA1KXtcclxuICAgICAgICAgICAgc2hvd01vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoaW50ZXJ2YWwpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0sIDIwMDApO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNoZWNrU2Vzc2lvbigpO1xyXG5cclxuXHJcbiAgICBhcHAucmVuZXdTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmNob2ljZU1hZGUgPSB0cnVlO1xyXG4gICAgICBVc2VyLnJlbmV3U2Vzc2lvbihhcHAudXNlci51c2VybmFtZSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBBdXRoVG9rZW4uc2V0VG9rZW4oZGF0YS5kYXRhLnRva2VuKTtcclxuICAgICAgICAgIGNoZWNrU2Vzc2lvbigpO1xyXG4gICAgICAgICAgaGlkZU1vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgYXBwLk1vZGFsQm9keSA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgaGlkZU1vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgYXBwLmVuZFNlc3Npb24gPSBmdW5jdGlvbigpe1xyXG4gICAgICBhcHAuY2hvaWNlTWFkZSA9IHRydWU7XHJcbiAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgIHNob3dNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgIH0sNTAwKTtcclxuICAgIH07XHJcblxyXG5cclxuICB2YXIgc2hvd01vZGFsID0gZnVuY3Rpb24ob3B0aW9uKXtcclxuICAgIGFwcC5jaG9pY2VNYWRlID0gZmFsc2U7XHJcbiAgICBhcHAubW9kYWxIZWFkZXIgPSB1bmRlZmluZWQ7XHJcbiAgICBhcHAubW9kYWxCb2R5ID0gdW5kZWZpbmVkO1xyXG4gICAgYXBwLmhpZGVCdXR0b24gPSBmYWxzZTtcclxuLy8gY2hlY2sgdG9rZW4gZXhwaXJlZFxyXG4gICAgaWYob3B0aW9uID09PSAgJ2V4cGlyZWQnICl7XHJcbiAgICAgIGFwcC5tb2RhbEhlYWRlciA9ICdUaW1lb3V0IFdhcm5pbmcnO1xyXG4gICAgICBhcHAubW9kYWxCb2R5ID0gJ1lvdXIgc2Vzc2lvbiB3aWxsIGV4cGlyZWQgaW4gNSBtaW51dGVzLiBXb3VsZCB5b3UgbGlrZSB0byByZW5ldyB5b3VyIHNlc3Npb24/JztcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9nb3V0Jyl7XHJcbi8vIGxvZ291dFxyXG4gICAgICBhcHAuaGlkZUJ1dHRvbiA9IHRydWU7XHJcbiAgICAgIGFwcC5tb2RhbEhlYWRlciA9ICfroZzqt7jslYTsm4MnO1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoe2JhY2tkcm9wOlwic3RhdGljXCJ9KTtcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICBBdXRoLmxvZ291dCgpO1xyXG4gICAgICAgIGFwcC5pc0xvZ2dlZEluID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmF1dGhvcml6ZWQgPSBmYWxzZTtcclxuICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcblxyXG4gICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dpbicpe1xyXG4vLyBMb2dpblxyXG4gICAgICAkKFwiI2xvZ2luXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYoIWFwcC5jaG9pY2VNYWRlKXtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAyMDAwKTtcclxuXHJcbiAgfTtcclxuXHJcbiAgdmFyIGhpZGVNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcblxyXG4gICAgaWYob3B0aW9uID09PSAnZXhwaXJlZCcpe1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoJ2hpZGUnKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dvdXQnKXtcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9naW4nKXtcclxuICAgICAgJChcIiNsb2dpblwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuLy8g66Gc6re47J24XHJcbiAgdGhpcy5kb0xvZ2luID0gZnVuY3Rpb24obG9naW5EYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5leHBpcmVkID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmKHZhbGlkKXtcclxuICAgICAgQXV0aC5sb2dpbihhcHAubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBhcHAubG9naW5EYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICAgICAgICAgIH0sMTAwMCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLmV4cGlyZWQpe1xyXG4gICAgICAgICAgICBhcHAuZXhwaXJlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTsgLy8gSWYgZXJyb3Igb2NjdXJzLCByZW1vdmUgZGlzYWJsZSBsb2NrIGZyb20gZm9ybVxyXG4gICAgICBhcHAubG9hZGluZyA9IGZhbHNlOyAvLyBTdG9wIGJvb3RzdHJhcCBsb2FkaW5nIGljb25cclxuICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIERpc3BsYXkgZXJyb3IgaWYgdmFsaWQgcmV0dXJucyBmYWxzZVxyXG4gICAgfVxyXG5cclxuICB9O1xyXG5cclxuXHJcbiAgYXBwLmxvZ291dCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBzaG93TW9kYWwoJ2xvZ291dCcpO1xyXG4gIH07XHJcblxyXG4gIGFwcC5yZXNlbmQgPSBmdW5jdGlvbigpe1xyXG4gICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgJHN0YXRlLmdvKCdyZXNlbmQnKTtcclxuICAgICAgYXBwLmV4cGlyZWQgPSBmYWxzZTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXR1c2VybmFtZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0dXNlcm5hbWUnKTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXRwYXNzd29yZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0cGFzc3dvcmQnKTtcclxuICAgIH0sNTAwKTtcclxuXHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnbWFuYWdlbWVudENvbnRyb2xsZXJzJywgWydhZG1pblNlcnZpY2VzJywgJ21lbnVTZXJ2aWNlcycsICdvcmRlclNlcnZpY2VzJ10pXHJcblxyXG4uY29udHJvbGxlcigncmVhZEl0ZW1zQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIEFkbWluLnJlYWRJdGVtcygpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLml0ZW1zRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdGhpcy5kZWxldGVJdGVtID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIHZhciBpdGVtX2lkID0gZGF0YS5pdGVtX2lkO1xyXG4gICAgQWRtaW4uZGVsZXRlSXRlbShpdGVtX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVhZEl0ZW1DdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZVBhcmFtcywgJHNjb3BlLCBPcmRlciwgJHdpbmRvdyl7XHJcblxyXG4gICAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgICB2YXIgaXRlbV9pZCA9ICRzdGF0ZVBhcmFtcy5pdGVtX2lkO1xyXG4gICAgYXBwLmRhdGEgPSB7XHJcbiAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICBdLFxyXG4gICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgfTtcclxuXHJcbiAgICAgYXBwLmFtb3VudCA9IDE7XHJcblxyXG4gICAgQWRtaW4ucmVhZEl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIHZhciBraW5kID0gZGF0YS5kYXRhLnJlc3VsdC5raW5kLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgdmFyIHRlbXAgPSBkYXRhLmRhdGEucmVzdWx0LnByaWNlLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgdmFyIHByaWNlID0gW107XHJcbiAgICAgICAgZm9yKGk9MDtpPHRlbXAubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICBwcmljZVtpXSA9IE51bWJlcih0ZW1wW2ldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYXBwLml0ZW1EYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbiA9IHtcclxuICAgICAgICAgIGlkIDogcHJpY2VbMF1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBmb3IoaT0wOyBpPHByaWNlLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgbmFtZToga2luZFtpXSxcclxuICAgICAgICAgICAgaWQ6IHByaWNlW2ldXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbn0pXHJcblxyXG5cclxuXHJcblxyXG4uY29udHJvbGxlcigndXBkYXRlSXRlbUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlUGFyYW1zLCAkc2NvcGUsICRodHRwLCAkdGltZW91dCwgICRzdGF0ZSwgJHdpbmRvdywgTWVudSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGl0ZW1faWQgPSAkc3RhdGVQYXJhbXMuaXRlbV9pZDtcclxuXHJcbiAgICAgICAgIGFwcC5kYXRhID0ge1xyXG4gICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgXSxcclxuICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgIHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgIGlkOiB0eXBlW2ldLmNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgdGhpcy5yZWFkTWVudSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLnJlYWRNZW51U3RhdHVzID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuaWQgPT09IDApe1xyXG4gICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdmFyIGNhdGVnb3J5X2lkID0gZGF0YS5pZDtcclxuICAgICAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvbWVudS8nK2NhdGVnb3J5X2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgLy8g7LSI6riw7ZmUIOyLnO2CtFxyXG4gICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aCA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRhdGEyID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfrk7HroZ3rkJwg7IOB7ZKI7J20IOyXhuyKteuLiOuLpC4nKTtcclxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBhcHAucmVhZE1lbnVTdGF0dXMgPSB0cnVlO1xyXG4gICAgLy8g7LSI6riw7ZmUIOyLnOy8nOyVvO2VmOuKlOuNsCDslrTrlrvqsowg7ZWg6rmM7JqUXHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRhdGEyID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmRhdGEyLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS50eXBlX2Rlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5pdGVtX3R5cGVfaWRcclxuICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuICBBZG1pbi5yZWFkSXRlbShpdGVtX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5pdGVtRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgIGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uID0ge1xyXG4gICAgICAgIGlkIDogYXBwLml0ZW1EYXRhLmNhdGVnb3J5X2lkXHJcbiAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHRoaXMudXBkYXRlSXRlbSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihhcHAucmVhZE1lbnVTdGF0dXMpe1xyXG4gICAgICBpZihkYXRhLml0ZW1fdHlwZSA9PT0gMCB8fCBkYXRhLml0ZW1fdHlwZSA9PT0gJzAnKXtcclxuICAgICAgICAkd2luZG93LmFsZXJ0KCfsg4Htkogg67aE66WY66W8IOyEoO2Dne2VtOyjvOyEuOyalC4hJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICB0eXBlOiBkYXRhLml0ZW1fdHlwZSxcclxuICAgICAgICAgIGl0ZW1fbmFtZTogZGF0YS5pdGVtX25hbWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICAkaHR0cC5wdXQoJy9hcGkvaXRlbS8nK2l0ZW1faWQsIHVwZGF0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHVwZGF0ZURhdGEyID0ge1xyXG4gICAgICAgICAgdHlwZTogYXBwLml0ZW1EYXRhLml0ZW1fdHlwZV9pZCxcclxuICAgICAgICAgIGl0ZW1fbmFtZTogZGF0YS5pdGVtX25hbWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICAkaHR0cC5wdXQoJy9hcGkvaXRlbS8nK2l0ZW1faWQsIHVwZGF0ZURhdGEyKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuXHJcbn07XHJcblxyXG5cclxuICAvLyDtjIzsnbzsnZgg6rK966Gc66eMIOyggOyepe2VmOq4sCDrqZTsnbgg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgICB0aGlzLmZpbGUgPSB7fTtcclxuICAvLyDrqZTsnbgg7J6R7ZKI7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICAgIHRoaXMubWFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbC5kYXRhVXJsID0gZS50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgLy8g66mU7J24IOyeke2SiCDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgICAgdGhpcy5yZWFkUGhvdG8gPSBmdW5jdGlvbigpe1xyXG4gIC8vIOuplOyduCDsnbTrr7jsp4Ag7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgIGFwcC5tYWluUGhvdG8gPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9JbWFnZS8nLCBmZCx7XHJcbiAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5tYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgaW1hZ2U6IGRhdGEuZGF0YS5pdGVtX3BhdGhcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAvLyDsnpHtkogg7ISk66qFIOydtOuvuOyngCDsl4XroZzrk5wg65CY7JeI64qU7KeAIOuztOyXrOyjvOq4sFxyXG4gICAgICB0aGlzLmV4cGxhaW5QaG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDAgJiYgZmlsZXNbMF0ubmFtZS5tYXRjaCgvXFwuKHBuZ3xqcGVnfGpwZykkLykpIHtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOyeke2SiCDshKTrqoUgIOydtOuvuOyngCDsl4XroZzrk5ztlbTshJwg6rK966GcIOyggOyepVxyXG4gICAgICB0aGlzLnJlYWRQaG90b0V4cGxhaW4gPSBmdW5jdGlvbigpe1xyXG4gIC8vIOyeke2SiCDshKTrqoUgIOyXheuhnOuTnCDsl6zrtoBcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICBhcHAuZXhwbGFpblBob3RvID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmZC5hcHBlbmQoJ215ZmlsZScsIGFwcC5maWxlLnVwbG9hZCk7XHJcbiAgICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZVBob3RvRXhwbGFpbi8nLCBmZCx7XHJcbiAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5leHBsYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgZXhwbGFpbjogZGF0YS5kYXRhLml0ZW1fcGF0aFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAkaHR0cC5wdXQoJy9hcGkvaXRlbS8nK2l0ZW1faWQsIHVwZGF0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOyNuOuEpOydvCDsnbTrr7jsp4Ag66eM65Ok6riwXHJcbiAgICAgICAgYXBwLm15SW1hZ2U9Jyc7XHJcbiAgICAgICAgYXBwLm15Q3JvcHBlZEltYWdlPScnO1xyXG5cclxuICAgICAgICB2YXIgaGFuZGxlRmlsZVNlbGVjdD1mdW5jdGlvbihldnQpIHtcclxuICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgdmFyIGZpbGU9ZXZ0LmN1cnJlbnRUYXJnZXQuZmlsZXNbMF07XHJcbiAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgIGFwcC5teUltYWdlPWV2dC50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmaWxlSW5wdXQnKSkub24oJ2NoYW5nZScsaGFuZGxlRmlsZVNlbGVjdCk7XHJcblxyXG4gICAgICAgICAgZnVuY3Rpb24gZGVjb2RlQmFzZTY0SW1hZ2UoZGF0YVN0cmluZykge1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IGRhdGFTdHJpbmcubWF0Y2goL15kYXRhOihbQS1aYS16LStcXC9dKyk7YmFzZTY0LCguKykkLyk7XHJcblxyXG4gICAgICAgICAgICBpZiAobWF0Y2hlcy5sZW5ndGggIT09IDMpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdJbnZhbGlkIGlucHV0IHN0cmluZycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlID0ge1xyXG4gICAgICAgICAgICAgICAgdHlwZSA6IG1hdGNoZXNbMV0sXHJcbiAgICAgICAgICAgICAgICBkYXRhIDogbWF0Y2hlc1syXVxyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZpbGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgLy8g7I2464Sk7J28IOydtOuvuOyngCDroZzsu6zrlJTsiqTtgazsl5Ag7KCA7J6lIO2bhCDsoIDsnqUg7JyE7LmYIOqwgOyguOyYpOq4sFxyXG4gICAgICAgICAgdGhpcy5yZWFkQ3JvcEltYWdlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAudGh1bWJuYWlsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuYmFzZTY0VXJsID09PSAnJyB8fCBkYXRhLmJhc2U2NFVybCA9PT0gbnVsbCB8fCBkYXRhLmJhc2U2NFVybCA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgdmFyIGJsb2IgPSBkZWNvZGVCYXNlNjRJbWFnZSgkc2NvcGUubXlDcm9wcGVkSW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICBBZG1pbi5yZWFkQXJpc3RDcm9wKGJsb2IpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgIHZhciB1cGRhdGVEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGRhdGEuZGF0YS5maWxlUGF0aFxyXG4gICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICAgICRodHRwLnB1dCgnL2FwaS9pdGVtLycraXRlbV9pZCwgdXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcblxyXG59KVxyXG5cclxuXHJcblxyXG4uY29udHJvbGxlcignY3JlYXRlSXRlbUN0cmwnLCBmdW5jdGlvbiAoJGh0dHAsICR0aW1lb3V0LCAkc2NvcGUsIEFkbWluLCAkc3RhdGUsICR3aW5kb3csIE1lbnUpIHtcclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuXHJcbiAgICAgIGFwcC5raW5kTGlzdCA9IFtdO1xyXG4gICAgICBhcHAudHlwZV90aW55ID0gW107XHJcbiAgICAgIGFwcC50eXBlX3ByaWNlID0gW107XHJcblxyXG4gICAgICB0aGlzLmFkZExpbmUgPSBmdW5jdGlvbihraW5kRGF0YSl7XHJcbiAgICAgICAgaWYoIWtpbmREYXRhKXtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+ygle2Zle2VnCDqsJLsnYQg7J6F66Cl7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZihraW5kRGF0YS5raW5kVmFsdWUgPT09IG51bGwgfHwga2luZERhdGEua2luZFZhbHVlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFZhbHVlID09PSAnJylcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWY66qF7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIH0gZWxzZSBpZihraW5kRGF0YS5raW5kUHJpY2UgPT09IG51bGwgfHwga2luZERhdGEua2luZFByaWNlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFByaWNlID09PSAnJyl7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+yYteyFmCDqsIDqsqnsnYQg7J6F66Cl7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYXBwLmtpbmRMaXN0LnB1c2goXHJcbiAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAga2luZDoga2luZERhdGEua2luZFZhbHVlLFxyXG4gICAgICAgICAgICAgICAgcHJpY2U6IGtpbmREYXRhLmtpbmRQcmljZVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgYXBwLnR5cGVfdGlueS5wdXNoKGtpbmREYXRhLmtpbmRWYWx1ZSk7XHJcbiAgICAgICAgICAgIGFwcC50eXBlX3ByaWNlLnB1c2goa2luZERhdGEua2luZFByaWNlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICB9O1xyXG5cclxuICAgICBhcHAuZGF0YSA9IHtcclxuICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgXSxcclxuICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgYXBwLmRhdGEyID0ge1xyXG4gICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICBdLFxyXG4gICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICAgfTtcclxuXHJcbiAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRoaXMucmVhZE1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmlkID09PSAwKXtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgICAkaHR0cC5nZXQoJy9hcGkvbWVudS8nK2NhdGVnb3J5X2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbi8vIOy0iOq4sO2ZlCDsi5ztgrRcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aCA9PT0gMCl7XHJcbiAgICAgICAgICAgICAgICBhcHAuZGF0YTIgPSB7XHJcbiAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfrk7HroZ3rkJwg7IOB7ZKI7J20IOyXhuyKteuLiOuLpC4nKTtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4vLyDstIjquLDtmZQg7Iuc7Lyc7JW87ZWY64qU642wIOyWtOuWu+qyjCDtlaDquYzsmpRcclxuICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgICAgYXBwLmRhdGEyLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLnR5cGVfZGVzY3JpcHRpb24sXHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uaXRlbV90eXBlX2lkXHJcbiAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDtjIzsnbzsnZgg6rK966Gc66eMIOyggOyepe2VmOq4sCDrqZTsnbgg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgdGhpcy5maWxlID0ge307XHJcbi8vIOuplOyduCDsnpHtkojsnbTrr7jsp4Ag7JeF66Gc65OcIOuQmOyXiOuKlOyngCDrs7Tsl6zso7zquLBcclxuICAgIHRoaXMubWFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzWzBdLm5hbWUubWF0Y2goL1xcLihwbmd8anBlZ3xqcGcpJC8pKSB7XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuXHJcbi8vIOuplOyduCDsnpHtkogg7J2066+47KeAIOyXheuhnOuTnO2VtOyEnCDqsr3roZwg7KCA7J6lXHJcbiAgICB0aGlzLnJlYWRQaG90byA9IGZ1bmN0aW9uKCl7XHJcbi8vIOuplOyduCDsnbTrr7jsp4Ag7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgYXBwLm1haW5QaG90byA9IGZhbHNlO1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgZmQuYXBwZW5kKCdteWZpbGUnLCBhcHAuZmlsZS51cGxvYWQpO1xyXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9JbWFnZS8nLCBmZCx7XHJcbiAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eSxcclxuICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAubWFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLm1haW5JbWFnZVBhdGggPSBkYXRhLmRhdGEuaXRlbV9wYXRoO1xyXG4gICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcbi8vIOyeke2SiCDshKTrqoUg7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICB0aGlzLmV4cGxhaW5QaG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5leHBsYWluVGh1bWJuYWlsLmRhdGFVcmwgPSBlLnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDsnpHtkogg7ISk66qFICDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgIHRoaXMucmVhZFBob3RvRXhwbGFpbiA9IGZ1bmN0aW9uKCl7XHJcbi8vIOyeke2SiCDshKTrqoUgIOyXheuhnOuTnCDsl6zrtoBcclxuICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgIGFwcC5leHBsYWluUGhvdG8gPSBmYWxzZTtcclxuICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZVBob3RvRXhwbGFpbi8nLCBmZCx7XHJcbiAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eSxcclxuICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICAgICAgfSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAuZXhwbGFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmV4cGxhaW5JbWFnZVBhdGggPSBkYXRhLmRhdGEuaXRlbV9wYXRoO1xyXG4gICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcblxyXG4vLyDsjbjrhKTsnbwg7J2066+47KeAIOunjOuTpOq4sFxyXG4gICAgICBhcHAubXlJbWFnZT0nJztcclxuICAgICAgYXBwLm15Q3JvcHBlZEltYWdlPScnO1xyXG5cclxuICAgICAgdmFyIGhhbmRsZUZpbGVTZWxlY3Q9ZnVuY3Rpb24oZXZ0KSB7XHJcbiAgICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgdmFyIGZpbGU9ZXZ0LmN1cnJlbnRUYXJnZXQuZmlsZXNbMF07XHJcbiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgYXBwLm15SW1hZ2U9ZXZ0LnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICB9O1xyXG4gICAgICAgIGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZmlsZUlucHV0JykpLm9uKCdjaGFuZ2UnLGhhbmRsZUZpbGVTZWxlY3QpO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBkZWNvZGVCYXNlNjRJbWFnZShkYXRhU3RyaW5nKSB7XHJcbiAgICAgICAgICB2YXIgbWF0Y2hlcyA9IGRhdGFTdHJpbmcubWF0Y2goL15kYXRhOihbQS1aYS16LStcXC9dKyk7YmFzZTY0LCguKykkLyk7XHJcblxyXG4gICAgICAgICAgaWYgKG1hdGNoZXMubGVuZ3RoICE9PSAzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0ludmFsaWQgaW5wdXQgc3RyaW5nJyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgZmlsZSA9IHtcclxuICAgICAgICAgICAgICB0eXBlIDogbWF0Y2hlc1sxXSxcclxuICAgICAgICAgICAgICBkYXRhIDogbWF0Y2hlc1syXVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXR1cm4gZmlsZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4vLyDsjbjrhKTsnbwg7J2066+47KeAIOuhnOy7rOuUlOyKpO2BrOyXkCDsoIDsnqUg7ZuEIOyggOyepSDsnITsuZgg6rCA7KC47Jik6riwXHJcbiAgICAgICAgdGhpcy5yZWFkQ3JvcEltYWdlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgIGFwcC50aHVtYm5haWwgPSBmYWxzZTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICBpZihkYXRhLmJhc2U2NFVybCA9PT0gJycgfHwgZGF0YS5iYXNlNjRVcmwgPT09IG51bGwgfHwgZGF0YS5iYXNlNjRVcmwgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYmxvYiA9IGRlY29kZUJhc2U2NEltYWdlKCRzY29wZS5teUNyb3BwZWRJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICBBZG1pbi5yZWFkQXJpc3RDcm9wKGJsb2IpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC50aHVtYm5haWwgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC50aHVtYm5haWxQYXRoID0gZGF0YS5kYXRhLmZpbGVQYXRoO1xyXG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG5cclxuXHJcbi8vIOyekeqwgCDsnpHtkogg7JeF66Gc65OcXHJcbiAgICAgIHRoaXMuY3JlYXRlUGhvdG8gPSBmdW5jdGlvbih1cGxvYWREYXRhKXtcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICBpZih1cGxvYWREYXRhID09PSB1bmRlZmluZWQgfHwgdXBsb2FkRGF0YSA9PT0gbnVsbCB8fCB1cGxvYWREYXRhID09PSAnJyl7XHJcbiAgICAgICAgICAkd2luZG93LmFsZXJ0KCfruYjsubjsnYQg66qo65GQIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZihhcHAuZGF0YTIuc2VsZWN0ZWRPcHRpb24uaWQgPT09ICcwJyl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsg4Htkogg67aE66WY7J2EIOyEoO2Dne2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIH0gZWxzZSBpZih1cGxvYWREYXRhLnRpdGxlID09PSB1bmRlZmluZWQgfHwgdXBsb2FkRGF0YS50aXRsZSA9PT0gIG51bGwgfHwgdXBsb2FkRGF0YS50aXRsZT09PSAnJyl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsg4Htkogg7KCc66qp66W8IOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIC8vICAgZWxzZSBpZihhcHAubWFpbkltYWdlUGF0aCA9PT0gdW5kZWZpbmVkIHx8IGFwcC5tYWluSW1hZ2VQYXRoID09PSAgbnVsbCB8fCBhcHAubWFpbkltYWdlUGF0aCA9PT0gJycpe1xyXG4gICAgICAgICAgLy8gICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgLy8gICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgIC8vICAgJHdpbmRvdy5hbGVydCgn7IOB7ZKIIOydtOuvuOyngOulvCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAvLyBlbHNlIGlmKGFwcC5leHBsYWluSW1hZ2VQYXRoID09PSB1bmRlZmluZWQgfHwgYXBwLmV4cGxhaW5JbWFnZVBhdGggPT09IG51bGwgfHwgYXBwLmV4cGxhaW5JbWFnZVBhdGggPT09ICcnKSB7XHJcbiAgICAgICAgICAvLyAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAvLyAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgLy8gICAkd2luZG93LmFsZXJ0KCfsg4Htkogg7ISk66qFIOydtOuvuOyngOulvCDsl4XroZzrk5ztlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICAvLyB9IGVsc2UgaWYoYXBwLnRodW1ibmFpbFBhdGggPT09IHVuZGVmaW5lZCB8fCBhcHAudGh1bWJuYWlsUGF0aCA9PT0gbnVsbCB8fCBhcHAudGh1bWJuYWlsUGF0aCA9PT0gJycpIHtcclxuICAgICAgICAgIC8vICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgIC8vICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAvLyAgICR3aW5kb3cuYWxlcnQoJ+yNuOuEpOydvCDsnbTrr7jsp4Drpbwg7JeF66Gc65Oc7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLnVwbG9hZERhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogdXBsb2FkRGF0YS50aXRsZSxcclxuICAgICAgICAgICAgICAgIHR5cGU6IGFwcC5kYXRhMi5zZWxlY3RlZE9wdGlvbi5pZCxcclxuICAgICAgICAgICAgICAgIC8vIHRodW1ibmFpbDogYXBwLnRodW1ibmFpbFBhdGgsXHJcbiAgICAgICAgICAgICAgICAvLyBleHBsYWluOiBhcHAuZXhwbGFpbkltYWdlUGF0aCxcclxuICAgICAgICAgICAgICAgIC8vIGltYWdlOiBhcHAubWFpbkltYWdlUGF0aCxcclxuICAgICAgICAgICAgICAgIGtpbmQ6IGFwcC50eXBlX3RpbnkudG9TdHJpbmcoKSxcclxuICAgICAgICAgICAgICAgIHByaWNlOiBhcHAudHlwZV9wcmljZS50b1N0cmluZygpXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICBBZG1pbi5jcmVhdGVJdGVtKGFwcC51cGxvYWREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICB9O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ21lbnVDb250cm9sbGVycycsWydtZW51U2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ21haW5NZW51Q3RybCcsIGZ1bmN0aW9uIChNZW51LCAkc3RhdGUpIHtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5tYWluTWVudWVzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB0aGlzLmNyZWF0ZU1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YSA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgbWVudURhdGEgPSB7XHJcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWVcclxuICAgICAgfTtcclxuICAgICAgTWVudS5jcmVhdGVNZW51KG1lbnVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgIGNhdGVnb3J5X2lkOiBkYXRhLmNhdGVnb3J5X2lkLFxyXG4gICAgICBuYW1lOiBkYXRhLm5hbWVcclxuICAgIH07XHJcbiAgICAgIE1lbnUudXBkYXRlTWVudSh1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdGhpcy5kZWxldGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgdmFyIGRlbGV0ZURhdGEgPSBkYXRhLmNhdGVnb3J5X2lkO1xyXG4gICAgTWVudS5kZWxldGVNZW51KGRlbGV0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbn0pXHJcblxyXG4uY29udHJvbGxlcignc3ViTWVudUN0cmwnLCBmdW5jdGlvbiAoTWVudSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsICRodHRwKSB7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGNhdGVnb3J5X2lkID0gJHN0YXRlUGFyYW1zLmNhdGVnb3J5X2lkO1xyXG5cclxuICAkaHR0cC5nZXQoJy9hcGkvY2F0ZWdvcnkvJytjYXRlZ29yeV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLnN1Yk1lbnVEYXRhcyA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdvcmRlckNvbnRyb2xsZXJzJyxbJ29yZGVyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ3JlYWRPcmRlckN0cmwnLCBmdW5jdGlvbiAoJHN0YXRlUGFyYW1zLCAkc3RhdGUsICR3aW5kb3csIE9yZGVyLCAkc2NvcGUpIHtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgdXNlcl9pZCA9ICRzY29wZS5tYWluLnVzZXIudXNlcl9pZDtcclxuXHJcbiAgYXBwLmdldEl0ZW1GYWlsID0gZmFsc2U7XHJcblxyXG4gIGFwcC5jYXNoUmVjZWlwdCA9IHRydWU7XHJcbiAgaWYoYXBwLmNhc2hSZWNlaXB0KXtcclxuICAgIGFwcC5nZXRDYXNoUmVjZWlwdCA9IHRydWU7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwcC5nZXRDYXNoUmVjZWlwdCA9IGZhbHNlO1xyXG4gIH1cclxuXHJcblxyXG4gIHRoaXMucmVhZEFkZHJlc3MgPSBmdW5jdGlvbigpe1xyXG4gICAgLy9sb2Fk7ZWo7IiY66W8IOydtOyaqe2VmOyXrCBjb3Jl7Iqk7YGs66a97Yq47J2YIOuhnOuUqeydtCDsmYTro4zrkJwg7ZuELCDsmrDtjrjrsojtmLgg7ISc67mE7Iqk66W8IOyLpO2Wie2VqeuLiOuLpC5cclxuICAgIGRhdW0ucG9zdGNvZGUubG9hZChmdW5jdGlvbigpe1xyXG4gICAgICBhcHAuYWRkcmVzc0RldGFpbCA9ICcnO1xyXG4gICAgICAgIG5ldyBkYXVtLlBvc3Rjb2RlKHtcclxuICAgICAgICAgICAgb25jb21wbGV0ZTogZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAgIGFwcC5kZWxpRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIHNpZ3VuZ3VfY29kZTogZGF0YS5zaWd1bmd1Q29kZSxcclxuICAgICAgICAgICAgICAgIGppYnVuX2FkZHJlc3M6IGRhdGEuamlidW5BZGRyZXNzLFxyXG4gICAgICAgICAgICAgICAgcm9hZF9hZGRyZXNzOiBkYXRhLnJvYWRBZGRyZXNzXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pLm9wZW4oKTtcclxuICAgIH0pO1xyXG5cclxuICB9O1xyXG5cclxuICBPcmRlci5yZWFkT3JkZXJBbmREZWxpKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4vLyDrk7HroZ3rkJwg67Cw7Iah7KeAIOygleuztOqwgCDsl4bsnYQg65WMXHJcbiAgICAgIGlmKGRhdGEuZGF0YS5yZXN1bHQubGVuZ3RoPT09MCl7XHJcbiAgICAgICAgYXBwLmRlbGl2ZXJ5ID0gZmFsc2U7XHJcbiAgICAgICAgT3JkZXIucmVhZE9yZGVyKHVzZXJfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICB2YXIgaXRlbVByaWNlID0gW107XHJcbiAgICAgICAgICBhcHAuYWxsSXRlbVByaWNlID0gMDtcclxuICAgICAgICAgIGFwcC5vcmRlckRhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgZm9yKGk9MDsgaTxhcHAub3JkZXJEYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgaXRlbVByaWNlW2ldID0gYXBwLm9yZGVyRGF0YVtpXS5wcmljZSAqIGFwcC5vcmRlckRhdGFbaV0uYW1vdW50O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZm9yKGk9MDtpPGl0ZW1QcmljZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgYXBwLmFsbEl0ZW1QcmljZSA9IGFwcC5hbGxJdGVtUHJpY2UgKyBpdGVtUHJpY2VbaV07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuLy8g65Ox66Gd65CcIOuwsOyGoeyngCDsoJXrs7TqsIAg7J6I7J2EIOuVjFxyXG4gICAgICBlbHNlIHtcclxuICAgICAgdmFyIGl0ZW1QcmljZSA9IFtdO1xyXG4gICAgICBhcHAuZGVsaXZlcnkgPSB0cnVlO1xyXG4gICAgICBhcHAuYWxsSXRlbVByaWNlID0gMDtcclxuICAgICAgYXBwLm9yZGVyRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgIGZvcihpPTA7IGk8YXBwLm9yZGVyRGF0YS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgaXRlbVByaWNlW2ldID0gYXBwLm9yZGVyRGF0YVtpXS5wcmljZSAqIGFwcC5vcmRlckRhdGFbaV0uYW1vdW50O1xyXG4gICAgICB9XHJcbiAgICAgIGZvcihpPTA7aTxpdGVtUHJpY2UubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgYXBwLmFsbEl0ZW1QcmljZSA9IGFwcC5hbGxJdGVtUHJpY2UgKyBpdGVtUHJpY2VbaV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG5cclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdGhpcy5jb25maXJtT3JkZXIgPSBmdW5jdGlvbihkYXRhKXtcclxuLy8g65Ox66Gd65CcIOuwsOyGoeyngOqwgCDsnojsnYQg65WMIHB1dFxyXG4gICAgdmFyIGRlbGlEYXRhID0gJyc7XHJcbiAgICB2YXIgcmVjZWlwdERhdGEgPSAnJztcclxuICAgIGlmKGFwcC5kZWxpdmVyeSl7XHJcbi8vICAgIOuzgOqyveyCrO2VrSDsl4bsnYxcclxuICAgICAgaWYoZGF0YS5kYWxpRGF0YSA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICBjb25zb2xlLmxvZygn67OA6rK97IKs7ZWtIOyXhuydjCcpO1xyXG4gICAgICB9XHJcbi8vIOuzgOqyveyCrO2VrSDsnojsnYxcclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgZGVsaURhdGEgPSBkYXRhLmRhbGlEYXRhO1xyXG4gICAgICAgIC8vIGRlbGlEYXRhLnVzZXJfaWQgPSB1c2VyX2lkO1xyXG4gICAgICAgIE9yZGVyLnVwZGF0ZURlbGl2ZXJ5KGRlbGlEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG5cclxuLy8g65Ox66Gd65CcIOuwsOyGoeyngOqwgCDsl4bsnYQg65WMIHBvc3RcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRlbGlEYXRhID0gZGF0YS5kYWxpRGF0YTtcclxuICAgICAgcmVjZWlwdERhdGEgPSBkYXRhLnJlY2VpcHREYXRhO1xyXG4gICAgICBPcmRlci5jcmVhdGVEZWxpdmVyeShkZWxpRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgdGhpcy5kZWxldGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgdmFyIGl0ZW1faWQgPSBkYXRhLml0ZW1faWQ7XHJcbiAgICBPcmRlci5kZWxldGVPcmRlcihpdGVtX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH1lbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuICB9KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2Jhc2tldEN0cmwnLCBmdW5jdGlvbiAoT3JkZXIsICR3aW5kb3csICRzdGF0ZSkge1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIGFwcC5hbW91bnQgPSAxO1xyXG4gIGFwcC5kYXRhID0ge1xyXG4gICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgIHRoaXMuZGVsZXRlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgdmFyIGJhc2tldF9pZCA9IGRhdGEuYmFza2V0X2lkO1xyXG4gICAgIE9yZGVyLmRlbGV0ZUJhc2tldChiYXNrZXRfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuXHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxuXHJcbiAgdGhpcy5tYWtlQmFza2V0ID0gZnVuY3Rpb24oKXtcclxuICB9O1xyXG5cclxuICBPcmRlci5yZWFkQmFza2V0KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICBhcHAuYmFza2V0RGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgIHZhciBpO1xyXG4gICAgICB2YXIga2luZCA9IFtdO1xyXG4gICAgICB2YXIgdGVtcCA9IFtdO1xyXG4gICAgICB2YXIgc2VsZWN0RGF0YTtcclxuICAgICAgZm9yKGk9MDsgaSA8IGFwcC5iYXNrZXREYXRhLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgIGtpbmRbaV0gPSBhcHAuYmFza2V0RGF0YVtpXS5raW5kLnNwbGl0KCcsJyk7XHJcbiAgICAgICAgICB0ZW1wW2ldID0gYXBwLmJhc2tldERhdGFbaV0ucHJpY2Uuc3BsaXQoJywnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZm9yKGk9MDsgaTxraW5kLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBhcHAuZGF0YVtpXSA9IHtcclxuICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgIHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgICAgIF0sXHJcbiAgICAgICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgIH07XHJcblxyXG4gICAgICAgIGZvcihqPTA7ajxraW5kW2ldLmxlbmd0aDtqKyspe1xyXG4gICAgICAgICAgYXBwLmRhdGFbaV0uYXZhaWxhYmxlT3B0aW9uc1tqKzFdID0ge1xyXG4gICAgICAgICAgICBuYW1lOiBraW5kW2ldW2pdLFxyXG4gICAgICAgICAgICBpZDogTnVtYmVyKHRlbXBbaV1bal0pXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgndHlwZUNvbnRyb2xsZXJzJywgWydhZG1pblNlcnZpY2VzJywgJ21lbnVTZXJ2aWNlcycsICdvcmRlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCd1cGRhdGVJdGVtVHlwZUN0cmwnLCBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIE1lbnUsIEFkbWluLCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIHZhciBpdGVtX2lkID0gJHN0YXRlUGFyYW1zLml0ZW1faWQ7XHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcblxyXG5cclxuICAgQWRtaW4ucmVhZFVwZGF0ZUl0ZW1UeXBlKGl0ZW1faWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgYXBwLnVwZGF0YURhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgIGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uID0ge1xyXG4gICAgICAgICAgICAgaWQgOiBhcHAudXBkYXRhRGF0YS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgIHZhciBzcGxpdE9wdGlvbkRhdGFzID0ge1xyXG4gICAgICAgICAgICAgICAgICAga2luZDogYXBwLnVwZGF0YURhdGEua2luZC5zcGxpdCgnLCcpLFxyXG4gICAgICAgICAgICAgICAgICAgcHJpY2U6IGFwcC51cGRhdGFEYXRhLnByaWNlLnNwbGl0KCcsJylcclxuICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgYXBwLm9wdGlvbkRhdGFzID0gW107XHJcblxyXG4gICAgICAgICAgIGZvcihpPTA7IGkgPCBzcGxpdE9wdGlvbkRhdGFzLmtpbmQubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICAgYXBwLm9wdGlvbkRhdGFzW2ldID0ge1xyXG4gICAgICAgICAgICAgICBraW5kOiBzcGxpdE9wdGlvbkRhdGFzLmtpbmRbaV0sXHJcbiAgICAgICAgICAgICAgIHByaWNlOiAgc3BsaXRPcHRpb25EYXRhcy5wcmljZVtpXSxcclxuICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgfVxyXG5cclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG5cclxuICAgICAgIH1cclxuICAgfSk7XHJcblxyXG4gICB0aGlzLnVwZGF0ZVR5cGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICBhcHAudXBkYXRlRGF0YSA9IGRhdGE7XHJcbiAgICAgYXBwLnVwZGF0ZURhdGEuY2F0ZWdvcnlfaWQgPSBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbi5pZDtcclxuICAgICBBZG1pbi51cGRhdGVVcGRhdGVUeXBlKGFwcC51cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgfVxyXG4gICAgIH0pO1xyXG4gICB9O1xyXG5cclxuICAgdGhpcy51cGRhdGVpdGVtVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIHZhciBraW5kQXJyYXkgPSBbXTtcclxuICAgICB2YXIgcHJpY2VBcnJheSA9IFtdO1xyXG4gICAgIGZvcihpPTA7aTxhcHAub3B0aW9uRGF0YXMubGVuZ3RoO2krKyl7XHJcbiAgICAgICBraW5kQXJyYXkucHVzaChhcHAub3B0aW9uRGF0YXNbaV0ua2luZCk7XHJcbiAgICAgICBwcmljZUFycmF5LnB1c2goYXBwLm9wdGlvbkRhdGFzW2ldLnByaWNlKTtcclxuICAgICB9XHJcbiAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICBpdGVtX2lkOiBkYXRhLml0ZW1faWQsXHJcbiAgICAgICBpdGVtX25hbWU6IGRhdGEuaXRlbV9uYW1lLFxyXG4gICAgICAgcHJpY2U6IHByaWNlQXJyYXkudG9TdHJpbmcoKSxcclxuICAgICAgIGtpbmQ6IGtpbmRBcnJheS50b1N0cmluZygpXHJcbiAgICAgfTtcclxuXHJcbiAgICAgQWRtaW4udXBkYXRlSXRlbVR5cGUodXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG5cclxuXHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVhZEl0ZW1UeXBlQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGUsICR3aW5kb3csIE1lbnUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgYXBwLmRhdGEgPSB7XHJcbiAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgIF0sXHJcbiAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgIH07XHJcblxyXG5cclxuICAgICB0aGlzLmNvcHlJdGVtVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG5cclxuICAgICAgIHZhciBpdGVtRGF0YSA9IHtcclxuICAgICAgICAgdHlwZTogZGF0YS5pdGVtX3R5cGVfaWQsXHJcbiAgICAgICAgIHRpdGxlOiBkYXRhLml0ZW1fbmFtZSxcclxuICAgICAgICAga2luZDogZGF0YS5raW5kLnRvU3RyaW5nKCksXHJcbiAgICAgICAgIHByaWNlOiBkYXRhLnByaWNlLnRvU3RyaW5nKClcclxuXHJcbiAgICAgICB9O1xyXG5cclxuXHJcblxyXG4gICAgIEFkbWluLmNyZWF0ZUl0ZW0oaXRlbURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG4gICB0aGlzLmRlbGV0ZVR5cGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICB2YXIgaXRlbV9pZCA9IGRhdGEuaXRlbV9pZDtcclxuICAgICBBZG1pbi5kZWxldGVJdGVtKGl0ZW1faWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgfVxyXG4gICAgIH0pO1xyXG4gICB9O1xyXG5cclxuLy8g7IOB7ZKIIOu2hOulmO2RnFxyXG4gIEFkbWluLnJlYWRJdGVtVHlwZSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgYXBwLnR5cGVEYXRhcyA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgIHZhciBraW5kRGF0YXMgPSBbXTtcclxuXHJcbiAgICAgIGZvcih2YXIgaT0wOyBpPGRhdGEuZGF0YS5yZXN1bHQubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAga2luZERhdGFzW2ldID0ge1xyXG4gICAgICAgICAgICAgIGtpbmQ6IGFwcC50eXBlRGF0YXNbaV0ua2luZC5zcGxpdCgnLCcpLFxyXG4gICAgICAgICAgICAgIHByaWNlOiBhcHAudHlwZURhdGFzW2ldLnByaWNlLnNwbGl0KCcsJylcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICBhcHAudHlwZURhdGFzW2ldLmtpbmQgPSBraW5kRGF0YXNbaV0ua2luZDtcclxuICAgICAgICAgIGFwcC50eXBlRGF0YXNbaV0ucHJpY2UgPSBraW5kRGF0YXNbaV0ucHJpY2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgIH1cclxuICB9KTtcclxufSlcclxuXHJcblxyXG4vLyDsg4Htkogg67aE66WY7ZGcXHJcbi5jb250cm9sbGVyKCd1cGRhdGVUeXBlQ3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgTWVudSwgQWRtaW4sICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGl0ZW1fdHlwZSA9ICRzdGF0ZVBhcmFtcy5pdGVtX3R5cGU7XHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgIEFkbWluLnJlYWRVcGRhdGVUeXBlKGl0ZW1fdHlwZSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgIH0pO1xyXG4gICAgICAgICAgIGFwcC51cGRhdGFEYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbiA9IHtcclxuICAgICAgICAgICAgIGlkIDogYXBwLnVwZGF0YURhdGEuY2F0ZWdvcnlfaWRcclxuICAgICAgICAgICB9O1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgICAgfVxyXG4gICB9KTtcclxuXHJcbiAgIHRoaXMudXBkYXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC51cGRhdGVEYXRhID0gZGF0YTtcclxuICAgICBhcHAudXBkYXRlRGF0YS5jYXRlZ29yeV9pZCA9IGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkO1xyXG4gICAgIEFkbWluLnVwZGF0ZVVwZGF0ZVR5cGUoYXBwLnVwZGF0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcbn0pXHJcblxyXG4vLyDsg4Htkogg67aE66WY7ZGcXHJcbi5jb250cm9sbGVyKCdyZWFkVHlwZUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlLCAkd2luZG93LCBNZW51KXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICAgIGFwcC5kYXRhID0ge1xyXG4gICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICBdLFxyXG4gICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG5cclxuICAgIHRoaXMuY29weVR5cGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgdmFyIHR5cGVEYXRhID0ge1xyXG4gICAgICAgIGNhdGVnb3J5OiBkYXRhLmNhdGVnb3J5X2lkLFxyXG4gICAgICAgIHR5cGVfZGVzY3JpcHRpb246IGRhdGEudHlwZV9kZXNjcmlwdGlvbixcclxuICAgICAgICB0eXBlX2NvZGU6IGRhdGEudHlwZV9jb2RlXHJcbiAgICAgIH07XHJcbiAgICAgIEFkbWluLmNyZWF0ZVR5cGUodHlwZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICB0aGlzLmRlbGV0ZVR5cGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICB2YXIgaXRlbV90eXBlX2lkID0gZGF0YS5pdGVtX3R5cGU7XHJcbiAgICAgQWRtaW4uZGVsZXRlVHlwZShpdGVtX3R5cGVfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgfVxyXG4gICAgIH0pO1xyXG4gICB9O1xyXG5cclxuLy8g7IOB7ZKIIOu2hOulmO2RnFxyXG4gIEFkbWluLnJlYWRUeXBlKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBhcHAudHlwZURhdGFzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgIH1cclxuICB9KTtcclxufSlcclxuXHJcbi8vIOyDge2SiCDrtoTrpZjtkZxcclxuLmNvbnRyb2xsZXIoJ2NyZWF0ZVR5cGVDdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZSwgTWVudSwgJHdpbmRvdyl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICB2YXIgdHlwZSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICBmb3IoaT0wOyBpPHR5cGUubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICBuYW1lOiB0eXBlW2ldLm5hbWUsXHJcbiAgICAgICAgICAgaWQ6IHR5cGVbaV0uY2F0ZWdvcnlfaWRcclxuICAgICAgICAgfTtcclxuICAgICAgIH1cclxuICAgICB9IGVsc2Uge1xyXG4gICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgfVxyXG4gICB9KTtcclxuXHJcblxyXG4gIHRoaXMuY3JlYXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBhcHAudHlwZURhdGEgPSB7XHJcbiAgICAgIGNhdGVnb3J5OiBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbi5pZCxcclxuICAgICAgdHlwZV9kZXNjcmlwdGlvbjogZGF0YS50eXBlX2Rlc2NyaXB0aW9uLFxyXG4gICAgICB0eXBlX2NvZGU6IGRhdGEudHlwZV9jb2RlXHJcbiAgICB9O1xyXG5cclxuICAgIEFkbWluLmNyZWF0ZVR5cGUoYXBwLnR5cGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3MgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICBhcHAua2luZExpc3QgPSBbXTtcclxuICBhcHAudHlwZV90aW55ID0gW107XHJcbiAgYXBwLnR5cGVfcHJpY2UgPSBbXTtcclxuXHJcbiAgdGhpcy5hZGRMaW5lID0gZnVuY3Rpb24oa2luZERhdGEpe1xyXG4gICAgaWYoIWtpbmREYXRhKXtcclxuICAgICAgJHdpbmRvdy5hbGVydCgn7KCV7ZmV7ZWcIOqwkuydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZihraW5kRGF0YS5raW5kVmFsdWUgPT09IG51bGwgfHwga2luZERhdGEua2luZFZhbHVlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFZhbHVlID09PSAnJylcclxuICAgICAge1xyXG4gICAgICAgICR3aW5kb3cuYWxlcnQoJ+yYteyFmOuqheydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgIH0gZWxzZSBpZihraW5kRGF0YS5raW5kUHJpY2UgPT09IG51bGwgfHwga2luZERhdGEua2luZFByaWNlID09PSB1bmRlZmluZWQgfHwga2luZERhdGEua2luZFByaWNlID09PSAnJyl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWYIOqwgOqyqeydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmtpbmRMaXN0LnB1c2goXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGtpbmQ6IGtpbmREYXRhLmtpbmRWYWx1ZSxcclxuICAgICAgICAgICAgcHJpY2U6IGtpbmREYXRhLmtpbmRQcmljZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgYXBwLnR5cGVfdGlueS5wdXNoKGtpbmREYXRhLmtpbmRWYWx1ZSk7XHJcbiAgICAgICAgYXBwLnR5cGVfcHJpY2UucHVzaChraW5kRGF0YS5raW5kUHJpY2UpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnZW1haWxDb250cm9sbGVycycsWyd1c2VyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ2VtYWlsQ3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgVXNlciwgJHRpbWVvdXQsICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgVXNlci5hY3RpdmVBY2NvdW50KCRzdGF0ZVBhcmFtcy50b2tlbikudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgIH0sMjAwMCk7XHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlICsgJy4uLuuplOyduCDtjpjsnbTsp4DroZwg7J2064+Z7ZWp64uI64ukLic7XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICAgICAgfSwyMDAwKTtcclxuICAgIH1cclxuICB9KTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdyZXNlbmRDdHJsJywgZnVuY3Rpb24oVXNlciwgJHRpbWVvdXQsICRzdGF0ZSl7XHJcbiAgYXBwID0gdGhpcztcclxuICB0aGlzLmNoZWNrQ3JlZGVudGlhbHMgPSBmdW5jdGlvbihsb2dpbkRhdGEpe1xyXG4gICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuXHJcbiAgICBVc2VyLmNoZWNrQ3JlZGVudGlhbHModGhpcy5sb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBVc2VyLnJlc2VuZExpbmsoYXBwLmxvZ2luRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICAgIH0sMjAwMCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1lbHNlIHtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCd1c2VybmFtZUN0cmwnLCBmdW5jdGlvbihVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB0aGlzLnNlbmRVc2VybmFtZSA9IGZ1bmN0aW9uKHVzZXJEYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBpZih2YWxpZCl7XHJcbiAgICAgIFVzZXIuc2VuZFVzZXJuYW1lKGFwcC51c2VyRGF0YS5lbWFpbCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlICsgJy4uLuuplOyduCDtjpjsnbTsp4DroZwg7J2064+Z7ZWp64uI64ukLic7XHJcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICB9LCAyMDAwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7J2066mU7J28IOyjvOyGjOqwgCDslYTri5nri4jri6QuJztcclxuICAgIH1cclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3Bhc3N3b3JkQ3RybCcsIGZ1bmN0aW9uKFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIGFwcC5zZW5kUGFzc3dvcmQgPSBmdW5jdGlvbihyZXNldERhdGEsIHZhbGlkKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIGlmKHZhbGlkKXtcclxuICAgICAgVXNlci5zZW5kUGFzc3dvcmQoYXBwLnJlc2V0RGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlICsgJy4uLuuplOyduCDtjpjsnbTsp4DroZwg7J2064+Z7ZWp64uI64ukLic7XHJcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICB9LCAyMDAwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7JWE7J2065SU6rCAIOyVhOuLmeuLiOuLpC4nO1xyXG4gICAgfVxyXG4gIH07XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVzZXRDdHJsJywgZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCAkc2NvcGUsIFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICAgIGFwcC5oaWRlID0gdHJ1ZTsgLy8gSGlkZSBmb3JtIHVudGlsIHRva2VuIGNhbiBiZSB2ZXJpZmllZCB0byBiZSB2YWxpZFxyXG5cclxuICAgIC8vIEZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRva2VuIGlzIHZhbGlkIGFuZCBnZXQgdGhlIHVzZXIncyBpbmZvIGZyb20gZGF0YWJhc2UgKHJ1bnMgb24gcGFnZSBsb2FkKVxyXG4gICAgVXNlci5yZXNldFBhc3N3b3JkKCRzdGF0ZVBhcmFtcy50b2tlbikudGhlbihmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgdXNlciB3YXMgcmV0cmlldmVkXHJcbiAgICAgICAgaWYgKGRhdGEuZGF0YS5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgIGFwcC5oaWRlID0gZmFsc2U7IC8vIFNob3cgZm9ybVxyXG4gICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtc3VjY2Vzcyc7IC8vIFNldCBzdWNjZXNzIG1lc3NhZ2UgY2xhc3NcclxuICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSAn7IOI66Gc7Jq0IOu5hOuwgOuyiO2YuOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsgLy8gTGV0IHVzZXIga25vdyB0aGV5IGNhbiBlbnRlciBuZXcgcGFzc3dvcmRcclxuICAgICAgICAgICAgJHNjb3BlLnVzZXJuYW1lID0gZGF0YS5kYXRhLnVzZXJbMF0udXNlcm5hbWU7IC8vIFNhdmUgdXNlcm5hbWUgaW4gc2NvcGUgZm9yIHVzZSBpbiBzYXZlUGFzc3dvcmQoKSBmdW5jdGlvblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1kYW5nZXInOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlOyAvLyBHcmFiIGVycm9yIG1lc3NhZ2UgZnJvbSBKU09OIG9iamVjdFxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIEZ1bmN0aW9uIHRvIHNhdmUgdXNlcidzIG5ldyBwYXNzd29yZCB0byBkYXRhYmFzZVxyXG4gICAgYXBwLnNhdmVQYXNzd29yZCA9IGZ1bmN0aW9uKHJlZ0RhdGEsIHZhbGlkLCBjb25maXJtZWQpIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTsgLy8gQ2xlYXIgZXJyb3JNc2cgd2hlbiB1c2VyIHN1Ym1pdHNcclxuICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7IC8vIERpc2FibGUgZm9ybSB3aGlsZSBwcm9jZXNzaW5nXHJcbiAgICAgICAgYXBwLmxvYWRpbmcgPSB0cnVlOyAvLyBFbmFibGUgbG9hZGluZyBpY29uXHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIGZvcm0gaXMgdmFsaWQgYW5kIHBhc3N3b3JkcyBtYXRjaFxyXG4gICAgICAgIGlmICh2YWxpZCAmJiBjb25maXJtZWQpIHtcclxuICAgICAgICAgICAgYXBwLnJlZ0RhdGEudXNlcm5hbWUgPSAkc2NvcGUudXNlcm5hbWU7IC8vIEdyYWIgdXNlcm5hbWUgZnJvbSAkc2NvcGVcclxuXHJcbiAgICAgICAgICAgIC8vIFJ1biBmdW5jdGlvbiB0byBzYXZlIHVzZXIncyBuZXcgcGFzc3dvcmQgdG8gZGF0YWJhc2VcclxuICAgICAgICAgICAgVXNlci5zYXZlUGFzc3dvcmQoYXBwLnJlZ0RhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgYXBwLmxvYWRpbmcgPSBmYWxzZTsgLy8gU3RvcCBsb2FkaW5nIGljb25cclxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHBhc3N3b3JkIHdhcyBzYXZlZCB0byBkYXRhYmFzZVxyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuZGF0YS5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmFsZXJ0ID0gJ2FsZXJ0IGFsZXJ0LXN1Y2Nlc3MnOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7ZmU66m07Jy866GcIOydtOuPme2VqeuLiOuLpC4nOyAvLyBHcmFiIHN1Y2Nlc3MgbWVzc2FnZSBmcm9tIEpTT04gb2JqZWN0IGFuZCByZWRpcmVjdFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlZGlyZWN0IHRvIGxvZ2luIHBhZ2UgYWZ0ZXIgMjAwMCBtaWxsaXNlY29uZHMgKDIgc2Vjb25kcylcclxuICAgICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1kYW5nZXInOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7IC8vIEVuYWJsZSBmb3JtIHRvIGFsbG93IHVzZXIgdG8gcmVzdWJtaXRcclxuICAgICAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTsgLy8gR3JhYiBlcnJvciBtZXNzYWdlIGZyb20gSlNPTiBvYmplY3RcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHNjb3BlLmFsZXJ0ID0gJ2FsZXJ0IGFsZXJ0LWRhbmdlcic7IC8vIFNldCBzdWNjZXNzIG1lc3NhZ2UgY2xhc3NcclxuICAgICAgICAgICAgYXBwLmxvYWRpbmcgPSBmYWxzZTsgLy8gU3RvcCBsb2FkaW5nIGljb25cclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7IC8vIEVuYWJsZSBmb3JtIHRvIGFsbG93IHVzZXIgdG8gcmVzdWJtaXRcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIExldCB1c2VyIGtub3cgZm9ybSBpcyBub3QgdmFsaWRcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ3VzZXJDb250cm9sbGVycycsWyd1c2VyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ3JlZ0N0cmwnLCBmdW5jdGlvbiAoICRodHRwLCAkbG9jYXRpb24sICR0aW1lb3V0LCBVc2VyLCBBdXRoLCAkc3RhdGUpIHtcclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICAgICAgdGhpcy5yZWdTdGVwMSA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGlmKCFyZWdEYXRhKXtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfslb3qtIDsl5Ag64+Z7J2Y7ZW07JW866eMIO2ajOybkOqwgOyeheydhCDsp4TtlontlaAg7IiYIOyeiOyKteuLiOuLpC4nO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZigocmVnRGF0YS50ZXJtcykgJiYgKHJlZ0RhdGEucHJpdmFjeSkpIHtcclxuICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gJ+yVveq0gOyXkCDshLHqs7XsoIHsnLzroZwg64+Z7J2Y7ZWY7IWo7Iq164uI64ukLic7XHJcbiAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgJHN0YXRlLmdvKCdhcHAucmVnaXN0ZXJTdGVwMicpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfslb3qtIDsl5Ag64+Z7J2Y7ZW07JW866eMIO2ajOybkOqwgOyeheydhCDsp4TtlontlaAg7IiYIOyeiOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfTtcclxuXHJcbiAgICAvLyDtmozsm5DqsIDsnoVcclxuICAgICAgdGhpcy5yZWdTdGVwMiA9IGZ1bmN0aW9uKHJlZ0RhdGEsIHZhbGlkLCBjb25maXJtZWQpe1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgJHN0YXRlLmdvKCdhcHAucmVnaXN0ZXJTdGVwMycpO1xyXG4gICAgICAgIC8vIGlmKHZhbGlkICYmIGNvbmZpcm1lZCl7XHJcbiAgICAgICAgLy8gICBVc2VyLmNyZWF0ZShhcHAucmVnRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAvLyAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIC8vICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgLy8gICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAvLyAgICAgICBBdXRoLmxvZ2luKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIC8vICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIC8vICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIC8vICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIC8vICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgIC8vICAgICAgICAgICB9LDEwMDApO1xyXG4gICAgICAgIC8vICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgIC8vICAgICAgICAgICBpZihkYXRhLmRhdGEuZXhwaXJlZCl7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgYXBwLmV4cGlyZWQgPSB0cnVlO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgLy8gICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgLy8gICAgICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICAgIH1cclxuICAgICAgICAvLyAgICAgICB9KTtcclxuICAgICAgICAvLyAgICAgfWVsc2Uge1xyXG4gICAgICAgIC8vICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICB9KTtcclxuICAgICAgICAvL1xyXG4gICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTsgLy8gSWYgZXJyb3Igb2NjdXJzLCByZW1vdmUgZGlzYWJsZSBsb2NrIGZyb20gZm9ybVxyXG4gICAgICAgIC8vICAgICAgYXBwLmxvYWRpbmcgPSBmYWxzZTsgLy8gU3RvcCBib290c3RyYXAgbG9hZGluZyBpY29uXHJcbiAgICAgICAgLy8gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOygleuztOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsgLy8gRGlzcGxheSBlcnJvciBpZiB2YWxpZCByZXR1cm5zIGZhbHNlXHJcbiAgICAgICAgLy8gfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8g7ZqM7JuQ6rCA7J6FXHJcbiAgICAgICAgdGhpcy5yZWdTdGVwMyA9IGZ1bmN0aW9uKHJlZ0RhdGEsIHZhbGlkLCBjb25maXJtZWQpe1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgaWYodmFsaWQgJiYgY29uZmlybWVkKXtcclxuICAgICAgICAgICAgVXNlci5jcmVhdGUoYXBwLnJlZ0RhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgICAgICBBdXRoLmxvZ2luKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICAgICAgICAgICAgICAgICAgICB9LDEwMDApO1xyXG4gICAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLmV4cGlyZWQpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGlyZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBJZiBlcnJvciBvY2N1cnMsIHJlbW92ZSBkaXNhYmxlIGxvY2sgZnJvbSBmb3JtXHJcbiAgICAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgYm9vdHN0cmFwIGxvYWRpbmcgaWNvblxyXG4gICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOygleuztOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsgLy8gRGlzcGxheSBlcnJvciBpZiB2YWxpZCByZXR1cm5zIGZhbHNlXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxufSk7XHJcbiJdfQ==
