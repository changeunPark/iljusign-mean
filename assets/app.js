angular.module("app",["ui.router","ui.bootstrap","menuControllers","userControllers","mainControllers","emailControllers","managementControllers","itemControllers","typeControllers","orderControllers","uiCropper","bannerController","galleryController","galleryServices","bootstrapLightbox"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),a.hashPrefix(""),a.html5Mode(!0),e.state("app",{url:"/",views:{"bodyContent@":{templateUrl:"/main/home.html"}}}).state("app.registerStep1",{url:"register/step1",views:{"bodyContent@":{templateUrl:"/users/register/registerStep1.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.registerStep2",{url:"register/step2",views:{"bodyContent@":{templateUrl:"/users/register/registerStep2.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.registerStep3",{url:"register/step3",views:{"bodyContent@app":{templateUrl:"/users/register/registerStep3.html",controller:"regCtrl",controllerAs:"register"}}}).state("app.login",{url:"login",views:{"bodyContent@":{templateUrl:"/users/login/login.html"}}}).state("app.board",{url:"board",views:{"bodyContent@":{templateUrl:"/categoryes/board/form.html"}}}).state("app.gallery",{url:"gallery",views:{"bodyContent@":{templateUrl:"/categoryes/gallery/home.html"}}}).state("app.user",{url:"user",views:{"bodyContent@":{templateUrl:"/users/partial/user.html"}}}).state("app.commerceDetail",{url:"commerce-detail",views:{"bodyContent@":{templateUrl:"/users/partial/commerceDetail.html"}}}).state("app.basket",{url:"basket",views:{"bodyContent@":{templateUrl:"/users/partial/basket.html",controller:"basketCtrl",controllerAs:"basket"}}}).state("app.category",{url:"category=:category_id",views:{"subMenu@app":{templateUrl:"/menues/subMenu.html",controller:"subMenuCtrl",controllerAs:"subMenu"},"bodyContent@":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.item_type",{url:"/item_type=:type_code",views:{"bodyContent@":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.item_type.show",{url:"/item:item_id",views:{"bodyContent@":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.category.show",{url:"/item:item_id",views:{"bodyContent@":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.makeOrder",{url:"makeOrder",views:{"bodyContent@":{templateUrl:"/order/makeOrder.html",controller:"readOrderCtrl",controllerAs:"readOrder"}}}).state("app.confirmOrder",{url:"confirmOrder",views:{"bodyContent@":{templateUrl:"/order/confirmOrder.html",controller:"readOrderCtrl",controllerAs:"readOrderCtrl"}}}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.intro",{url:"intro",views:{"bodyContent@":{templateUrl:"/directives/companyInformation/companyIntroduce.tpl.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"bodyContent@":{templateUrl:"/directives/companyInformation/terms.tpl.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"bodyContent@":{templateUrl:"/directives/companyInformation/privacy.tpl.html",authenticated:!1}}}).state("app.adminLaboratory",{url:"adminLaboratory",views:{"adminContent@":{templateUrl:"/directives/admin/adminLaboratory.tpl.html"}}}).state("app.adminOrderStatus",{url:"adminOrderStatus",views:{"adminContent@":{templateUrl:"/management/partial/orderStatus.html"}}}).state("app.adminMembers",{url:"adminMembers",views:{"adminContent@":{templateUrl:"/management/partial/members.html"}}}).state("app.adminCategory",{url:"adminCategory",views:{"adminContent@":{templateUrl:"/management/partial/category.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"}}}).state("app.adminTypeAndItems",{url:"adminTypeAndItems",views:{"adminContent@":{templateUrl:"/management/partial/typeAndItems.html"}}}).state("app.adminGallery",{url:"adminGallery",views:{"adminContent@":{templateUrl:"/management/partial/gallery.html",controller:"uploadgalleryCtrl",controllerAs:"uploadGallery"}}}).state("app.management",{url:"management",views:{"adminContent@app":{templateUrl:"/management/form.html"},"menu@app.management":{templateUrl:"/management/menu.html"}}}).state("app.management.typeAndItems.update",{url:"/updateType:item_type",views:{"contents@app.management":{templateUrl:"/management/partial/update/type.html",controller:"updateTypeCtrl",controllerAs:"updateType"}}}).state("app.management.typeAndItems.updateItemType",{url:"/updateItem:item_id",views:{"contents@app.management":{templateUrl:"/management/partial/update/itemType.html",controller:"updateItemTypeCtrl",controllerAs:"updateItemType"}}}).state("app.management.typeAndItems.updateItem",{url:"/update/item:item_id",views:{"contents@app.management":{templateUrl:"/management/partial/update/item.html",controller:"updateItemCtrl",controllerAs:"updateItem"}}}).state("app.management.typeAndItems.readItem",{url:":item_id",views:{"contents@app.management":{templateUrl:"/management/partial/read/item.html",controller:"readItemCtrl",controllerAs:"readItem"}}})}]),app.run(["$rootScope","User","$state",function(e,t,a){e.$on("$stateChangeStart",function(e,t,a,r,n,i){}),e.$on("$stateChangeError",function(e,t,r,n,i,s){a.go("app")})}]),angular.module("adminServices",[]).factory("Admin",["$http",function(e){return adminFactory={},adminFactory.deleteItem=function(t){return e.delete("/api/item/"+t)},adminFactory.readAristCrop=function(t){return e.post("/api/createCropImage",t)},adminFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},adminFactory.createItem=function(t){return e.post("/api/item",t)},adminFactory.readItems=function(){return e.get("/api/item")},adminFactory.readItem=function(t){return e.get("/api/item/"+t)},adminFactory.updateItemType=function(t){return e.put("/api/itemType",t)},adminFactory.readUpdateItemType=function(t){return e.get("/api/itemType/"+t)},adminFactory.readItemType=function(){return e.get("/api/itemType")},adminFactory.deleteType=function(t){return e.delete("/api/type/"+t)},adminFactory.readUpdateType=function(t){return e.get("/api/type/"+t)},adminFactory.updateUpdateType=function(t){return e.put("/api/type",t)},adminFactory.createType=function(t){return e.post("/api/type",t)},adminFactory.readType=function(){return e.get("/api/type")},adminFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("galleryServices",[]).factory("gallery",["$http",function(e){return galleryFactory={},galleryFactory.getContent=function(){return e.get("/api/gallery")},galleryFactory}]),angular.module("menuServices",[]).factory("Menu",["$http",function(e){return menuFactory={},menuFactory.deleteMenu=function(t){return e.delete("/api/menu/"+t)},menuFactory.updateMenu=function(t){return e.put("/api/menu/",t)},menuFactory.createMenu=function(t){return e.post("/api/menu",t)},menuFactory.readMainMenu=function(){return e.get("/api/menu")},menuFactory.readSubMenu=function(t){return e.get("/api/menu/"+t)},menuFactory}]),angular.module("orderServices",[]).factory("Order",["$http",function(e){return orderFactory={},orderFactory.updateDelivery=function(t){return e.put("/api/delivery/"+t.user_id,t)},orderFactory.createDelivery=function(t){return e.post("/api/delivery",t)},orderFactory.deleteBasket=function(t){return e.delete("/api/basket/"+t)},orderFactory.readBasket=function(){return e.get("/api/basket")},orderFactory.createBasket=function(t){return e.post("/api/basket",t)},orderFactory.deleteOrder=function(t){return e.delete("/api/makeOrder/"+t)},orderFactory.readOrder=function(t){return e.get("/api/makeOrder/"+t)},orderFactory.readOrderAndDeli=function(){return e.get("/api/makeOrder")},orderFactory.createOrder=function(t){return e.post("/api/makeOrder",t)},orderFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.getPermission=function(){return e.get("/api/permission")},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory}]),angular.module("app").directive("adminUsers",[function(){return{restrict:"E",controller:[function(){}],controllerAs:"NameCtrl",templateUrl:"/directives/adminUsers.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("banner",["$http",function(e){return{restrict:"E",controller:[function(){}],controllerAs:"bannerCtrl",templateUrl:"/directives/banner.tpl.html",link:function(t,a,r,n){var i=n;e.get("/api/banner").then(function(e){e.data.success?i.bannerData=e.data.bannerData:console.log("불러오지 못하였습니다.")})}}}]).controller("CarouselCtrl",["$scope",function(e){function t(e){for(var t=0,a=n.length;t<a;t++)n[t].id=e.pop()}function a(){for(var e=[],t=0;t<i;++t)e[t]=t;return r(e)}function r(e){var t,a,r=e.length;if(r)for(;--r;)a=Math.floor(Math.random()*(r+1)),t=e[a],e[a]=e[r],e[r]=t;return e}e.myInterval=2500,e.noWrapSlides=!1,e.active=0;var n=e.slides=[],i=0;e.addSlide=function(){n.length;n.push({image:["/images/items/banner/1.jpg","/images/items/banner/2.jpg","/images/items/banner/3.jpg"][n.length%3],id:i++})},e.randomize=function(){t(a())};for(var s=0;s<3;s++)e.addSlide()}]),angular.module("app").directive("galleryContent",["gallery","Lightbox",function(e,t){return{restrict:"E",controller:[function(){}],controllerAs:"galleryCtrl",templateUrl:"/directives/gallery.tpl.html",link:function(a,r,n,i){var s=i;e.getContent().then(function(e){e.data.success?s.galleryData=e.data.galleryData:s.errorMsg=e.data.message}),s.openLightboxModal=function(e){t.openModal(s.galleryData,e)}}}}]),angular.module("app").directive("menuItem",["Menu",function(e){return{restrict:"E",controller:[function(){}],controllerAs:"menuItemCtrl",templateUrl:"/directives/menuItem.tpl.html",link:function(t,a,r,n){var i=n;e.readMainMenu().then(function(e){e.data.success?i.mainMenues=e.data.result:i.errorMsg=e.data.message})}}}]),angular.module("bannerController",[]).controller("uploadBannerCtrl",["$scope","$timeout","$http","$window","$state",function(e,t,a,r,n){var i=this;this.file={},this.readImage=function(a){if(e.$emit("LOAD"),a.length>0&&a[0].name.match(/\.(png|jpeg|jpg)$/)){var r=a[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(a){t(function(){e.$emit("UNLOAD"),i.explainThumbnail={},i.explainThumbnail.dataUrl=a.target.result})}}else e.$emit("UNLOAD"),i.explainThumbnail={}},this.uploadBanner=function(){e.$emit("LOAD"),i.explainPhoto=!1,i.disabled=!0;var t=new FormData;t.append("myfile",i.file.upload),a.post("/api/banner/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),r.alert(t.data.message),n.reload(),i.explainPhoto=!0,i.disabled=!1):(e.$emit("UNLOAD"),r.alert(t.data.message),i.disabled=!1,i.file={})})}}]).controller("getBannerCtrl",["$http",function(e){var t=this;e.get("/api/banner").then(function(e){e.data.success?t.bannerData=e.data.bannerData:console.log("불러오지 못하였습니다.")})}]),angular.module("galleryController",[]).controller("uploadgalleryCtrl",["$scope","$timeout","$http","$window","$state",function(e,t,a,r,n){var i=this;this.file={},this.readImage=function(a){if(e.$emit("LOAD"),a.length>0&&a[0].name.match(/\.(png|jpeg|jpg)$/)){var r=a[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(a){t(function(){e.$emit("UNLOAD"),i.explainThumbnail={},i.explainThumbnail.dataUrl=a.target.result})}}else e.$emit("UNLOAD"),i.explainThumbnail={}},this.uploadImage=function(t){e.$emit("LOAD"),i.explainPhoto=!1,i.disabled=!0;var n=new FormData;n.title=t,n.append("myfile",i.file.upload),a.patch("/api/gallery/",n,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(i.imagePath=t.data.image_path,e.$emit("UNLOAD"),r.alert(t.data.message),i.explainPhoto=!0,i.disabled=!1):(e.$emit("UNLOAD"),r.alert(t.data.message),i.disabled=!1,i.file={})})},this.uploadGallery=function(e){galleryData={thumbUrl:i.imagePath,url:i.imagePath,caption:e},a.post("/api/gallery",galleryData).then(function(e){})}}]).controller("getGalleryCtrl",["$http",function(e){var t=this;e.get("/api/gallery").then(function(e){e.data.success?t.galleryData=e.data.galleryData:console.log("불러오지 못하였습니다.")})}]),angular.module("itemControllers",["orderServices"]).filter("sumByKey",function(){return function(e,t){var a=e instanceof Array?e.length:0;if(void 0===t||0===a)return a;for(var r=0;a--;)r+=e[a][t[0]]*e[a][t[1]];return r}}).controller("getTypeItemsCtrl",["$stateParams","$http",function(e,t){var a=this,r=e.category_id;if(e.type_code){var n=e.type_code;t.get("/api/item_type/"+r,{params:{type_code:n}}).then(function(e){e.data.success?0===e.data.result.length?a.errorMsg="등록된 상품이 없습니다.":a.itemsData=e.data.result:a.errorMsg=e.data.message})}else t.get("/api/item_type/"+r).then(function(e){e.data.success?0===e.data.result.length?a.errorMsg="등록된 상품이 없습니다.":a.itemsData=e.data.result:a.errorMsg=e.data.message})}]).controller("getTypeItemCtrl",["Admin","$stateParams","$window","$state","Order",function(e,t,a,r,n){var s=this,o=t.item_id;s.optionItem=!1,s.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},s.amount=1,s.optionList=[],this.addItem=function(e){0===e.id?a.alert("옵션을 선택해주세요."):(s.optionItem=!0,s.optionList.push({kind:e.name,price:e.id,amount:1}))},this.createBasket=function(e){var t={item_id:e.item_id};n.createBasket(t).then(function(e){e.data.success,a.alert(e.data.message)})},this.createOrder=function(e){var t={item_id:e.item_id,amount:e.amount,kind_of:e.kind_of,price:e.price};n.createOrder(t).then(function(e){e.data.success?(s.successMsg=e.data.message,r.go("app.makeOrder")):s.errorMsg=e.data})},e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(","),a=e.data.result.price.split(","),r=[];for(i=0;i<a.length;i++)r[i]=Number(a[i]);for(s.itemData=e.data.result,i=0;i<r.length;i++)s.data.availableOptions[i+1]={name:t[i],id:r[i]}}else s.errorMsg=e.data.message})}]),angular.module("managementControllers",["adminServices","menuServices","orderServices"]).controller("readItemsCtrl",["Admin","$state",function(e,t){var a=this;e.readItems().then(function(e){a.errorMsg=!1,e.data.success?a.itemsData=e.data.result:a.errorMsg=e.data.message}),this.deleteItem=function(r){a.errorMsg=!1;var n=r.item_id;e.deleteItem(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]).controller("readItemCtrl",["Admin","$stateParams","$scope","Order","$window",function(e,t,a,r,n){var s=this,o=t.item_id;s.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},s.amount=1,e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(","),a=e.data.result.price.split(","),r=[];for(i=0;i<a.length;i++)r[i]=Number(a[i]);for(s.itemData=e.data.result,s.data.selectedOption={id:r[0]},i=0;i<r.length;i++)s.data.availableOptions[i+1]={name:t[i],id:r[i]}}else s.errorMsg=e.data.message})}]).controller("updateItemCtrl",["Admin","$stateParams","$scope","$http","$timeout","$state","$window","Menu",function(e,t,a,r,n,s,o,l){function d(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var c=this,u=t.item_id;c.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},l.readMainMenu().then(function(e){if(c.errorMsg=!1,e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)c.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else c.errorMsg=e.data.message}),this.readMenu=function(e){if(c.errorMsg=!1,c.readMenuStatus=!1,0===e.id)o.alert("카테고리를 선택해주세요.");else{var t=e.id;r.get("/api/menu/"+t).then(function(e){if(e.data.success)if(0===e.data.result.length)c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},o.alert("등록된 상품이 없습니다.");else{c.readMenuStatus=!0,c.data2={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)c.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}else c.errorMsg=e.data.message})}},e.readItem(u).then(function(e){console.log(e),e.data.success?(c.itemData=e.data.result,c.data.selectedOption={id:c.itemData.category_id}):c.errorMsg=e.data.message}),this.updateItem=function(e){if(c.errorMsg=!1,c.readMenuStatus)if(0===e.item_type||"0"===e.item_type)o.alert("상품 분류를 선택해주세요.!");else{var t={type:e.item_type,item_name:e.item_name};r.put("/api/item/"+u,t).then(function(e){e.data.success?(c.successMsg=e.data.message,s.reload()):c.errorMsg=e.data.message})}else updateData2={type:c.itemData.item_type_id,item_name:e.item_name},r.put("/api/item/"+u,updateData2).then(function(e){e.data.success?(c.successMsg=e.data.message,s.reload()):c.errorMsg=e.data.message})},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),c.mainThumbnail={},c.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),c.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),c.mainPhoto=!1,c.disabled=!0;var e=new FormData;e.append("myfile",c.file.upload),r.post("/api/createPhotoImage/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.mainPhoto=!0,c.disabled=!1;var t={image:e.data.item_path};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)}),c.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),c.disabled=!1,c.file={}})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){n(function(){a.$emit("UNLOAD"),c.explainThumbnail={},c.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),c.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),c.explainPhoto=!1,c.disabled=!0;var e=new FormData;e.append("myfile",c.file.upload),r.post("/api/createPhotoExplain/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.explainPhoto=!0,c.disabled=!1;var t={explain:e.data.item_path};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)}),c.file={}}else a.$emit("UNLOAD"),o.alert(e.data.message),c.disabled=!1,c.file={}})},c.myImage="",c.myCroppedImage="";var m=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),c.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",m),this.readCropImage=function(t){if(a.$emit("LOAD"),c.thumbnail=!1,c.disabled=!0,""===t.base64Url||null===t.base64Url||void 0===t.base64Url)c.disabled=!1;else{a.$emit("UNLOAD");var n=d(a.myCroppedImage);e.readAristCrop(n).then(function(e){if(e.data.success){a.$emit("UNLOAD"),o.alert(e.data.message),c.thumbnail=!0,c.disabled=!1;var t={thumbnail:e.data.filePath};r.put("/api/item/"+u,t).then(function(e){e.data.success,console.log(e.data.message)})}else a.$emit("UNLOAD"),c.disabled=!1})}}}]).controller("createItemCtrl",["$http","$timeout","$scope","Admin","$state","$window","Menu",function(e,t,a,r,n,s,o){function l(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var d=this;d.kindList=[],d.type_tiny=[],d.type_price=[],this.addLine=function(e){e?null===e.kindValue||void 0===e.kindValue||""===e.kindValue?s.alert("옵션명을 입력해주세요."):null===e.kindPrice||void 0===e.kindPrice||""===e.kindPrice?s.alert("옵션 가격을 입력해주세요."):(d.kindList.push({kind:e.kindValue,price:e.kindPrice}),d.type_tiny.push(e.kindValue),d.type_price.push(e.kindPrice)):s.alert("정확한 값을 입력해주세요.")},d.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},o.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)d.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else d.errorMsg=e.data.message}),this.readMenu=function(t){if(0===t.id)s.alert("카테고리를 선택해주세요.");else{var a=t.id;e.get("/api/menu/"+a).then(function(e){if(e.data.success)if(0===e.data.result.length)d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},s.alert("등록된 상품이 없습니다.");else{d.data2={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}};var t=e.data.result;for(i=0;i<t.length;i++)d.data2.availableOptions[i+1]={name:t[i].type_description,id:t[i].item_type_id}}})}},this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),d.mainThumbnail={},d.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),d.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),d.mainPhoto=!1,d.disabled=!0;var t=new FormData;t.append("myfile",d.file.upload),e.post("/api/createPhotoImage/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.mainPhoto=!0,d.disabled=!1,d.mainImagePath=e.data.item_path,d.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),d.disabled=!1,d.file={})})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),d.explainThumbnail={},d.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),d.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),d.explainPhoto=!1,d.disabled=!0;var t=new FormData;t.append("myfile",d.file.upload),e.post("/api/createPhotoExplain/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.explainPhoto=!0,d.disabled=!1,d.explainImagePath=e.data.item_path,d.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),d.disabled=!1,d.file={})})},d.myImage="",d.myCroppedImage="";var c=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),d.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",c),this.readCropImage=function(e){if(a.$emit("LOAD"),d.thumbnail=!1,d.disabled=!0,""===e.base64Url||null===e.base64Url||void 0===e.base64Url)d.disabled=!1;else{a.$emit("UNLOAD");var t=l(a.myCroppedImage);r.readAristCrop(t).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),d.thumbnail=!0,d.disabled=!1,d.thumbnailPath=e.data.filePath):(a.$emit("UNLOAD"),d.disabled=!1)})}},this.createPhoto=function(e){a.$emit("LOAD"),void 0===e||null===e||""===e?(s.alert("빈칸을 모두 입력해주세요."),d.disabled=!1,a.$emit("UNLOAD")):"0"===d.data2.selectedOption.id?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 분류을 선택해주세요.")):void 0===e.title||null===e.title||""===e.title?(a.$emit("UNLOAD"),d.disabled=!1,s.alert("상품 제목를 입력해주세요.")):(d.uploadData={title:e.title,type:d.data2.selectedOption.id,kind:d.type_tiny.toString(),price:d.type_price.toString()},r.createItem(d.uploadData).then(function(e){e.data.success?(a.$emit("UNLOAD"),d.disabled=!0,s.alert(e.data.message),n.reload()):(a.$emit("UNLOAD"),d.disabled=!1,s.alert(e.data.message))}))}}]),angular.module("menuControllers",["menuServices"]).controller("mainMenuCtrl",["Menu","$state",function(e,t){var a=this;this.createMenu=function(r){if(a.errorMsg=!1,void 0===r)a.errorMsg="올바른 정보를 입력해주세요.";else{var n={name:r.name};e.createMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}},this.update=function(r){a.errorMsg=!1;var n={category_id:r.category_id,name:r.name};e.updateMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})},this.delete=function(r){a.errorMsg=!1;var n=r.category_id;e.deleteMenu(n).then(function(e){e.data.success?(a.successMsg=e.data.message,t.reload()):a.errorMsg=e.data.message})}}]).controller("subMenuCtrl",["Menu","$state","$stateParams","$http",function(e,t,a,r){var n=this,i=a.category_id;r.get("/api/category/"+i).then(function(e){e.data.success&&(n.subMenuDatas=e.data.result)})}]),angular.module("typeControllers",["adminServices","menuServices","orderServices"]).controller("updateItemTypeCtrl",["$stateParams","Menu","Admin","$state",function(e,t,a,r){var n=this,s=e.item_id;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readUpdateItemType(s).then(function(e){if(n.errorMsg=!1,e.data.success){t.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.updataData=e.data.result,n.data.selectedOption={id:n.updataData.category_id};var a={kind:n.updataData.kind.split(","),price:n.updataData.price.split(",")};for(n.optionDatas=[],i=0;i<a.kind.length;i++)n.optionDatas[i]={kind:a.kind[i],price:a.price[i]}}else n.errorMsg=e.data.message}),this.updateType=function(e){n.updateData=e,n.updateData.category_id=n.data.selectedOption.id,a.updateUpdateType(n.updateData).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})},this.updateitemType=function(e){var t=[],s=[];for(i=0;i<n.optionDatas.length;i++)t.push(n.optionDatas[i].kind),s.push(n.optionDatas[i].price);var o={item_id:e.item_id,item_name:e.item_name,price:s.toString(),kind:t.toString()};a.updateItemType(o).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})}}]).controller("readItemTypeCtrl",["Admin","$state","$window","Menu",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.copyItemType=function(a){var r={type:a.item_type_id,title:a.item_name,kind:a.kind.toString(),price:a.price.toString()};e.createItem(r).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},this.deleteType=function(a){n.errorMsg=!1;var r=a.item_id;e.deleteItem(r).then(function(e){e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},e.readItemType().then(function(e){if(e.data.success){r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(a=0;a<t.length;a++)n.data.availableOptions[a+1]={name:t[a].name,id:t[a].category_id}}else n.errorMsg=e.data.message}),n.typeDatas=e.data.result;for(var t=[],a=0;a<e.data.result.length;a++)t[a]={kind:n.typeDatas[a].kind.split(","),price:n.typeDatas[a].price.split(",")},n.typeDatas[a].kind=t[a].kind,n.typeDatas[a].price=t[a].price}else n.errorMsg=e.data.message})}]).controller("updateTypeCtrl",["$stateParams","Menu","Admin","$state",function(e,t,a,r){var n=this,s=e.item_type;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readUpdateType(s).then(function(e){n.errorMsg=!1,e.data.success?(t.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.updataData=e.data.result,n.data.selectedOption={id:n.updataData.category_id}):n.errorMsg=e.data.message}),this.updateType=function(e){n.updateData=e,n.updateData.category_id=n.data.selectedOption.id,a.updateUpdateType(n.updateData).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,r.reload()):n.errorMsg=e.data.message})}}]).controller("readTypeCtrl",["Admin","$state","$window","Menu",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.copyType=function(a){var r={category:a.category_id,type_description:a.type_description,type_code:a.type_code};e.createType(r).then(function(e){n.errorMsg=!1,e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},this.deleteType=function(a){n.errorMsg=!1;var r=a.item_type;e.deleteType(r).then(function(e){e.data.success?(n.successMsg=e.data.message,t.reload()):n.errorMsg=e.data.message})},e.readType().then(function(e){e.data.success?(r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),n.typeDatas=e.data.result):n.errorMsg=e.data.message})}]).controller("createTypeCtrl",["Admin","$state","Menu","$window",function(e,t,a,r){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},a.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),this.createType=function(a){n.errorMsg=!1,n.typeData={category:n.data.selectedOption.id,type_description:a.type_description,type_code:a.type_code},e.createType(n.typeData).then(function(e){e.data.success?(n.success=e.data.message,t.reload()):n.errorMsg=e.data.message})},n.kindList=[],n.type_tiny=[],
n.type_price=[],this.addLine=function(e){e?null===e.kindValue||void 0===e.kindValue||""===e.kindValue?r.alert("옵션명을 입력해주세요."):null===e.kindPrice||void 0===e.kindPrice||""===e.kindPrice?r.alert("옵션 가격을 입력해주세요."):(n.kindList.push({kind:e.kindValue,price:e.kindPrice}),n.type_tiny.push(e.kindValue),n.type_price.push(e.kindPrice)):r.alert("정확한 값을 입력해주세요.")}}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,n,i,s,o,l,d){var c=this;c.loadme=!1,i.$on("LOAD",function(){i.loading=!0}),i.$on("UNLOAD",function(){i.loading=!1}),n.$on("$stateChangeStart",function(){u?e.isLoggedIn()?(c.isLoggedIn=!0,c.loadme=!0,e.getUser().then(function(e){c.user=e.data,c.loadme=!0,l.getPermission().then(function(e){e.data.success?"admin"===e.data.permission?(c.authorized=!0,c.permission=!0,c.loadme=!0):"artist"===e.data.permission?(c.permission=!0,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0)})})):(c.user=!1,c.isLoggedIn=!1,c.loadme=!0):u()});var u=function(){if(e.isLoggedIn()){c.checkSession=!0;var t=o(function(){var e=s.localStorage.getItem("token");if(null===e)o.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(s.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(m("expired"),o.cancel(t))}},2e3)}};u(),c.renewSession=function(){c.choiceMade=!0,l.renewSession(c.user.username).then(function(e){e.data.success?(d.setToken(e.data.token),u(),p("expired")):(c.ModalBody=e.data.message,p("expired"))})},c.endSession=function(){c.choiceMade=!0,p("expired"),t(function(){m("logout")},500)};var m=function(a){c.choiceMade=!1,c.modalHeader=void 0,c.modalBody=void 0,c.hideButton=!1,"expired"===a?(c.modalHeader="Timeout Warning",c.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(c.hideButton=!0,c.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),c.isLoggedIn=!1,c.authorized=!1,c.permission=!1,c.disabled=!1,c.successMsg=!1,p("logout"),r.reload()},1e3)):"login"===a&&$("#login").modal({backdrop:"static"}),t(function(){c.choiceMade||p("logout")},2e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e&&$("#login").modal("hide")};this.doLogin=function(a,n){c.errorMsg=!1,c.expired=!1,c.disabled=!0,n?e.login(c.loginData).then(function(e){e.data.success?(c.successMsg=e.data.message,t(function(){c.loginData=null,c.isLoggedIn=!0,u(),r.go("app")},1e3)):e.data.expired?(c.expired=!0,c.disabled=!0,c.errorMsg=e.data.message):(c.disabled=!1,c.errorMsg=e.data.message)}):(c.disabled=!1,c.loading=!1,c.errorMsg="올바른 정보를 입력해주세요.")},c.logout=function(){m("logout")},c.resend=function(){p("login"),t(function(){r.go("resend"),c.expired=!1},500)},c.resetusername=function(){p("login"),t(function(){r.go("resetusername")},500)},c.resetpassword=function(){p("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("orderControllers",["orderServices"]).controller("readOrderCtrl",["$stateParams","$state","$window","Order","$scope",function(e,t,a,r,n){var s=this,o=n.main.user.user_id;s.getItemFail=!1,s.cashReceipt=!0,s.cashReceipt?s.getCashReceipt=!0:s.getCashReceipt=!1,this.readAddress=function(){daum.postcode.load(function(){s.addressDetail="",new daum.Postcode({oncomplete:function(e){s.deliData={sigungu_code:e.sigunguCode,jibun_address:e.jibunAddress,road_address:e.roadAddress}}}).open()})},r.readOrderAndDeli().then(function(e){if(s.errorMsg=!1,e.data.success)if(0===e.data.result.length)s.delivery=!1,r.readOrder(o).then(function(e){var t=[];for(s.allItemPrice=0,s.orderData=e.data.result,i=0;i<s.orderData.length;i++)t[i]=s.orderData[i].price*s.orderData[i].amount;for(i=0;i<t.length;i++)s.allItemPrice=s.allItemPrice+t[i]});else{var t=[];for(s.delivery=!0,s.allItemPrice=0,s.orderData=e.data.result,i=0;i<s.orderData.length;i++)t[i]=s.orderData[i].price*s.orderData[i].amount;for(i=0;i<t.length;i++)s.allItemPrice=s.allItemPrice+t[i]}else s.errorMsg=e.data.message}),this.confirmOrder=function(e){var t="";s.delivery?void 0===e.daliData?console.log("변경사항 없음"):(t=e.daliData,r.updateDelivery(t).then(function(e){})):(t=e.daliData,e.receiptData,r.createDelivery(t).then(function(e){}))},this.delete=function(e){s.errorMsg=!1;var a=e.item_id;r.deleteOrder(a).then(function(e){e.data.success?(s.successMsg=e.data.message,t.reload()):s.errorMsg=e.data.message})}}]).controller("basketCtrl",["Order","$window","$state",function(e,t,a){var r=this;r.amount=1,r.data={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},this.delete=function(t){r.errorMsg=!1;var n=t.basket_id;e.deleteBasket(n).then(function(e){e.data.success?(r.successMsg=e.data.message,a.reload()):r.errorMsg=e.data.message})},this.makeBasket=function(){},e.readBasket().then(function(e){if(r.errorMsg=!1,e.data.success){r.basketData=e.data.result;var t,a=[],n=[];for(t=0;t<r.basketData.length;t++)a[t]=r.basketData[t].kind.split(","),n[t]=r.basketData[t].price.split(",");for(t=0;t<a.length;t++)for(r.data[t]={availableOptions:[{id:0,name:"카테고리를 선택해주세요."}],selectedOption:{id:0,name:"카테고리를 선택해주세요."}},j=0;j<a[t].length;j++)r.data[t].availableOptions[j+1]={name:a[t][j],id:Number(n[t][j])}}else r.errorMsg=e.data.message})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var n=this;t.activeAccount(e.token).then(function(e){n.successMsg=!1,n.errorMsg=!1,e.data.success?(n.disabled=!0,n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(n.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(n,i){r.errorMsg=!1,r.disabled=!0,i?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(n,i){r.errorMsg=!1,r.disabled=!0,i?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,n){var i=this;i.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(i.hide=!1,t.alert="alert alert-success",i.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",i.errorMsg=e.data.message)}),i.savePassword=function(e,s,o){i.errorMsg=!1,i.successMsg=!1,i.disabled=!0,i.loading=!0,s&&o?(i.regData.username=t.username,a.savePassword(i.regData).then(function(e){i.loading=!1,e.data.success?(t.alert="alert alert-success",i.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){n.go("app")},2e3)):(t.alert="alert alert-danger",i.disabled=!1,i.errorMsg=e.data.message)})):(t.alert="alert alert-danger",i.loading=!1,i.disabled=!1,i.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,n,i){var s=this;this.regStep1=function(e){s.errorMsg=!1,e?e.terms&&e.privacy?(s.successMsg="약관에 성공적으로 동의하셨습니다.",s.disabled=!0,i.go("app.registerStep2")):(s.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",s.disabled=!1):s.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,a){s.errorMsg=!1,s.disabled=!0,i.go("app.registerStep3")},this.regStep3=function(e,t,o){s.errorMsg=!1,s.disabled=!0,t&&o?r.create(s.regData).then(function(e){e.data.success?(s.disabled=!0,s.successMsg=e.data.message,n.login(s.regData).then(function(e){e.data.success?(s.disabled=!0,s.successMsg=e.data.message,a(function(){i.go("app")},1e3)):e.data.expired?(s.expired=!0,s.disabled=!0,s.errorMsg=e.data.message):(s.disabled=!1,s.errorMsg=e.data.message)})):(s.disabled=!1,s.errorMsg=e.data.message)}):(s.disabled=!1,s.loading=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("app").directive("adminHeader",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/admin/adminHeader.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("adminLaboratory",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/admin/adminLaboratory.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var n=e(r.fileModel),i=n.assign;a.bind("change",function(){t.$apply(function(){i(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("app").directive("companyIntroduce",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/main/companyIntroduce.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("companyPrivacyInformation",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/companyInformation/companyPrivacyInformation.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("privacy",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/main/privacy.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("terms",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/main/terms.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("userQuickMenu",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/companyInformation/userQuickMenu.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("content",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/main/content.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("footer",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/main/footer.tpl.html",link:function(e,t,a,r){}}}]),angular.module("app").directive("header",[function(){return{restrict:"E",controller:[function(){}],templateUrl:"/directives/main/header.tpl.html",link:function(e,t,a,r){}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlLmpzIiwic2VydmljZXMvYWRtaW5TZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2F1dGhTZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2dhbGxlcnlTZXJ2aWNlcy5qcyIsInNlcnZpY2VzL21lbnVTZXJ2aWNlcy5qcyIsInNlcnZpY2VzL29yZGVyU2VydmljZXMuanMiLCJzZXJ2aWNlcy91c2VyU2VydmljZXMuanMiLCJkaXJlY3RpdmVzL2FkbWluVXNlcnMuanMiLCJkaXJlY3RpdmVzL2Jhbm5lci5qcyIsImRpcmVjdGl2ZXMvZ2FsbGVyeS5qcyIsImRpcmVjdGl2ZXMvbWVudUl0ZW0uanMiLCJjb250cm9sbGVycy9hZG1pbi9iYW5uZXJDb250cm9sbGVyLmpzIiwiY29udHJvbGxlcnMvYWRtaW4vZ2FsbGVyeUNvbnRyb2xsZXIuanMiLCJjb250cm9sbGVycy9hZG1pbi9pdGVtQ29udHJvbGxlcnMuanMiLCJjb250cm9sbGVycy9hZG1pbi9tYW5hZ2VtZW50Q29udHJvbGxlcnMuanMiLCJjb250cm9sbGVycy9hZG1pbi9tZW51Q29udHJvbGxlcnMuanMiLCJjb250cm9sbGVycy9hZG1pbi90eXBlQ29udHJvbGxlcnMuanMiLCJjb250cm9sbGVycy9tYWluL21haW5Db250cm9sbGVycy5qcyIsImNvbnRyb2xsZXJzL21haW4vb3JkZXJDb250cm9sbGVycy5qcyIsImNvbnRyb2xsZXJzL3VzZXIvZW1haWxDdHJsLmpzIiwiY29udHJvbGxlcnMvdXNlci91c2VyQ3RybC5qcyIsImRpcmVjdGl2ZXMvYWRtaW4vYWRtaW5IZWFkZXIuanMiLCJkaXJlY3RpdmVzL2FkbWluL2FkbWluTGFib3JhdG9yeS5qcyIsImRpcmVjdGl2ZXMvYXR0cmlidXRlL2ZpbGVNb2RlbC5qcyIsImRpcmVjdGl2ZXMvYXR0cmlidXRlL21hdGNoUGFzc3dvcmQuanMiLCJkaXJlY3RpdmVzL2NvbXBhbnlJbmZvcm1hdGlvbi9jb21wYW55SW50cm9kdWNlLmpzIiwiZGlyZWN0aXZlcy9jb21wYW55SW5mb3JtYXRpb24vY29tcGFueVByaXZhY3lJbmZvcm1hdGlvbi5qcyIsImRpcmVjdGl2ZXMvY29tcGFueUluZm9ybWF0aW9uL3ByaXZhY3kuanMiLCJkaXJlY3RpdmVzL2NvbXBhbnlJbmZvcm1hdGlvbi90ZXJtcy5qcyIsImRpcmVjdGl2ZXMvY29tcGFueUluZm9ybWF0aW9uL3VzZXJRdWlja01lbnUuanMiLCJkaXJlY3RpdmVzL21haW4vY29udGVudC5qcyIsImRpcmVjdGl2ZXMvbWFpbi9mb290ZXIuanMiLCJkaXJlY3RpdmVzL21haW4vaGVhZGVyLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkaHR0cFByb3ZpZGVyIiwiaW50ZXJjZXB0b3JzIiwicHVzaCIsImFwcCIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCJvdGhlcndpc2UiLCJoYXNoUHJlZml4IiwiaHRtbDVNb2RlIiwic3RhdGUiLCJ1cmwiLCJ2aWV3cyIsImJvZHlDb250ZW50QCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsImJvZHlDb250ZW50QGFwcCIsInN1Yk1lbnVAYXBwIiwiYXV0aGVudGljYXRlZCIsImFkbWluQ29udGVudEAiLCJhZG1pbkNvbnRlbnRAYXBwIiwibWVudUBhcHAubWFuYWdlbWVudCIsImNvbnRlbnRzQGFwcC5tYW5hZ2VtZW50IiwicnVuIiwiJHJvb3RTY29wZSIsIlVzZXIiLCIkc3RhdGUiLCIkb24iLCJldmVudCIsInRvU3RhdGUiLCJ0b1BhcmFtcyIsImZyb21TdGF0ZSIsImZyb21QYXJhbXMiLCJvcHRpb25zIiwiZXJyb3IiLCJnbyIsImZhY3RvcnkiLCIkaHR0cCIsImFkbWluRmFjdG9yeSIsImRlbGV0ZUl0ZW0iLCJpdGVtX2lkIiwiZGVsZXRlIiwicmVhZEFyaXN0Q3JvcCIsImJsb2IiLCJwb3N0IiwiY3JlYXRlQXJpc3RQaG90byIsInBob3RvRGF0YSIsImNyZWF0ZUl0ZW0iLCJpdGVtRGF0YSIsInJlYWRJdGVtcyIsImdldCIsInJlYWRJdGVtIiwidXBkYXRlSXRlbVR5cGUiLCJ1cGRhdGVEYXRhIiwicHV0IiwicmVhZFVwZGF0ZUl0ZW1UeXBlIiwicmVhZEl0ZW1UeXBlIiwiZGVsZXRlVHlwZSIsIml0ZW1fdHlwZV9pZCIsInJlYWRVcGRhdGVUeXBlIiwiaXRlbV90eXBlIiwidXBkYXRlVXBkYXRlVHlwZSIsImNyZWF0ZVR5cGUiLCJ0eXBlRGF0YSIsInJlYWRUeXBlIiwiQXV0aFRva2VuIiwiYXV0aEZhY3RvcnkiLCJnZXRVc2VyIiwiZ2V0VG9rZW4iLCIkcSIsInJlamVjdCIsIm1lc3NhZ2UiLCJsb2dpbiIsImxvZ2luRGF0YSIsInRoZW4iLCJkYXRhIiwic2V0VG9rZW4iLCJ0b2tlbiIsImlzTG9nZ2VkSW4iLCJsb2dvdXQiLCIkd2luZG93IiwiYXV0aFRva2VuRmFjdG9yeSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJyZW1vdmVJdGVtIiwiZ2V0SXRlbSIsImF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5IiwicmVxdWVzdCIsImhlYWRlcnMiLCJnYWxsZXJ5RmFjdG9yeSIsImdldENvbnRlbnQiLCJtZW51RmFjdG9yeSIsImRlbGV0ZU1lbnUiLCJjYXRlZ29yeV9pZCIsInVwZGF0ZU1lbnUiLCJjcmVhdGVNZW51IiwibWVudURhdGEiLCJyZWFkTWFpbk1lbnUiLCJyZWFkU3ViTWVudSIsIm1haW5NZW51VHlwZSIsIm9yZGVyRmFjdG9yeSIsInVwZGF0ZURlbGl2ZXJ5IiwiZGVsaURhdGEiLCJ1c2VyX2lkIiwiY3JlYXRlRGVsaXZlcnkiLCJkZWxldGVCYXNrZXQiLCJiYXNrZXRfaWQiLCJyZWFkQmFza2V0IiwiY3JlYXRlQmFza2V0IiwiYmFza2V0RGF0YSIsImRlbGV0ZU9yZGVyIiwicmVhZE9yZGVyIiwicmVhZE9yZGVyQW5kRGVsaSIsImNyZWF0ZU9yZGVyIiwib3JkZXJEYXRhIiwidXNlckZhY3RvcnkiLCJnZXRQZXJtaXNzaW9uIiwiY3JlYXRlIiwicmVnRGF0YSIsImFjdGl2ZUFjY291bnQiLCJjaGVja0NyZWRlbnRpYWxzIiwicmVzZW5kTGluayIsInVzZXJuYW1lIiwic2VuZFVzZXJuYW1lIiwidXNlckRhdGEiLCJzZW5kUGFzc3dvcmQiLCJyZXNldERhdGEiLCJyZXNldFBhc3N3b3JkIiwic2F2ZVBhc3N3b3JkIiwicmVuZXdTZXNzaW9uIiwiZGlyZWN0aXZlIiwicmVzdHJpY3QiLCJsaW5rIiwic2NvcGUiLCJlbGVtZW50IiwiYXR0cnMiLCJjdHJscyIsImFwcEN0cmwiLCJyZXN1bHQiLCJzdWNjZXNzIiwiYmFubmVyRGF0YSIsImNvbnNvbGUiLCJsb2ciLCIkc2NvcGUiLCJhc3NpZ25OZXdJbmRleGVzVG9TbGlkZXMiLCJpbmRleGVzIiwiaSIsImwiLCJzbGlkZXMiLCJsZW5ndGgiLCJpZCIsInBvcCIsImdlbmVyYXRlSW5kZXhlc0FycmF5IiwiY3VyckluZGV4Iiwic2h1ZmZsZSIsImFycmF5IiwidG1wIiwiY3VycmVudCIsInRvcCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIm15SW50ZXJ2YWwiLCJub1dyYXBTbGlkZXMiLCJhY3RpdmUiLCJhZGRTbGlkZSIsImltYWdlIiwicmFuZG9taXplIiwiZ2FsbGVyeSIsIkxpZ2h0Ym94IiwiZ2FsbGVyeUN0cmwiLCJnYWxsZXJ5RGF0YSIsImVycm9yTXNnIiwib3BlbkxpZ2h0Ym94TW9kYWwiLCJpbmRleCIsIm9wZW5Nb2RhbCIsIk1lbnUiLCJtZW51SXRlbUN0cmwiLCJtYWluTWVudWVzIiwiJHRpbWVvdXQiLCJ0aGlzIiwiZmlsZSIsInJlYWRJbWFnZSIsImZpbGVzIiwiJGVtaXQiLCJuYW1lIiwibWF0Y2giLCJmaWxlUmVhZGVyIiwiRmlsZVJlYWRlciIsInJlYWRBc0RhdGFVUkwiLCJvbmxvYWQiLCJlIiwiZXhwbGFpblRodW1ibmFpbCIsImRhdGFVcmwiLCJ0YXJnZXQiLCJ1cGxvYWRCYW5uZXIiLCJleHBsYWluUGhvdG8iLCJkaXNhYmxlZCIsImZkIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJ1cGxvYWQiLCJ0cmFuc2Zvcm1SZXF1ZXN0IiwiaWRlbnRpdHkiLCJDb250ZW50LVR5cGUiLCJ1bmRlZmluZWQiLCJhbGVydCIsInJlbG9hZCIsInVwbG9hZEltYWdlIiwiaXRlbVRpdGxlIiwidGl0bGUiLCJwYXRjaCIsImltYWdlUGF0aCIsImltYWdlX3BhdGgiLCJ1cGxvYWRHYWxsZXJ5IiwidGh1bWJVcmwiLCJjYXB0aW9uIiwiZmlsdGVyIiwiaW5wdXQiLCJwcm9wZXJ0eSIsIkFycmF5IiwidG90YWwiLCIkc3RhdGVQYXJhbXMiLCJ0eXBlX2NvZGUiLCJwYXJhbXMiLCJpdGVtc0RhdGEiLCJBZG1pbiIsIk9yZGVyIiwib3B0aW9uSXRlbSIsImF2YWlsYWJsZU9wdGlvbnMiLCJzZWxlY3RlZE9wdGlvbiIsImFtb3VudCIsIm9wdGlvbkxpc3QiLCJhZGRJdGVtIiwia2luZCIsInByaWNlIiwia2luZF9vZiIsInN1Y2Nlc3NNc2ciLCJzcGxpdCIsInRlbXAiLCJOdW1iZXIiLCJkZWNvZGVCYXNlNjRJbWFnZSIsImRhdGFTdHJpbmciLCJtYXRjaGVzIiwiRXJyb3IiLCJ0eXBlIiwiZGF0YTIiLCJyZWFkTWVudSIsInJlYWRNZW51U3RhdHVzIiwidHlwZV9kZXNjcmlwdGlvbiIsInVwZGF0ZUl0ZW0iLCJpdGVtX25hbWUiLCJ1cGRhdGVEYXRhMiIsIm1haW5QaG90b0NoYW5nZWQiLCJtYWluVGh1bWJuYWlsIiwicmVhZFBob3RvIiwibWFpblBob3RvIiwiaXRlbV9wYXRoIiwiZXhwbGFpblBob3RvQ2hhbmdlZCIsInJlYWRQaG90b0V4cGxhaW4iLCJleHBsYWluIiwibXlJbWFnZSIsIm15Q3JvcHBlZEltYWdlIiwiaGFuZGxlRmlsZVNlbGVjdCIsImV2dCIsImN1cnJlbnRUYXJnZXQiLCJyZWFkZXIiLCIkYXBwbHkiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJvbiIsInJlYWRDcm9wSW1hZ2UiLCJ0aHVtYm5haWwiLCJiYXNlNjRVcmwiLCJmaWxlUGF0aCIsImtpbmRMaXN0IiwidHlwZV90aW55IiwidHlwZV9wcmljZSIsImFkZExpbmUiLCJraW5kRGF0YSIsImtpbmRWYWx1ZSIsImtpbmRQcmljZSIsIm1haW5JbWFnZVBhdGgiLCJleHBsYWluSW1hZ2VQYXRoIiwidGh1bWJuYWlsUGF0aCIsImNyZWF0ZVBob3RvIiwidXBsb2FkRGF0YSIsInRvU3RyaW5nIiwidXBkYXRlIiwiZGVsZXRlRGF0YSIsInN1Yk1lbnVEYXRhcyIsInVwZGF0YURhdGEiLCJzcGxpdE9wdGlvbkRhdGFzIiwib3B0aW9uRGF0YXMiLCJ1cGRhdGVUeXBlIiwidXBkYXRlaXRlbVR5cGUiLCJraW5kQXJyYXkiLCJwcmljZUFycmF5IiwiY29weUl0ZW1UeXBlIiwidHlwZURhdGFzIiwia2luZERhdGFzIiwiY29weVR5cGUiLCJjYXRlZ29yeSIsIkF1dGgiLCIkbG9jYXRpb24iLCIkaW50ZXJ2YWwiLCJsb2FkbWUiLCJsb2FkaW5nIiwiY2hlY2tTZXNzaW9uIiwidXNlciIsInBlcm1pc3Npb24iLCJhdXRob3JpemVkIiwiaW50ZXJ2YWwiLCJjYW5jZWwiLCJzZWxmIiwicGFyc2VKd3QiLCJiYXNlNjQiLCJyZXBsYWNlIiwiSlNPTiIsInBhcnNlIiwiYXRvYiIsImV4cGlyZVRpbWUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiZXhwIiwic2hvd01vZGFsIiwiY2hvaWNlTWFkZSIsImhpZGVNb2RhbCIsIk1vZGFsQm9keSIsImVuZFNlc3Npb24iLCJvcHRpb24iLCJtb2RhbEhlYWRlciIsIm1vZGFsQm9keSIsImhpZGVCdXR0b24iLCIkIiwibW9kYWwiLCJiYWNrZHJvcCIsImRvTG9naW4iLCJ2YWxpZCIsImV4cGlyZWQiLCJyZXNlbmQiLCJyZXNldHVzZXJuYW1lIiwicmVzZXRwYXNzd29yZCIsIm1haW4iLCJnZXRJdGVtRmFpbCIsImNhc2hSZWNlaXB0IiwiZ2V0Q2FzaFJlY2VpcHQiLCJyZWFkQWRkcmVzcyIsImRhdW0iLCJwb3N0Y29kZSIsImxvYWQiLCJhZGRyZXNzRGV0YWlsIiwiUG9zdGNvZGUiLCJvbmNvbXBsZXRlIiwic2lndW5ndV9jb2RlIiwic2lndW5ndUNvZGUiLCJqaWJ1bl9hZGRyZXNzIiwiamlidW5BZGRyZXNzIiwicm9hZF9hZGRyZXNzIiwicm9hZEFkZHJlc3MiLCJvcGVuIiwiZGVsaXZlcnkiLCJpdGVtUHJpY2UiLCJhbGxJdGVtUHJpY2UiLCJjb25maXJtT3JkZXIiLCJkYWxpRGF0YSIsInJlY2VpcHREYXRhIiwibWFrZUJhc2tldCIsImoiLCJlbWFpbCIsImhpZGUiLCJjb25maXJtZWQiLCJyZWdTdGVwMSIsInJlZ1N0ZXAyIiwicmVnU3RlcDMiLCIkcGFyc2UiLCJwYXJzZWRGaWxlIiwiZmlsZU1vZGVsIiwicGFyc2VkZmlsZVNldHRlciIsImFzc2lnbiIsImJpbmQiLCJkb0NvbmZpcm0iLCJ2YWx1ZXMiLCJmb3JFYWNoIiwiZWxlIiwiY29uZmlybSIsIiRvYnNlcnZlIiwiJHdhdGNoIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBQUMsT0FBQSxPQUNBLFlBQ0EsZUFDQSxrQkFDQSxrQkFDQSxrQkFDQSxtQkFDQSx3QkFDQSxrQkFDQSxrQkFDQSxtQkFDQSxZQUNBLG1CQUNBLG9CQUNBLGtCQUNBLHNCQUNBQyxRQUFBLGdCQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLGFBQUFDLEtBQUEsc0JDakJBLElBQUFDLEtBQUFOLFFBQUFDLE9BQUEsTUFDQUssS0FBQUosUUFBQSxpQkFBQSxxQkFBQSxvQkFBQSxTQUFBSyxFQUFBQyxFQUFBQyxHQUNBRCxFQUFBRSxVQUFBLEtBQ0FELEVBQUFFLFdBQUEsSUFDQUYsRUFBQUcsV0FBQSxHQUVBTCxFQUFBTSxNQUFBLE9BQ0FDLElBQUEsSUFDQUMsT0FDQUMsZ0JBQ0FDLFlBQUEsc0JBSUFKLE1BQUEscUJBRUFDLElBQUEsaUJBQ0FDLE9BQ0FDLGdCQUNBQyxZQUFBLHFDQUNBQyxXQUFBLFVBQ0FDLGFBQUEsZUFLQU4sTUFBQSxxQkFFQUMsSUFBQSxpQkFDQUMsT0FDQUMsZ0JBQ0FDLFlBQUEscUNBQ0FDLFdBQUEsVUFDQUMsYUFBQSxlQUtB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LE9BQ0FDLFNBQUEsSUFDQXJILFlBQUEsY0FHQUQsWUFBQSx3REFDQXVILEtBQUEsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsU0NSQTVJLFFBQUFDLE9BQUEsT0FDQXFJLFVBQUEsV0FBQSxXQUNBLE9BQ0FDLFNBQUEsSUFDQXJILFlBQUEsY0FHQUQsWUFBQSx5QkFDQXVILEtBQUEsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsU0NSQTVJLFFBQUFDLE9BQUEsT0FDQXFJLFVBQUEsVUFBQSxXQUNBLE9BQ0FDLFNBQUEsSUFDQXJILFlBQUEsY0FHQUQsWUFBQSxtQ0FDQXVILEtBQUEsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMsU0NSQTVJLFFBQUFDLE9BQUEsT0FDQXFJLFVBQUEsVUFBQSxXQUNBLE9BQ0FDLFNBQUEsSUFDQXJILFlBQUEsY0FHQUQsWUFBQSxtQ0FDQXVILEtBQUEsU0FBQUMsRUFBQUMsRUFBQUMsRUFBQUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsW1xyXG4gICAgJ3VpLnJvdXRlcicsXHJcbiAgICAndWkuYm9vdHN0cmFwJyxcclxuICAgICdtZW51Q29udHJvbGxlcnMnLFxyXG4gICAgJ3VzZXJDb250cm9sbGVycycsXHJcbiAgICAnbWFpbkNvbnRyb2xsZXJzJyxcclxuICAgICdlbWFpbENvbnRyb2xsZXJzJyxcclxuICAgICdtYW5hZ2VtZW50Q29udHJvbGxlcnMnLFxyXG4gICAgJ2l0ZW1Db250cm9sbGVycycsXHJcbiAgICAndHlwZUNvbnRyb2xsZXJzJyxcclxuICAgICdvcmRlckNvbnRyb2xsZXJzJyxcclxuICAgICd1aUNyb3BwZXInLFxyXG4gICAgJ2Jhbm5lckNvbnRyb2xsZXInLFxyXG4gICAgJ2dhbGxlcnlDb250cm9sbGVyJyxcclxuICAgICdnYWxsZXJ5U2VydmljZXMnLFxyXG4gICAgJ2Jvb3RzdHJhcExpZ2h0Ym94J1xyXG5dKS5jb25maWcoZnVuY3Rpb24oJGh0dHBQcm92aWRlcil7XHJcbiAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnQXV0aEludGVyY2VwdG9ycycpO1xyXG59KTtcclxuIiwidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdhcHAnKTtcclxuYXBwLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcclxuICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcclxuICAgICRsb2NhdGlvblByb3ZpZGVyLmhhc2hQcmVmaXgoJycpO1xyXG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xyXG5cclxuICAgICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdhcHAnLCB7XHJcbiAgICAgICAgdXJsOiAnLycsXHJcbiAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vaG9tZS5odG1sJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuICAgICAgICAuc3RhdGUoJ2FwcC5yZWdpc3RlclN0ZXAxJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAncmVnaXN0ZXIvc3RlcDEnLFxyXG4gICAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAnYm9keUNvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZWdpc3Rlci9yZWdpc3RlclN0ZXAxLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVnQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3JlZ2lzdGVyJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAucmVnaXN0ZXJTdGVwMicsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybDogJ3JlZ2lzdGVyL3N0ZXAyJyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcmVnaXN0ZXIvcmVnaXN0ZXJTdGVwMi5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWdpc3RlcidcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLnJlZ2lzdGVyU3RlcDMnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdyZWdpc3Rlci9zdGVwMycsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdib2R5Q29udGVudEBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3JlZ2lzdGVyL3JlZ2lzdGVyU3RlcDMuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZWdDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVnaXN0ZXInXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FwcC5sb2dpbicsIHtcclxuICAgICAgICAgICAgdXJsOiAnbG9naW4nLFxyXG4gICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9sb2dpbi9sb2dpbi5odG1sJ1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuYm9hcmQnLCB7XHJcbiAgICAgICAgICAgIHVybDogJ2JvYXJkJyxcclxuICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9ib2FyZC9mb3JtLmh0bWwnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FwcC5nYWxsZXJ5Jywge1xyXG4gICAgICAgICAgICB1cmw6ICdnYWxsZXJ5JyxcclxuICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9nYWxsZXJ5L2hvbWUuaHRtbCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLnVzZXInLCB7XHJcbiAgICAgICAgICAgIHVybDogJ3VzZXInLFxyXG4gICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9wYXJ0aWFsL3VzZXIuaHRtbCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuY29tbWVyY2VEZXRhaWwnLCB7XHJcbiAgICAgICAgICAgIHVybDogJ2NvbW1lcmNlLWRldGFpbCcsXHJcbiAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnYm9keUNvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3BhcnRpYWwvY29tbWVyY2VEZXRhaWwuaHRtbCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuYmFza2V0Jywge1xyXG4gICAgICAgICAgICB1cmw6ICdiYXNrZXQnLFxyXG4gICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9wYXJ0aWFsL2Jhc2tldC5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnYmFza2V0Q3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnYmFza2V0J1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuY2F0ZWdvcnknLCB7XHJcbiAgICAgICAgICAgIHVybDogJ2NhdGVnb3J5PTpjYXRlZ29yeV9pZCcsXHJcbiAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnc3ViTWVudUBhcHAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWVudWVzL3N1Yk1lbnUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3N1Yk1lbnVDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdzdWJNZW51J1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9pdGVtcy9mb3JtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnZXRUeXBlSXRlbXNDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbXMnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLmNhdGVnb3J5Lml0ZW1fdHlwZScsIHtcclxuICAgICAgICAgICAgdXJsOiAnL2l0ZW1fdHlwZT06dHlwZV9jb2RlJyxcclxuICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9pdGVtcy9mb3JtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnZXRUeXBlSXRlbXNDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbXMnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLmNhdGVnb3J5Lml0ZW1fdHlwZS5zaG93Jywge1xyXG4gICAgICAgICAgICB1cmw6ICcvaXRlbTppdGVtX2lkJyxcclxuICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY2F0ZWdvcnllcy9pdGVtcy9pdGVtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnZXRUeXBlSXRlbUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2dldFR5cGVJdGVtJ1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuY2F0ZWdvcnkuc2hvdycsIHtcclxuICAgICAgICAgICAgdXJsOiAnL2l0ZW06aXRlbV9pZCcsXHJcbiAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnYm9keUNvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NhdGVnb3J5ZXMvaXRlbXMvaXRlbS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZ2V0VHlwZUl0ZW1DdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnZXRUeXBlSXRlbSdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLm1ha2VPcmRlcicsIHtcclxuICAgICAgICAgICAgdXJsOiAnbWFrZU9yZGVyJyxcclxuICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvb3JkZXIvbWFrZU9yZGVyLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZWFkT3JkZXJDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWFkT3JkZXInXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FwcC5jb25maXJtT3JkZXInLCB7XHJcbiAgICAgICAgICAgIHVybDogJ2NvbmZpcm1PcmRlcicsXHJcbiAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAnYm9keUNvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL29yZGVyL2NvbmZpcm1PcmRlci5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncmVhZE9yZGVyQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVhZE9yZGVyQ3RybCdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgncmVzZXR1c2VybmFtZScsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybDogJy9yZXNldHVzZXJuYW1lJyxcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3Jlc2V0L3VzZXJuYW1lLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3VzZXJuYW1lQ3RybCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1c2VybmFtZSdcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdyZXNldHBhc3N3b3JkJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnL3Jlc2V0cGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcmVzZXQvcGFzc3dvcmQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncGFzc3dvcmRDdHJsJyxcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3Bhc3N3b3JkJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ3Jlc2V0JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnL3Jlc2V0Lzp0b2tlbicsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZXNldC9uZXdwYXNzd29yZC5odG1sJyxcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZXNldEN0cmwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVzZXQnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FjdGl2YXRlJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FjdGl2YXRlLzp0b2tlbicsXHJcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9hY3RpdmF0aW9uL2FjdGl2YXRlLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2VtYWlsQ3RybCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdlbWFpbCdcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdyZXNlbmQnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICcvcmVzZW5kJyxcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL2FjdGl2YXRpb24vcmVzZW5kLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Jlc2VuZEN0cmwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVzZW5kJ1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuaW50cm8nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdpbnRybycsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvY29tcGFueUluZm9ybWF0aW9uL2NvbXBhbnlJbnRyb2R1Y2UudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAudGVybXMnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICd0ZXJtcycsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdib2R5Q29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvY29tcGFueUluZm9ybWF0aW9uL3Rlcm1zLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLnByaXZhY3knLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdwcml2YWN5JyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2JvZHlDb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvZGlyZWN0aXZlcy9jb21wYW55SW5mb3JtYXRpb24vcHJpdmFjeS50cGwuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAvLyDqtIDrpqzsnpAg7Y6Y7J207KeAXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuYWRtaW5MYWJvcmF0b3J5JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYWRtaW5MYWJvcmF0b3J5JyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2FkbWluQ29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvYWRtaW4vYWRtaW5MYWJvcmF0b3J5LnRwbC5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLmFkbWluT3JkZXJTdGF0dXMnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdhZG1pbk9yZGVyU3RhdHVzJyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2FkbWluQ29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9vcmRlclN0YXR1cy5odG1sJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuYWRtaW5NZW1iZXJzJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYWRtaW5NZW1iZXJzJyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2FkbWluQ29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9tZW1iZXJzLmh0bWwnXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FwcC5hZG1pbkNhdGVnb3J5JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYWRtaW5DYXRlZ29yeScsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdhZG1pbkNvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvY2F0ZWdvcnkuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdtYWluTWVudUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdtYWluTWVudSdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLmFkbWluVHlwZUFuZEl0ZW1zJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYWRtaW5UeXBlQW5kSXRlbXMnLFxyXG4gICAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAnYWRtaW5Db250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3R5cGVBbmRJdGVtcy5odG1sJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAuYWRtaW5HYWxsZXJ5JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnYWRtaW5HYWxsZXJ5JyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2FkbWluQ29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC9nYWxsZXJ5Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAndXBsb2FkZ2FsbGVyeUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1cGxvYWRHYWxsZXJ5J1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudCcsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybDogJ21hbmFnZW1lbnQnLFxyXG4gICAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAnYWRtaW5Db250ZW50QGFwcCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9mb3JtLmh0bWwnXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAnbWVudUBhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9tZW51Lmh0bWwnXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC50eXBlQW5kSXRlbXMudXBkYXRlJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdXJsOiAnL3VwZGF0ZVR5cGU6aXRlbV90eXBlJyxcclxuICAgICAgICAgICAgICAgIHZpZXdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5tYW5hZ2VtZW50Jzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYW5hZ2VtZW50L3BhcnRpYWwvdXBkYXRlL3R5cGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd1cGRhdGVUeXBlQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VwZGF0ZVR5cGUnXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAuc3RhdGUoJ2FwcC5tYW5hZ2VtZW50LnR5cGVBbmRJdGVtcy51cGRhdGVJdGVtVHlwZScsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHVybDogJy91cGRhdGVJdGVtOml0ZW1faWQnLFxyXG4gICAgICAgICAgICAgICAgdmlld3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLm1hbmFnZW1lbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21hbmFnZW1lbnQvcGFydGlhbC91cGRhdGUvaXRlbVR5cGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICd1cGRhdGVJdGVtVHlwZUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1cGRhdGVJdGVtVHlwZSdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5zdGF0ZSgnYXBwLm1hbmFnZW1lbnQudHlwZUFuZEl0ZW1zLnVwZGF0ZUl0ZW0nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICcvdXBkYXRlL2l0ZW06aXRlbV9pZCcsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3VwZGF0ZS9pdGVtLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAndXBkYXRlSXRlbUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1cGRhdGVJdGVtJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLnN0YXRlKCdhcHAubWFuYWdlbWVudC50eXBlQW5kSXRlbXMucmVhZEl0ZW0nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICc6aXRlbV9pZCcsXHJcbiAgICAgICAgICAgICAgICB2aWV3czoge1xyXG4gICAgICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAubWFuYWdlbWVudCc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFuYWdlbWVudC9wYXJ0aWFsL3JlYWQvaXRlbS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlYWRJdGVtQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3JlYWRJdGVtJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnJ1bihmdW5jdGlvbiAoJHJvb3RTY29wZSwgVXNlciwgJHN0YXRlKSB7XHJcbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbiAoZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMsIG9wdGlvbnMpIHtcclxuICAgIH0pO1xyXG4gICAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZUVycm9yJywgZnVuY3Rpb24gKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zLCBlcnJvcikge1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhZG1pblNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ0FkbWluJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIGFkbWluRmFjdG9yeSA9IHt9O1xyXG5cclxuICBhZG1pbkZhY3RvcnkuZGVsZXRlSXRlbSA9IGZ1bmN0aW9uKGl0ZW1faWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9pdGVtLycraXRlbV9pZCk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRBcmlzdENyb3AgPSBmdW5jdGlvbihibG9iKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZUNyb3BJbWFnZScsIGJsb2IpO1xyXG4gIH07XHJcbiAgLy8gQXJ0aXN0LmNyZWF0ZVBob3RvKHBob3RvRGF0YSlcclxuICBhZG1pbkZhY3RvcnkuY3JlYXRlQXJpc3RQaG90byA9IGZ1bmN0aW9uKHBob3RvRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hcnRpc3RQcm9maWxlcycsIHBob3RvRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LmNyZWF0ZUl0ZW0gPSBmdW5jdGlvbihpdGVtRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9pdGVtJywgaXRlbURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkSXRlbXMgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtJyk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRJdGVtID0gZnVuY3Rpb24oaXRlbV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2l0ZW0vJytpdGVtX2lkKTtcclxuICB9O1xyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PSB0eXBlU2VydmljZXMg7IOd7ISxID09PT09PT09PT09PT09PT09PT09PT09PT09PSAvL1xyXG5cclxuXHJcbiAgYWRtaW5GYWN0b3J5LnVwZGF0ZUl0ZW1UeXBlID0gZnVuY3Rpb24odXBkYXRlRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL2l0ZW1UeXBlJywgdXBkYXRlRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRVcGRhdGVJdGVtVHlwZSA9IGZ1bmN0aW9uKGl0ZW1faWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtVHlwZS8nK2l0ZW1faWQpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5yZWFkSXRlbVR5cGUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9pdGVtVHlwZScpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5kZWxldGVUeXBlID0gZnVuY3Rpb24oaXRlbV90eXBlX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvdHlwZS8nK2l0ZW1fdHlwZV9pZCk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnJlYWRVcGRhdGVUeXBlID0gZnVuY3Rpb24oaXRlbV90eXBlKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdHlwZS8nK2l0ZW1fdHlwZSk7XHJcbiAgfTtcclxuXHJcbiAgYWRtaW5GYWN0b3J5LnVwZGF0ZVVwZGF0ZVR5cGUgPSBmdW5jdGlvbih1cGRhdGVEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdHlwZScsIHVwZGF0ZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIGFkbWluRmFjdG9yeS5jcmVhdGVUeXBlID0gZnVuY3Rpb24odHlwZURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdHlwZScsIHR5cGVEYXRhKTtcclxuICB9O1xyXG5cclxuICBhZG1pbkZhY3RvcnkucmVhZFR5cGUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS90eXBlJyk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIGFkbWluRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhdXRoU2VydmljZXMnLFtdKVxyXG5cclxuLmZhY3RvcnkoJ0F1dGgnLCBmdW5jdGlvbigkaHR0cCwgQXV0aFRva2VuKXtcclxuICAgIHZhciBhdXRoRmFjdG9yeSA9IHt9O1xyXG4vLyBBdXRoLmdldFVzZXIoKTtcclxuICAgIGF1dGhGYWN0b3J5LmdldFVzZXIgPSBmdW5jdGlvbigpe1xyXG4gICAgICBpZihBdXRoVG9rZW4uZ2V0VG9rZW4oKSl7XHJcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWUnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkcS5yZWplY3Qoe21lc3NhZ2U6J1VzZXIgaGFzIG5vIHRva2VuJ30pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuLy8gQXV0aC5sb2dpbihsb2dpbkRhdGEpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9naW4gPSBmdW5jdGlvbihsb2dpbkRhdGEpe1xyXG4gICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hdXRoZW50aWNhdGUnLCBsb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgQXV0aFRva2VuLnNldFRva2VuKGRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbi8vIEF1dGguaXNMb2dnZWRJbigpO1xyXG4gICAgYXV0aEZhY3RvcnkuaXNMb2dnZWRJbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGlmKEF1dGhUb2tlbi5nZXRUb2tlbigpKXtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4vLyBBdXRoLmxvZ291dCgpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9nb3V0ID0gZnVuY3Rpb24oKXtcclxuICAgICAgQXV0aFRva2VuLnNldFRva2VuKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGF1dGhGYWN0b3J5O1xyXG59KVxyXG5cclxuLmZhY3RvcnkoJ0F1dGhUb2tlbicsIGZ1bmN0aW9uKCR3aW5kb3cpe1xyXG4gIHZhciBhdXRoVG9rZW5GYWN0b3J5ID0ge307XHJcblxyXG4gIC8vIEF1dGhUb2tlbi5zZXRUb2tlbih0b2tlbik7XHJcbiAgYXV0aFRva2VuRmFjdG9yeS5zZXRUb2tlbiA9IGZ1bmN0aW9uKHRva2VuKXtcclxuICAgIGlmKHRva2VuKXtcclxuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCB0b2tlbik7XHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJywgdG9rZW4pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4vLyBBdXRoVG9rZW4uZ2V0VG9rZW4oKTtcclxuICBhdXRoVG9rZW5GYWN0b3J5LmdldFRva2VuID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gIH07XHJcbiAgcmV0dXJuIGF1dGhUb2tlbkZhY3Rvcnk7XHJcbn0pXHJcblxyXG4uZmFjdG9yeSgnQXV0aEludGVyY2VwdG9ycycsIGZ1bmN0aW9uKEF1dGhUb2tlbil7XHJcbiAgdmFyIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5ID0ge307XHJcblxyXG4gIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5LnJlcXVlc3QgPSBmdW5jdGlvbihjb25maWcpe1xyXG4gICAgdmFyIHRva2VuID0gQXV0aFRva2VuLmdldFRva2VuKCk7XHJcblxyXG4gICAgaWYodG9rZW4pIGNvbmZpZy5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddID0gdG9rZW47XHJcblxyXG4gICAgcmV0dXJuIGNvbmZpZztcclxuICB9O1xyXG4gIHJldHVybiBhdXRoSW50ZXJjZXB0b3JzRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdnYWxsZXJ5U2VydmljZXMnLFtdKVxyXG4gICAgLmZhY3RvcnkoJ2dhbGxlcnknLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgICAgICAgZ2FsbGVyeUZhY3RvcnkgPSB7fTtcclxuXHJcbiAgICAgICAgLy9nYWxsZXJ5LmdldENvbnRlbnQoKTtcclxuICAgICAgICBnYWxsZXJ5RmFjdG9yeS5nZXRDb250ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2dhbGxlcnknKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGdhbGxlcnlGYWN0b3J5O1xyXG4gICAgfSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdtZW51U2VydmljZXMnLFtdKVxyXG4uZmFjdG9yeSgnTWVudScsIGZ1bmN0aW9uKCRodHRwKXtcclxuICBtZW51RmFjdG9yeSA9IHt9O1xyXG5cclxuICBtZW51RmFjdG9yeS5kZWxldGVNZW51ID0gZnVuY3Rpb24oY2F0ZWdvcnlfaWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmRlbGV0ZSgnL2FwaS9tZW51LycrY2F0ZWdvcnlfaWQpO1xyXG4gIH07XHJcblxyXG4gIG1lbnVGYWN0b3J5LnVwZGF0ZU1lbnUgPSBmdW5jdGlvbih1cGRhdGVEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvbWVudS8nLCB1cGRhdGVEYXRhKTtcclxuICB9O1xyXG5cclxuICBtZW51RmFjdG9yeS5jcmVhdGVNZW51ID0gZnVuY3Rpb24obWVudURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWVudScsIG1lbnVEYXRhKTtcclxuICB9O1xyXG5cclxuICBtZW51RmFjdG9yeS5yZWFkTWFpbk1lbnUgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tZW51Jyk7XHJcbiAgfTtcclxuICBtZW51RmFjdG9yeS5yZWFkU3ViTWVudSA9ICBmdW5jdGlvbihtYWluTWVudVR5cGUpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tZW51LycrbWFpbk1lbnVUeXBlKTtcclxuICB9O1xyXG4gIHJldHVybiBtZW51RmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdvcmRlclNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ09yZGVyJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIG9yZGVyRmFjdG9yeSA9IHt9O1xyXG4gIFxyXG4gIG9yZGVyRmFjdG9yeS51cGRhdGVEZWxpdmVyeSA9IGZ1bmN0aW9uKGRlbGlEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvZGVsaXZlcnkvJytkZWxpRGF0YS51c2VyX2lkLCBkZWxpRGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmNyZWF0ZURlbGl2ZXJ5ID0gZnVuY3Rpb24oZGVsaURhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvZGVsaXZlcnknLGRlbGlEYXRhKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkuZGVsZXRlQmFza2V0ID0gZnVuY3Rpb24oYmFza2V0X2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5kZWxldGUoJy9hcGkvYmFza2V0LycrYmFza2V0X2lkKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkucmVhZEJhc2tldD0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYmFza2V0Jyk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmNyZWF0ZUJhc2tldCA9IGZ1bmN0aW9uKGJhc2tldERhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvYmFza2V0JywgYmFza2V0RGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LmRlbGV0ZU9yZGVyID0gZnVuY3Rpb24oaXRlbV9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZGVsZXRlKCcvYXBpL21ha2VPcmRlci8nK2l0ZW1faWQpO1xyXG4gIH07XHJcblxyXG4gIG9yZGVyRmFjdG9yeS5yZWFkT3JkZXIgPSBmdW5jdGlvbih1c2VyX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvbWFrZU9yZGVyLycrdXNlcl9pZCk7XHJcbiAgfTtcclxuXHJcbiAgb3JkZXJGYWN0b3J5LnJlYWRPcmRlckFuZERlbGkgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tYWtlT3JkZXInKTtcclxuICB9O1xyXG5cclxuICBvcmRlckZhY3RvcnkuY3JlYXRlT3JkZXIgPSBmdW5jdGlvbihvcmRlckRhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWFrZU9yZGVyJyxvcmRlckRhdGEpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBvcmRlckZhY3Rvcnk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgndXNlclNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ1VzZXInLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgdXNlckZhY3RvcnkgPSB7fTtcclxuXHJcbiAgdXNlckZhY3RvcnkuZ2V0UGVybWlzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Blcm1pc3Npb24nKTtcclxuICB9O1xyXG4vLyBVc2VyLmNyZWF0ZShyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LmNyZWF0ZSA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5hY3RpdmVBY2NvdW50KHRva2VuKTtcclxuICB1c2VyRmFjdG9yeS5hY3RpdmVBY2NvdW50ID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9hY3RpdmF0ZS8nK3Rva2VuKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5jaGVja0NyZWRlbnRpYWxzKGxvZ2luRGF0YSk7XHJcbiAgdXNlckZhY3RvcnkuY2hlY2tDcmVkZW50aWFscyA9IGZ1bmN0aW9uKGxvZ2luRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9yZXNlbmQnLCBsb2dpbkRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2VuZExpbmsodXNlcm5hbWUpXHJcbiAgdXNlckZhY3RvcnkucmVzZW5kTGluayA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvcmVzZW5kJywgdXNlcm5hbWUpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRVc2VybmFtZSh1c2VyRGF0YSk7XHJcbiAgdXNlckZhY3Rvcnkuc2VuZFVzZXJuYW1lID0gZnVuY3Rpb24odXNlckRhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9yZXNldHVzZXJuYW1lLycrdXNlckRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRQYXNzd29yZChyZXNldERhdGEpO1xyXG4gIHVzZXJGYWN0b3J5LnNlbmRQYXNzd29yZCA9IGZ1bmN0aW9uKHJlc2V0RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL3Jlc2V0cGFzc3dvcmQnLCByZXNldERhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2V0UGFzc3dvcmQodG9rZW4pO1xyXG4gIHVzZXJGYWN0b3J5LnJlc2V0UGFzc3dvcmQgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Jlc2V0cGFzc3dvcmQvJyt0b2tlbik7XHJcbiAgfTtcclxuXHJcblxyXG4vLyBVc2VyLnNhdmVQYXNzd29yZChyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LnNhdmVQYXNzd29yZCA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9zYXZlcGFzc3dvcmQnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gIFVzZXIucmVuZXdTZXNzaW9uKHVzZXJuYW1lKVxyXG4gIHVzZXJGYWN0b3J5LnJlbmV3U2Vzc2lvbiA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcmVuZXdUb2tlbi8nKyB1c2VybmFtZSk7XHJcbiAgfTtcclxuXHJcblxyXG4gIHJldHVybiB1c2VyRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdhZG1pblVzZXJzJywgW2Z1bmN0aW9uICgpIHtcclxuICAgcmV0dXJuIHtcclxuICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgIC8vICByZXF1aXJlOiBbJ2FkbWluVXNlcnMnXSxcclxuICAgICAgIGNvbnRyb2xsZXI6IFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgdmFyIE5hbWVDdHJsID0gdGhpcztcclxuICAgICAgIH1dLFxyXG4gICAgICAgY29udHJvbGxlckFzOiAnTmFtZUN0cmwnLFxyXG4gICAgICAgdGVtcGxhdGVVcmw6ICcvZGlyZWN0aXZlcy9hZG1pblVzZXJzLnRwbC5odG1sJyxcclxuICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmxzKSB7XHJcbiAgICAgICAgICAgLy9cclxuICAgICAgIH1cclxuICAgfTtcclxufV0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2Jhbm5lcicsIFsnJGh0dHAnLCBmdW5jdGlvbiAoJGh0dHApIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAnYmFubmVyQ3RybCcsXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvYmFubmVyLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBDdHJsID0gY3RybHM7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS9iYW5uZXInKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcEN0cmwuYmFubmVyRGF0YSA9IHJlc3VsdC5kYXRhLmJhbm5lckRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLrtojrn6zsmKTsp4Ag66q77ZWY7JiA7Iq164uI64ukLlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XSlcclxuXHJcbi5jb250cm9sbGVyKCdDYXJvdXNlbEN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcbiAgICAkc2NvcGUubXlJbnRlcnZhbCA9IDI1MDA7XHJcbiAgICAkc2NvcGUubm9XcmFwU2xpZGVzID0gZmFsc2U7XHJcbiAgICAkc2NvcGUuYWN0aXZlID0gMDtcclxuICAgIHZhciBzbGlkZXMgPSAkc2NvcGUuc2xpZGVzID0gW107XHJcbiAgICB2YXIgY3VyckluZGV4ID0gMDtcclxuXHJcbiAgICAkc2NvcGUuYWRkU2xpZGUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgbmV3V2lkdGggPSA2MDAgKyBzbGlkZXMubGVuZ3RoICsgMTtcclxuICAgICAgICBzbGlkZXMucHVzaCh7XHJcbiAgICAgICAgICAgIGltYWdlOiBbJy9pbWFnZXMvaXRlbXMvYmFubmVyLzEuanBnJywnL2ltYWdlcy9pdGVtcy9iYW5uZXIvMi5qcGcnLCAnL2ltYWdlcy9pdGVtcy9iYW5uZXIvMy5qcGcnXVtzbGlkZXMubGVuZ3RoICUgM10sXHJcbiAgICAgICAgICAgIGlkOiBjdXJySW5kZXgrK1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAkc2NvcGUucmFuZG9taXplID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIGluZGV4ZXMgPSBnZW5lcmF0ZUluZGV4ZXNBcnJheSgpO1xyXG4gICAgICAgIGFzc2lnbk5ld0luZGV4ZXNUb1NsaWRlcyhpbmRleGVzKTtcclxuICAgIH07XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAzOyBpKyspIHtcclxuICAgICAgICAkc2NvcGUuYWRkU2xpZGUoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSYW5kb21pemUgbG9naWMgYmVsb3dcclxuXHJcbiAgICBmdW5jdGlvbiBhc3NpZ25OZXdJbmRleGVzVG9TbGlkZXMoaW5kZXhlcykge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gc2xpZGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xyXG4gICAgICAgICAgICBzbGlkZXNbaV0uaWQgPSBpbmRleGVzLnBvcCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZW5lcmF0ZUluZGV4ZXNBcnJheSgpIHtcclxuICAgICAgICB2YXIgaW5kZXhlcyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3VyckluZGV4OyArK2kpIHtcclxuICAgICAgICAgICAgaW5kZXhlc1tpXSA9IGk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzaHVmZmxlKGluZGV4ZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvOTYyODAyIzk2Mjg5MFxyXG4gICAgZnVuY3Rpb24gc2h1ZmZsZShhcnJheSkge1xyXG4gICAgICAgIHZhciB0bXAsIGN1cnJlbnQsIHRvcCA9IGFycmF5Lmxlbmd0aDtcclxuXHJcbiAgICAgICAgaWYgKHRvcCkge1xyXG4gICAgICAgICAgICB3aGlsZSAoLS10b3ApIHtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAodG9wICsgMSkpO1xyXG4gICAgICAgICAgICAgICAgdG1wID0gYXJyYXlbY3VycmVudF07XHJcbiAgICAgICAgICAgICAgICBhcnJheVtjdXJyZW50XSA9IGFycmF5W3RvcF07XHJcbiAgICAgICAgICAgICAgICBhcnJheVt0b3BdID0gdG1wO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gYXJyYXk7XHJcbiAgICB9XHJcbn0pOyIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnZ2FsbGVyeUNvbnRlbnQnLCBbJ2dhbGxlcnknLCAnTGlnaHRib3gnLCBmdW5jdGlvbiAoZ2FsbGVyeSwgTGlnaHRib3gpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIE5hbWVDdHJsID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2dhbGxlcnlDdHJsJyxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvZGlyZWN0aXZlcy9nYWxsZXJ5LnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgICAgICB2YXIgZ2FsbGVyeUN0cmwgPSBjdHJscztcclxuXHJcbiAgICAgICAgICAgICAgICBnYWxsZXJ5LmdldENvbnRlbnQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCl7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdhbGxlcnlDdHJsLmdhbGxlcnlEYXRhID0gcmVzdWx0LmRhdGEuZ2FsbGVyeURhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2FsbGVyeUN0cmwuZXJyb3JNc2cgPSByZXN1bHQuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGdhbGxlcnlDdHJsLm9wZW5MaWdodGJveE1vZGFsID0gZnVuY3Rpb24gKGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTGlnaHRib3gub3Blbk1vZGFsKGdhbGxlcnlDdHJsLmdhbGxlcnlEYXRhLCBpbmRleCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1dKVxyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ21lbnVJdGVtJywgWydNZW51JywgZnVuY3Rpb24gKE1lbnUpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICdtZW51SXRlbUN0cmwnLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9kaXJlY3RpdmVzL21lbnVJdGVtLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtZW51SXRlbUN0cmwgPSBjdHJscztcclxuICAgICAgICAgICAgICAgIE1lbnUucmVhZE1haW5NZW51KCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lbnVJdGVtQ3RybC5tYWluTWVudWVzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZW51SXRlbUN0cmwuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfV0pIiwiYW5ndWxhci5tb2R1bGUoJ2Jhbm5lckNvbnRyb2xsZXInLCBbXSlcclxuLmNvbnRyb2xsZXIoJ3VwbG9hZEJhbm5lckN0cmwnLCBmdW5jdGlvbigkc2NvcGUsJHRpbWVvdXQsJGh0dHAsICR3aW5kb3csICRzdGF0ZSl7XHJcbnZhciBhcHAgPSB0aGlzO1xyXG50aGlzLmZpbGUgPSB7fTtcclxuXHJcbi8vIOyeke2SiCDshKTrqoUg7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbnRoaXMucmVhZEltYWdlID0gZnVuY3Rpb24oZmlsZXMpIHtcclxuJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzWzBdLm5hbWUubWF0Y2goL1xcLihwbmd8anBlZ3xqcGcpJC8pKSB7XHJcbiAgICAgICAgICB2YXIgZmlsZSA9IGZpbGVzWzBdO1xyXG4gICAgICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgIGFwcC5leHBsYWluVGh1bWJuYWlsID0ge307XHJcbiAgICAgICAgICAgICAgICAgIGFwcC5leHBsYWluVGh1bWJuYWlsLmRhdGFVcmwgPSBlLnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgIGFwcC5leHBsYWluVGh1bWJuYWlsID0ge307XHJcbiAgICAgIH1cclxuICB9O1xyXG5cclxuLy8g7J6R7ZKIIOyEpOuqhSAg7J2066+47KeAIOyXheuhnOuTnO2VtOyEnCDqsr3roZwg7KCA7J6lXHJcbnRoaXMudXBsb2FkQmFubmVyID0gZnVuY3Rpb24oKXtcclxuLy8g7J6R7ZKIIOyEpOuqhSAg7JeF66Gc65OcIOyXrOu2gFxyXG4gICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gIGFwcC5leHBsYWluUGhvdG8gPSBmYWxzZTtcclxuICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICRodHRwLnBvc3QoJy9hcGkvYmFubmVyLycsIGZkLHtcclxuICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHksXHJcbiAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICB9KS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICBhcHAuZXhwbGFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdnZXRCYW5uZXJDdHJsJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICAkaHR0cC5nZXQoJy9hcGkvYmFubmVyJykudGhlbihmdW5jdGlvbihyZXN1bHQpe1xyXG4gICAgaWYocmVzdWx0LmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLmJhbm5lckRhdGEgPSByZXN1bHQuZGF0YS5iYW5uZXJEYXRhO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coXCLrtojrn6zsmKTsp4Ag66q77ZWY7JiA7Iq164uI64ukLlwiKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdnYWxsZXJ5Q29udHJvbGxlcicsIFtdKVxyXG4gICAgLmNvbnRyb2xsZXIoJ3VwbG9hZGdhbGxlcnlDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJHRpbWVvdXQsICRodHRwLCAkd2luZG93LCAkc3RhdGUpIHtcclxuICAgICAgICB2YXIgYXBwID0gdGhpcztcclxuICAgICAgICB0aGlzLmZpbGUgPSB7fTtcclxuXHJcbi8vIOyeke2SiCDshKTrqoUg7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICAgICAgdGhpcy5yZWFkSW1hZ2UgPSBmdW5jdGlvbiAoZmlsZXMpIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzWzBdLm5hbWUubWF0Y2goL1xcLihwbmd8anBlZ3xqcGcpJC8pKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZSA9IGZpbGVzWzBdO1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4vLyDsnpHtkogg7ISk66qFICDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgICAgICB0aGlzLnVwbG9hZEltYWdlID0gZnVuY3Rpb24gKGl0ZW1UaXRsZSkge1xyXG4vLyDsnpHtkogg7ISk66qFICDsl4XroZzrk5wg7Jes67aAXHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAuZXhwbGFpblBob3RvID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgICAgICBmZC50aXRsZSA9IGl0ZW1UaXRsZTtcclxuICAgICAgICAgICAgZmQuYXBwZW5kKCdteWZpbGUnLCBhcHAuZmlsZS51cGxvYWQpO1xyXG4gICAgICAgICAgICAkaHR0cC5wYXRjaCgnL2FwaS9nYWxsZXJ5LycsIGZkLCB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5pbWFnZVBhdGggPSBkYXRhLmRhdGEuaW1hZ2VfcGF0aDtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5leHBsYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMudXBsb2FkR2FsbGVyeSA9IGZ1bmN0aW9uICh0aXRsZSkge1xyXG4gICAgICAgICAgICBnYWxsZXJ5RGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIHRodW1iVXJsOiBhcHAuaW1hZ2VQYXRoLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBhcHAuaW1hZ2VQYXRoLFxyXG4gICAgICAgICAgICAgICAgY2FwdGlvbjogdGl0bGVcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvZ2FsbGVyeScsIGdhbGxlcnlEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICB9KVxyXG5cclxuICAgIC5jb250cm9sbGVyKCdnZXRHYWxsZXJ5Q3RybCcsIGZ1bmN0aW9uICgkaHR0cCkge1xyXG4gICAgICAgIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvZ2FsbGVyeScpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgYXBwLmdhbGxlcnlEYXRhID0gcmVzdWx0LmRhdGEuZ2FsbGVyeURhdGE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuu2iOufrOyYpOyngCDrqrvtlZjsmIDsirXri4jri6QuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuIiwiICBhbmd1bGFyLm1vZHVsZSgnaXRlbUNvbnRyb2xsZXJzJyxbJ29yZGVyU2VydmljZXMnXSlcclxuICAuZmlsdGVyKCdzdW1CeUtleScsIGZ1bmN0aW9uKCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChpbnB1dCwgcHJvcGVydHkpIHtcclxuICAgIHZhciBpID0gaW5wdXQgaW5zdGFuY2VvZiBBcnJheSA/IGlucHV0Lmxlbmd0aCA6IDA7XHJcbi8vIGlmIHByb3BlcnR5IGlzIG5vdCBkZWZpbmVkLCByZXR1cm5zIGxlbmd0aCBvZiBhcnJheVxyXG4vLyBpZiBhcnJheSBoYXMgemVybyBsZW5ndGggb3IgaWYgaXQgaXMgbm90IGFuIGFycmF5LCByZXR1cm4gemVyb1xyXG4gICAgaWYgKHR5cGVvZiBwcm9wZXJ0eSA9PT0gJ3VuZGVmaW5lZCcgfHwgaSA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiBpO1xyXG4vLyB0ZXN0IGlmIHByb3BlcnR5IGlzIG51bWJlciBzbyBpdCBjYW4gYmUgY291bnRlZFxyXG4gICAgfVxyXG4gICAgIGVsc2Uge1xyXG4gICAgICAgIHZhciB0b3RhbCA9IDA7XHJcbiAgICAgICAgd2hpbGUgKGktLSlcclxuICAgICAgICAgICAgdG90YWwgKz0gKGlucHV0W2ldW3Byb3BlcnR5WzBdXSAqIGlucHV0W2ldW3Byb3BlcnR5WzFdXSk7XHJcbiAgICAgICAgcmV0dXJuIHRvdGFsO1xyXG4gICAgfVxyXG59O1xyXG59KVxyXG4uY29udHJvbGxlcignZ2V0VHlwZUl0ZW1zQ3RybCcsIGZ1bmN0aW9uICgkc3RhdGVQYXJhbXMsICRodHRwKSB7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcblxyXG4gIHZhciBjYXRlZ29yeV9pZCA9ICRzdGF0ZVBhcmFtcy5jYXRlZ29yeV9pZDtcclxuICBpZighJHN0YXRlUGFyYW1zLnR5cGVfY29kZSl7XHJcbiAgICAkaHR0cC5nZXQoJy9hcGkvaXRlbV90eXBlLycrY2F0ZWdvcnlfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aCA9PT0gMCApe1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+uTseuhneuQnCDsg4HtkojsnbQg7JeG7Iq164uI64ukLic7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5pdGVtc0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHZhciB0eXBlX2NvZGUgPSAgJHN0YXRlUGFyYW1zLnR5cGVfY29kZTtcclxuICAgICRodHRwLmdldCgnL2FwaS9pdGVtX3R5cGUvJytjYXRlZ29yeV9pZCxcclxuICAgIHsgIHBhcmFtczoge3R5cGVfY29kZSA6IHR5cGVfY29kZSB9fVxyXG4gICkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5yZXN1bHQubGVuZ3RoID09PSAwICl7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn65Ox66Gd65CcIOyDge2SiOydtCDsl4bsirXri4jri6QuJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLml0ZW1zRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2dldFR5cGVJdGVtQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGVQYXJhbXMsICR3aW5kb3csICRzdGF0ZSwgT3JkZXIpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIHZhciBpdGVtX2lkID0gJHN0YXRlUGFyYW1zLml0ZW1faWQ7XHJcbiAgYXBwLm9wdGlvbkl0ZW0gPSBmYWxzZTtcclxuXHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICBdLFxyXG4gICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuICAgYXBwLmFtb3VudCA9IDE7XHJcblxyXG4gICBhcHAub3B0aW9uTGlzdCA9IFtdO1xyXG4gICB0aGlzLmFkZEl0ZW0gPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICBpZihkYXRhLmlkID09PSAwKXtcclxuICAgICAgICAkd2luZG93LmFsZXJ0KCfsmLXshZjsnYQg7ISg7YOd7ZW07KO87IS47JqULicpO1xyXG4gICAgIH0gZWxzZSB7XHJcbiAgICAgICBhcHAub3B0aW9uSXRlbSA9IHRydWU7XHJcbiAgICAgICBhcHAub3B0aW9uTGlzdC5wdXNoKFxyXG4gICAgICAgICAgIHtcclxuICAgICAgICAgICAgIGtpbmQ6IGRhdGEubmFtZSxcclxuICAgICAgICAgICAgIHByaWNlOiBkYXRhLmlkLFxyXG4gICAgICAgICAgICAgYW1vdW50OiAxXHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgICApO1xyXG5cclxuICAgICB9XHJcbiAgIH07XHJcblxyXG4gIHRoaXMuY3JlYXRlQmFza2V0ID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB2YXIgYmFza2V0RGF0YSA9IHtcclxuICAgICAgaXRlbV9pZDogZGF0YS5pdGVtX2lkLFxyXG4gICAgfTtcclxuICAgIE9yZGVyLmNyZWF0ZUJhc2tldChiYXNrZXREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHRoaXMuY3JlYXRlT3JkZXIgPSBmdW5jdGlvbihkYXRhKXtcclxuXHJcbiAgICB2YXIgb3JkZXJEYXRhID0ge1xyXG4gICAgICBpdGVtX2lkOiBkYXRhLml0ZW1faWQsXHJcbiAgICAgIGFtb3VudDogZGF0YS5hbW91bnQsXHJcbiAgICAgIGtpbmRfb2Y6IGRhdGEua2luZF9vZixcclxuICAgICAgcHJpY2U6IGRhdGEucHJpY2VcclxuICAgIH07XHJcblxyXG4gICAgT3JkZXIuY3JlYXRlT3JkZXIob3JkZXJEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcC5tYWtlT3JkZXInKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gIH07XHJcblxyXG4gIEFkbWluLnJlYWRJdGVtKGl0ZW1faWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIHZhciBraW5kID0gZGF0YS5kYXRhLnJlc3VsdC5raW5kLnNwbGl0KCcsJyk7XHJcbiAgICAgIHZhciB0ZW1wID0gZGF0YS5kYXRhLnJlc3VsdC5wcmljZS5zcGxpdCgnLCcpO1xyXG4gICAgICB2YXIgcHJpY2UgPSBbXTtcclxuICAgICAgZm9yKGk9MDtpPHRlbXAubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgcHJpY2VbaV0gPSBOdW1iZXIodGVtcFtpXSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFwcC5pdGVtRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcblxyXG4gICAgICBmb3IoaT0wOyBpPHByaWNlLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICBuYW1lOiBraW5kW2ldLFxyXG4gICAgICAgICAgaWQ6IHByaWNlW2ldXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ21hbmFnZW1lbnRDb250cm9sbGVycycsIFsnYWRtaW5TZXJ2aWNlcycsICdtZW51U2VydmljZXMnLCAnb3JkZXJTZXJ2aWNlcyddKVxyXG5cclxuLmNvbnRyb2xsZXIoJ3JlYWRJdGVtc0N0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBBZG1pbi5yZWFkSXRlbXMoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5pdGVtc0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHRoaXMuZGVsZXRlSXRlbSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICB2YXIgaXRlbV9pZCA9IGRhdGEuaXRlbV9pZDtcclxuICAgIEFkbWluLmRlbGV0ZUl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3JlYWRJdGVtQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGVQYXJhbXMsICRzY29wZSwgT3JkZXIsICR3aW5kb3cpe1xyXG5cclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgdmFyIGl0ZW1faWQgPSAkc3RhdGVQYXJhbXMuaXRlbV9pZDtcclxuICAgIGFwcC5kYXRhID0ge1xyXG4gICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgIHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgXSxcclxuICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgIH07XHJcblxyXG4gICAgIGFwcC5hbW91bnQgPSAxO1xyXG5cclxuICAgIEFkbWluLnJlYWRJdGVtKGl0ZW1faWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICB2YXIga2luZCA9IGRhdGEuZGF0YS5yZXN1bHQua2luZC5zcGxpdCgnLCcpO1xyXG4gICAgICAgIHZhciB0ZW1wID0gZGF0YS5kYXRhLnJlc3VsdC5wcmljZS5zcGxpdCgnLCcpO1xyXG4gICAgICAgIHZhciBwcmljZSA9IFtdO1xyXG4gICAgICAgIGZvcihpPTA7aTx0ZW1wLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgcHJpY2VbaV0gPSBOdW1iZXIodGVtcFtpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFwcC5pdGVtRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24gPSB7XHJcbiAgICAgICAgICBpZCA6IHByaWNlWzBdXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZm9yKGk9MDsgaTxwcmljZS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgIG5hbWU6IGtpbmRbaV0sXHJcbiAgICAgICAgICAgIGlkOiBwcmljZVtpXVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG59KVxyXG5cclxuXHJcblxyXG5cclxuLmNvbnRyb2xsZXIoJ3VwZGF0ZUl0ZW1DdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZVBhcmFtcywgJHNjb3BlLCAkaHR0cCwgJHRpbWVvdXQsICAkc3RhdGUsICR3aW5kb3csIE1lbnUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIHZhciBpdGVtX2lkID0gJHN0YXRlUGFyYW1zLml0ZW1faWQ7XHJcblxyXG4gICAgICAgICBhcHAuZGF0YSA9IHtcclxuICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgIF0sXHJcbiAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBhcHAuZGF0YTIgPSB7XHJcbiAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgIGFwcC5kYXRhLmF2YWlsYWJsZU9wdGlvbnNbaSsxXSA9IHtcclxuICAgICAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIHRoaXMucmVhZE1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5yZWFkTWVudVN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZihkYXRhLmlkID09PSAwKXtcclxuICAgICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHZhciBjYXRlZ29yeV9pZCA9IGRhdGEuaWQ7XHJcbiAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL21lbnUvJytjYXRlZ29yeV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgIC8vIOy0iOq4sO2ZlCDsi5ztgrRcclxuICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnJlc3VsdC5sZW5ndGggPT09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn65Ox66Gd65CcIOyDge2SiOydtCDsl4bsirXri4jri6QuJyk7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnJlYWRNZW51U3RhdHVzID0gdHJ1ZTtcclxuICAgIC8vIOy0iOq4sO2ZlCDsi5zsvJzslbztlZjripTrjbAg7Ja065a76rKMIO2VoOq5jOyalFxyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5kYXRhMi5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0udHlwZV9kZXNjcmlwdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHR5cGVbaV0uaXRlbV90eXBlX2lkXHJcbiAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgQWRtaW4ucmVhZEl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICBhcHAuaXRlbURhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbiA9IHtcclxuICAgICAgICBpZCA6IGFwcC5pdGVtRGF0YS5jYXRlZ29yeV9pZFxyXG4gICAgICB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB0aGlzLnVwZGF0ZUl0ZW0gPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoYXBwLnJlYWRNZW51U3RhdHVzKXtcclxuICAgICAgaWYoZGF0YS5pdGVtX3R5cGUgPT09IDAgfHwgZGF0YS5pdGVtX3R5cGUgPT09ICcwJyl7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydCgn7IOB7ZKIIOu2hOulmOulvCDshKDtg53tlbTso7zshLjsmpQuIScpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHZhciB1cGRhdGVEYXRhID0ge1xyXG4gICAgICAgICAgdHlwZTogZGF0YS5pdGVtX3R5cGUsXHJcbiAgICAgICAgICBpdGVtX25hbWU6IGRhdGEuaXRlbV9uYW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB1cGRhdGVEYXRhMiA9IHtcclxuICAgICAgICAgIHR5cGU6IGFwcC5pdGVtRGF0YS5pdGVtX3R5cGVfaWQsXHJcbiAgICAgICAgICBpdGVtX25hbWU6IGRhdGEuaXRlbV9uYW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhMikudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcblxyXG59O1xyXG5cclxuXHJcbiAgLy8g7YyM7J287J2YIOqyveuhnOunjCDsoIDsnqXtlZjquLAg66mU7J24IOydtOuvuOyngCDrp4zrk6TquLBcclxuICAgICAgdGhpcy5maWxlID0ge307XHJcbiAgLy8g66mU7J24IOyeke2SiOydtOuvuOyngCDsl4XroZzrk5wg65CY7JeI64qU7KeAIOuztOyXrOyjvOq4sFxyXG4gICAgICB0aGlzLm1haW5QaG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDAgJiYgZmlsZXNbMF0ubmFtZS5tYXRjaCgvXFwuKHBuZ3xqcGVnfGpwZykkLykpIHtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOuplOyduCDsnpHtkogg7J2066+47KeAIOyXheuhnOuTnO2VtOyEnCDqsr3roZwg7KCA7J6lXHJcbiAgICAgIHRoaXMucmVhZFBob3RvID0gZnVuY3Rpb24oKXtcclxuICAvLyDrqZTsnbgg7J2066+47KeAIOyXheuhnOuTnCDsl6zrtoBcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICBhcHAubWFpblBob3RvID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmZC5hcHBlbmQoJ215ZmlsZScsIGFwcC5maWxlLnVwbG9hZCk7XHJcbiAgICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NyZWF0ZVBob3RvSW1hZ2UvJywgZmQse1xyXG4gICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eSxcclxuICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkfVxyXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBhcHAubWFpblBob3RvID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHZhciB1cGRhdGVEYXRhID0ge1xyXG4gICAgICAgICAgICAgIGltYWdlOiBkYXRhLmRhdGEuaXRlbV9wYXRoXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICRodHRwLnB1dCgnL2FwaS9pdGVtLycraXRlbV9pZCwgdXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmZpbGUgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gIC8vIOyeke2SiCDshKTrqoUg7J2066+47KeAIOyXheuhnOuTnCDrkJjsl4jripTsp4Ag67O07Jes7KO86riwXHJcbiAgICAgIHRoaXMuZXhwbGFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAuZXhwbGFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHAuZXhwbGFpblRodW1ibmFpbC5kYXRhVXJsID0gZS50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICBhcHAuZXhwbGFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgLy8g7J6R7ZKIIOyEpOuqhSAg7J2066+47KeAIOyXheuhnOuTnO2VtOyEnCDqsr3roZwg7KCA7J6lXHJcbiAgICAgIHRoaXMucmVhZFBob3RvRXhwbGFpbiA9IGZ1bmN0aW9uKCl7XHJcbiAgLy8g7J6R7ZKIIOyEpOuqhSAg7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgIGFwcC5leHBsYWluUGhvdG8gPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9FeHBsYWluLycsIGZkLHtcclxuICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHksXHJcbiAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZH1cclxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgYXBwLmV4cGxhaW5QaG90byA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgdXBkYXRlRGF0YSA9IHtcclxuICAgICAgICAgICAgICBleHBsYWluOiBkYXRhLmRhdGEuaXRlbV9wYXRoXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICRodHRwLnB1dCgnL2FwaS9pdGVtLycraXRlbV9pZCwgdXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgLy8g7I2464Sk7J28IOydtOuvuOyngCDrp4zrk6TquLBcclxuICAgICAgICBhcHAubXlJbWFnZT0nJztcclxuICAgICAgICBhcHAubXlDcm9wcGVkSW1hZ2U9Jyc7XHJcblxyXG4gICAgICAgIHZhciBoYW5kbGVGaWxlU2VsZWN0PWZ1bmN0aW9uKGV2dCkge1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgICB2YXIgZmlsZT1ldnQuY3VycmVudFRhcmdldC5maWxlc1swXTtcclxuICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldnQpIHtcclxuICAgICAgICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigkc2NvcGUpe1xyXG4gICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgYXBwLm15SW1hZ2U9ZXZ0LnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgICBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpbGVJbnB1dCcpKS5vbignY2hhbmdlJyxoYW5kbGVGaWxlU2VsZWN0KTtcclxuXHJcbiAgICAgICAgICBmdW5jdGlvbiBkZWNvZGVCYXNlNjRJbWFnZShkYXRhU3RyaW5nKSB7XHJcbiAgICAgICAgICAgIHZhciBtYXRjaGVzID0gZGF0YVN0cmluZy5tYXRjaCgvXmRhdGE6KFtBLVphLXotK1xcL10rKTtiYXNlNjQsKC4rKSQvKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChtYXRjaGVzLmxlbmd0aCAhPT0gMykge1xyXG4gICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoJ0ludmFsaWQgaW5wdXQgc3RyaW5nJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGUgPSB7XHJcbiAgICAgICAgICAgICAgICB0eXBlIDogbWF0Y2hlc1sxXSxcclxuICAgICAgICAgICAgICAgIGRhdGEgOiBtYXRjaGVzWzJdXHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICByZXR1cm4gZmlsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAvLyDsjbjrhKTsnbwg7J2066+47KeAIOuhnOy7rOuUlOyKpO2BrOyXkCDsoIDsnqUg7ZuEIOyggOyepSDsnITsuZgg6rCA7KC47Jik6riwXHJcbiAgICAgICAgICB0aGlzLnJlYWRDcm9wSW1hZ2UgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdMT0FEJyk7XHJcbiAgICAgICAgICAgIGFwcC50aHVtYm5haWwgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYoZGF0YS5iYXNlNjRVcmwgPT09ICcnIHx8IGRhdGEuYmFzZTY0VXJsID09PSBudWxsIHx8IGRhdGEuYmFzZTY0VXJsID09PSB1bmRlZmluZWQpe1xyXG4gICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICB2YXIgYmxvYiA9IGRlY29kZUJhc2U2NEltYWdlKCRzY29wZS5teUNyb3BwZWRJbWFnZSk7XHJcbiAgICAgICAgICAgICAgICAgIEFkbWluLnJlYWRBcmlzdENyb3AoYmxvYikudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAudGh1bWJuYWlsID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRodW1ibmFpbDogZGF0YS5kYXRhLmZpbGVQYXRoXHJcbiAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgJGh0dHAucHV0KCcvYXBpL2l0ZW0vJytpdGVtX2lkLCB1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9O1xyXG5cclxuXHJcbn0pXHJcblxyXG5cclxuXHJcbi5jb250cm9sbGVyKCdjcmVhdGVJdGVtQ3RybCcsIGZ1bmN0aW9uICgkaHR0cCwgJHRpbWVvdXQsICRzY29wZSwgQWRtaW4sICRzdGF0ZSwgJHdpbmRvdywgTWVudSkge1xyXG4gICAgdmFyIGFwcCA9IHRoaXM7XHJcblxyXG5cclxuICAgICAgYXBwLmtpbmRMaXN0ID0gW107XHJcbiAgICAgIGFwcC50eXBlX3RpbnkgPSBbXTtcclxuICAgICAgYXBwLnR5cGVfcHJpY2UgPSBbXTtcclxuXHJcbiAgICAgIHRoaXMuYWRkTGluZSA9IGZ1bmN0aW9uKGtpbmREYXRhKXtcclxuICAgICAgICBpZigha2luZERhdGEpe1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydCgn7KCV7ZmV7ZWcIOqwkuydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmKGtpbmREYXRhLmtpbmRWYWx1ZSA9PT0gbnVsbCB8fCBraW5kRGF0YS5raW5kVmFsdWUgPT09IHVuZGVmaW5lZCB8fCBraW5kRGF0YS5raW5kVmFsdWUgPT09ICcnKVxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICAkd2luZG93LmFsZXJ0KCfsmLXshZjrqoXsnYQg7J6F66Cl7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgfSBlbHNlIGlmKGtpbmREYXRhLmtpbmRQcmljZSA9PT0gbnVsbCB8fCBraW5kRGF0YS5raW5kUHJpY2UgPT09IHVuZGVmaW5lZCB8fCBraW5kRGF0YS5raW5kUHJpY2UgPT09ICcnKXtcclxuICAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWYIOqwgOqyqeydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAua2luZExpc3QucHVzaChcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBraW5kOiBraW5kRGF0YS5raW5kVmFsdWUsXHJcbiAgICAgICAgICAgICAgICBwcmljZToga2luZERhdGEua2luZFByaWNlXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBhcHAudHlwZV90aW55LnB1c2goa2luZERhdGEua2luZFZhbHVlKTtcclxuICAgICAgICAgICAgYXBwLnR5cGVfcHJpY2UucHVzaChraW5kRGF0YS5raW5kUHJpY2UpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgIH07XHJcblxyXG4gICAgIGFwcC5kYXRhID0ge1xyXG4gICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICBdLFxyXG4gICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgIH07XHJcblxyXG4gICAgICBhcHAuZGF0YTIgPSB7XHJcbiAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGhpcy5yZWFkTWVudSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuaWQgPT09IDApe1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydCgn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIGNhdGVnb3J5X2lkID0gZGF0YS5pZDtcclxuICAgICAgICAgICRodHRwLmdldCgnL2FwaS9tZW51LycrY2F0ZWdvcnlfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuLy8g7LSI6riw7ZmUIOyLnO2CtFxyXG4gICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5yZXN1bHQubGVuZ3RoID09PSAwKXtcclxuICAgICAgICAgICAgICAgIGFwcC5kYXRhMiA9IHtcclxuICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+uTseuhneuQnCDsg4HtkojsnbQg7JeG7Iq164uI64ukLicpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbi8vIOy0iOq4sO2ZlCDsi5zsvJzslbztlZjripTrjbAg7Ja065a76rKMIO2VoOq5jOyalFxyXG4gICAgICAgICAgICAgICAgYXBwLmRhdGEyID0ge1xyXG4gICAgICAgICAgICAgICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZGF0YTIuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0udHlwZV9kZXNjcmlwdGlvbixcclxuICAgICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5pdGVtX3R5cGVfaWRcclxuICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuXHJcbi8vIO2MjOydvOydmCDqsr3roZzrp4wg7KCA7J6l7ZWY6riwIOuplOyduCDsnbTrr7jsp4Ag66eM65Ok6riwXHJcbiAgICB0aGlzLmZpbGUgPSB7fTtcclxuLy8g66mU7J24IOyeke2SiOydtOuvuOyngCDsl4XroZzrk5wg65CY7JeI64qU7KeAIOuztOyXrOyjvOq4sFxyXG4gICAgdGhpcy5tYWluUGhvdG9DaGFuZ2VkID0gZnVuY3Rpb24oZmlsZXMpIHtcclxuICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDAgJiYgZmlsZXNbMF0ubmFtZS5tYXRjaCgvXFwuKHBuZ3xqcGVnfGpwZykkLykpIHtcclxuICAgICAgICAgICAgICB2YXIgZmlsZSA9IGZpbGVzWzBdO1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5tYWluVGh1bWJuYWlsID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbC5kYXRhVXJsID0gZS50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgIGFwcC5tYWluVGh1bWJuYWlsID0ge307XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG5cclxuLy8g66mU7J24IOyeke2SiCDsnbTrr7jsp4Ag7JeF66Gc65Oc7ZW07IScIOqyveuhnCDsoIDsnqVcclxuICAgIHRoaXMucmVhZFBob3RvID0gZnVuY3Rpb24oKXtcclxuLy8g66mU7J24IOydtOuvuOyngCDsl4XroZzrk5wg7Jes67aAXHJcbiAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICBhcHAubWFpblBob3RvID0gZmFsc2U7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIHZhciBmZCA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICBmZC5hcHBlbmQoJ215ZmlsZScsIGFwcC5maWxlLnVwbG9hZCk7XHJcbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS9jcmVhdGVQaG90b0ltYWdlLycsIGZkLHtcclxuICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkfVxyXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgIGFwcC5tYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAubWFpbkltYWdlUGF0aCA9IGRhdGEuZGF0YS5pdGVtX3BhdGg7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9O1xyXG5cclxuLy8g7J6R7ZKIIOyEpOuqhSDsnbTrr7jsp4Ag7JeF66Gc65OcIOuQmOyXiOuKlOyngCDrs7Tsl6zso7zquLBcclxuICAgIHRoaXMuZXhwbGFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwICYmIGZpbGVzWzBdLm5hbWUubWF0Y2goL1xcLihwbmd8anBlZ3xqcGcpJC8pKSB7XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGUgPSBmaWxlc1swXTtcclxuICAgICAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XHJcbiAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZXhwbGFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmV4cGxhaW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICBhcHAuZXhwbGFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuXHJcbi8vIOyeke2SiCDshKTrqoUgIOydtOuvuOyngCDsl4XroZzrk5ztlbTshJwg6rK966GcIOyggOyepVxyXG4gICAgdGhpcy5yZWFkUGhvdG9FeHBsYWluID0gZnVuY3Rpb24oKXtcclxuLy8g7J6R7ZKIIOyEpOuqhSAg7JeF66Gc65OcIOyXrOu2gFxyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgYXBwLmV4cGxhaW5QaG90byA9IGZhbHNlO1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgZmQuYXBwZW5kKCdteWZpbGUnLCBhcHAuZmlsZS51cGxvYWQpO1xyXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvY3JlYXRlUGhvdG9FeHBsYWluLycsIGZkLHtcclxuICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5LFxyXG4gICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkfVxyXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAkd2luZG93LmFsZXJ0KGRhdGEuZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICAgIGFwcC5leHBsYWluUGhvdG8gPSB0cnVlO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZXhwbGFpbkltYWdlUGF0aCA9IGRhdGEuZGF0YS5pdGVtX3BhdGg7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9O1xyXG5cclxuXHJcbi8vIOyNuOuEpOydvCDsnbTrr7jsp4Ag66eM65Ok6riwXHJcbiAgICAgIGFwcC5teUltYWdlPScnO1xyXG4gICAgICBhcHAubXlDcm9wcGVkSW1hZ2U9Jyc7XHJcblxyXG4gICAgICB2YXIgaGFuZGxlRmlsZVNlbGVjdD1mdW5jdGlvbihldnQpIHtcclxuICAgICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgICB2YXIgZmlsZT1ldnQuY3VycmVudFRhcmdldC5maWxlc1swXTtcclxuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigkc2NvcGUpe1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAubXlJbWFnZT1ldnQudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgIH07XHJcbiAgICAgICAgYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmaWxlSW5wdXQnKSkub24oJ2NoYW5nZScsaGFuZGxlRmlsZVNlbGVjdCk7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGRlY29kZUJhc2U2NEltYWdlKGRhdGFTdHJpbmcpIHtcclxuICAgICAgICAgIHZhciBtYXRjaGVzID0gZGF0YVN0cmluZy5tYXRjaCgvXmRhdGE6KFtBLVphLXotK1xcL10rKTtiYXNlNjQsKC4rKSQvKTtcclxuXHJcbiAgICAgICAgICBpZiAobWF0Y2hlcy5sZW5ndGggIT09IDMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcignSW52YWxpZCBpbnB1dCBzdHJpbmcnKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBmaWxlID0ge1xyXG4gICAgICAgICAgICAgIHR5cGUgOiBtYXRjaGVzWzFdLFxyXG4gICAgICAgICAgICAgIGRhdGEgOiBtYXRjaGVzWzJdXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJldHVybiBmaWxlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbi8vIOyNuOuEpOydvCDsnbTrr7jsp4Ag66Gc7Lus65SU7Iqk7YGs7JeQIOyggOyepSDtm4Qg7KCA7J6lIOychOy5mCDqsIDsoLjsmKTquLBcclxuICAgICAgICB0aGlzLnJlYWRDcm9wSW1hZ2UgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgICAgYXBwLnRodW1ibmFpbCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGlmKGRhdGEuYmFzZTY0VXJsID09PSAnJyB8fCBkYXRhLmJhc2U2NFVybCA9PT0gbnVsbCB8fCBkYXRhLmJhc2U2NFVybCA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgIHZhciBibG9iID0gZGVjb2RlQmFzZTY0SW1hZ2UoJHNjb3BlLm15Q3JvcHBlZEltYWdlKTtcclxuICAgICAgICAgICAgICAgIEFkbWluLnJlYWRBcmlzdENyb3AoYmxvYikudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbFBhdGggPSBkYXRhLmRhdGEuZmlsZVBhdGg7XHJcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcblxyXG5cclxuLy8g7J6R6rCAIOyeke2SiCDsl4XroZzrk5xcclxuICAgICAgdGhpcy5jcmVhdGVQaG90byA9IGZ1bmN0aW9uKHVwbG9hZERhdGEpe1xyXG4gICAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICAgIGlmKHVwbG9hZERhdGEgPT09IHVuZGVmaW5lZCB8fCB1cGxvYWREYXRhID09PSBudWxsIHx8IHVwbG9hZERhdGEgPT09ICcnKXtcclxuICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+u5iOy5uOydhCDrqqjrkZAg7J6F66Cl7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmKGFwcC5kYXRhMi5zZWxlY3RlZE9wdGlvbi5pZCA9PT0gJzAnKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+yDge2SiCDrtoTrpZjsnYQg7ISg7YOd7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgfSBlbHNlIGlmKHVwbG9hZERhdGEudGl0bGUgPT09IHVuZGVmaW5lZCB8fCB1cGxvYWREYXRhLnRpdGxlID09PSAgbnVsbCB8fCB1cGxvYWREYXRhLnRpdGxlPT09ICcnKXtcclxuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+yDge2SiCDsoJzrqqnrpbwg7J6F66Cl7ZW07KO87IS47JqULicpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLy8gICBlbHNlIGlmKGFwcC5tYWluSW1hZ2VQYXRoID09PSB1bmRlZmluZWQgfHwgYXBwLm1haW5JbWFnZVBhdGggPT09ICBudWxsIHx8IGFwcC5tYWluSW1hZ2VQYXRoID09PSAnJyl7XHJcbiAgICAgICAgICAvLyAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAvLyAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgLy8gICAkd2luZG93LmFsZXJ0KCfsg4Htkogg7J2066+47KeA66W8IOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIC8vIH1cclxuICAgICAgICAgIC8vIGVsc2UgaWYoYXBwLmV4cGxhaW5JbWFnZVBhdGggPT09IHVuZGVmaW5lZCB8fCBhcHAuZXhwbGFpbkltYWdlUGF0aCA9PT0gbnVsbCB8fCBhcHAuZXhwbGFpbkltYWdlUGF0aCA9PT0gJycpIHtcclxuICAgICAgICAgIC8vICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgIC8vICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAvLyAgICR3aW5kb3cuYWxlcnQoJ+yDge2SiCDshKTrqoUg7J2066+47KeA66W8IOyXheuhnOuTnO2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgIC8vIH0gZWxzZSBpZihhcHAudGh1bWJuYWlsUGF0aCA9PT0gdW5kZWZpbmVkIHx8IGFwcC50aHVtYm5haWxQYXRoID09PSBudWxsIHx8IGFwcC50aHVtYm5haWxQYXRoID09PSAnJykge1xyXG4gICAgICAgICAgLy8gICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgLy8gICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgIC8vICAgJHdpbmRvdy5hbGVydCgn7I2464Sk7J28IOydtOuvuOyngOulvCDsl4XroZzrk5ztlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICBhcHAudXBsb2FkRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiB1cGxvYWREYXRhLnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogYXBwLmRhdGEyLnNlbGVjdGVkT3B0aW9uLmlkLFxyXG4gICAgICAgICAgICAgICAgLy8gdGh1bWJuYWlsOiBhcHAudGh1bWJuYWlsUGF0aCxcclxuICAgICAgICAgICAgICAgIC8vIGV4cGxhaW46IGFwcC5leHBsYWluSW1hZ2VQYXRoLFxyXG4gICAgICAgICAgICAgICAgLy8gaW1hZ2U6IGFwcC5tYWluSW1hZ2VQYXRoLFxyXG4gICAgICAgICAgICAgICAga2luZDogYXBwLnR5cGVfdGlueS50b1N0cmluZygpLFxyXG4gICAgICAgICAgICAgICAgcHJpY2U6IGFwcC50eXBlX3ByaWNlLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIEFkbWluLmNyZWF0ZUl0ZW0oYXBwLnVwbG9hZERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoZGF0YS5kYXRhLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgJHdpbmRvdy5hbGVydChkYXRhLmRhdGEubWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnbWVudUNvbnRyb2xsZXJzJyxbJ21lbnVTZXJ2aWNlcyddKVxyXG4uY29udHJvbGxlcignbWFpbk1lbnVDdHJsJywgZnVuY3Rpb24gKE1lbnUsICRzdGF0ZSkge1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuICB0aGlzLmNyZWF0ZU1lbnUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgaWYoZGF0YSA9PT0gdW5kZWZpbmVkKXtcclxuICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YXIgbWVudURhdGEgPSB7XHJcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWVcclxuICAgICAgfTtcclxuICAgICAgTWVudS5jcmVhdGVNZW51KG1lbnVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgdmFyIHVwZGF0ZURhdGEgPSB7XHJcbiAgICAgIGNhdGVnb3J5X2lkOiBkYXRhLmNhdGVnb3J5X2lkLFxyXG4gICAgICBuYW1lOiBkYXRhLm5hbWVcclxuICAgIH07XHJcbiAgICAgIE1lbnUudXBkYXRlTWVudSh1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdGhpcy5kZWxldGUgPSBmdW5jdGlvbihkYXRhKXtcclxuICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgdmFyIGRlbGV0ZURhdGEgPSBkYXRhLmNhdGVnb3J5X2lkO1xyXG4gICAgTWVudS5kZWxldGVNZW51KGRlbGV0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbn0pXHJcblxyXG4uY29udHJvbGxlcignc3ViTWVudUN0cmwnLCBmdW5jdGlvbiAoTWVudSwgJHN0YXRlLCAkc3RhdGVQYXJhbXMsICRodHRwKSB7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGNhdGVnb3J5X2lkID0gJHN0YXRlUGFyYW1zLmNhdGVnb3J5X2lkO1xyXG5cclxuICAkaHR0cC5nZXQoJy9hcGkvY2F0ZWdvcnkvJytjYXRlZ29yeV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLnN1Yk1lbnVEYXRhcyA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCd0eXBlQ29udHJvbGxlcnMnLCBbJ2FkbWluU2VydmljZXMnLCAnbWVudVNlcnZpY2VzJywgJ29yZGVyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ3VwZGF0ZUl0ZW1UeXBlQ3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgTWVudSwgQWRtaW4sICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGl0ZW1faWQgPSAkc3RhdGVQYXJhbXMuaXRlbV9pZDtcclxuICBhcHAuZGF0YSA9IHtcclxuICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuXHJcblxyXG4gICBBZG1pbi5yZWFkVXBkYXRlSXRlbVR5cGUoaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICBhcHAudXBkYXRhRGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgICAgYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24gPSB7XHJcbiAgICAgICAgICAgICBpZCA6IGFwcC51cGRhdGFEYXRhLmNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgdmFyIHNwbGl0T3B0aW9uRGF0YXMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICBraW5kOiBhcHAudXBkYXRhRGF0YS5raW5kLnNwbGl0KCcsJyksXHJcbiAgICAgICAgICAgICAgICAgICBwcmljZTogYXBwLnVwZGF0YURhdGEucHJpY2Uuc3BsaXQoJywnKVxyXG4gICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICBhcHAub3B0aW9uRGF0YXMgPSBbXTtcclxuXHJcbiAgICAgICAgICAgZm9yKGk9MDsgaSA8IHNwbGl0T3B0aW9uRGF0YXMua2luZC5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICBhcHAub3B0aW9uRGF0YXNbaV0gPSB7XHJcbiAgICAgICAgICAgICAgIGtpbmQ6IHNwbGl0T3B0aW9uRGF0YXMua2luZFtpXSxcclxuICAgICAgICAgICAgICAgcHJpY2U6ICBzcGxpdE9wdGlvbkRhdGFzLnByaWNlW2ldLFxyXG4gICAgICAgICAgICAgfTtcclxuICAgICAgICAgICB9XHJcblxyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcblxyXG4gICAgICAgfVxyXG4gICB9KTtcclxuXHJcbiAgIHRoaXMudXBkYXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC51cGRhdGVEYXRhID0gZGF0YTtcclxuICAgICBhcHAudXBkYXRlRGF0YS5jYXRlZ29yeV9pZCA9IGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkO1xyXG4gICAgIEFkbWluLnVwZGF0ZVVwZGF0ZVR5cGUoYXBwLnVwZGF0ZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG4gICB0aGlzLnVwZGF0ZWl0ZW1UeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgdmFyIGtpbmRBcnJheSA9IFtdO1xyXG4gICAgIHZhciBwcmljZUFycmF5ID0gW107XHJcbiAgICAgZm9yKGk9MDtpPGFwcC5vcHRpb25EYXRhcy5sZW5ndGg7aSsrKXtcclxuICAgICAgIGtpbmRBcnJheS5wdXNoKGFwcC5vcHRpb25EYXRhc1tpXS5raW5kKTtcclxuICAgICAgIHByaWNlQXJyYXkucHVzaChhcHAub3B0aW9uRGF0YXNbaV0ucHJpY2UpO1xyXG4gICAgIH1cclxuICAgICB2YXIgdXBkYXRlRGF0YSA9IHtcclxuICAgICAgIGl0ZW1faWQ6IGRhdGEuaXRlbV9pZCxcclxuICAgICAgIGl0ZW1fbmFtZTogZGF0YS5pdGVtX25hbWUsXHJcbiAgICAgICBwcmljZTogcHJpY2VBcnJheS50b1N0cmluZygpLFxyXG4gICAgICAga2luZDoga2luZEFycmF5LnRvU3RyaW5nKClcclxuICAgICB9O1xyXG5cclxuICAgICBBZG1pbi51cGRhdGVJdGVtVHlwZSh1cGRhdGVEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG5cclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxuXHJcblxyXG5cclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdyZWFkSXRlbVR5cGVDdHJsJywgZnVuY3Rpb24oQWRtaW4sICRzdGF0ZSwgJHdpbmRvdywgTWVudSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgICBhcHAuZGF0YSA9IHtcclxuICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgICAgXSxcclxuICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgICAgfTtcclxuXHJcblxyXG4gICAgIHRoaXMuY29weUl0ZW1UeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcblxyXG4gICAgICAgdmFyIGl0ZW1EYXRhID0ge1xyXG4gICAgICAgICB0eXBlOiBkYXRhLml0ZW1fdHlwZV9pZCxcclxuICAgICAgICAgdGl0bGU6IGRhdGEuaXRlbV9uYW1lLFxyXG4gICAgICAgICBraW5kOiBkYXRhLmtpbmQudG9TdHJpbmcoKSxcclxuICAgICAgICAgcHJpY2U6IGRhdGEucHJpY2UudG9TdHJpbmcoKVxyXG5cclxuICAgICAgIH07XHJcblxyXG5cclxuXHJcbiAgICAgQWRtaW4uY3JlYXRlSXRlbShpdGVtRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxuXHJcbiAgIHRoaXMuZGVsZXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgIHZhciBpdGVtX2lkID0gZGF0YS5pdGVtX2lkO1xyXG4gICAgIEFkbWluLmRlbGV0ZUl0ZW0oaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG4vLyDsg4Htkogg67aE66WY7ZGcXHJcbiAgQWRtaW4ucmVhZEl0ZW1UeXBlKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBhcHAudHlwZURhdGFzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgdmFyIGtpbmREYXRhcyA9IFtdO1xyXG5cclxuICAgICAgZm9yKHZhciBpPTA7IGk8ZGF0YS5kYXRhLnJlc3VsdC5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICBraW5kRGF0YXNbaV0gPSB7XHJcbiAgICAgICAgICAgICAga2luZDogYXBwLnR5cGVEYXRhc1tpXS5raW5kLnNwbGl0KCcsJyksXHJcbiAgICAgICAgICAgICAgcHJpY2U6IGFwcC50eXBlRGF0YXNbaV0ucHJpY2Uuc3BsaXQoJywnKVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIGFwcC50eXBlRGF0YXNbaV0ua2luZCA9IGtpbmREYXRhc1tpXS5raW5kO1xyXG4gICAgICAgICAgYXBwLnR5cGVEYXRhc1tpXS5wcmljZSA9IGtpbmREYXRhc1tpXS5wcmljZTtcclxuICAgICAgfVxyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuXHJcbi8vIOyDge2SiCDrtoTrpZjtkZxcclxuLmNvbnRyb2xsZXIoJ3VwZGF0ZVR5cGVDdHJsJywgZnVuY3Rpb24oJHN0YXRlUGFyYW1zLCBNZW51LCBBZG1pbiwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgaXRlbV90eXBlID0gJHN0YXRlUGFyYW1zLml0ZW1fdHlwZTtcclxuICBhcHAuZGF0YSA9IHtcclxuICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuICAgQWRtaW4ucmVhZFVwZGF0ZVR5cGUoaXRlbV90eXBlKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgIGlkOiB0eXBlW2ldLmNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgYXBwLnVwZGF0YURhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgIGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uID0ge1xyXG4gICAgICAgICAgICAgaWQgOiBhcHAudXBkYXRhRGF0YS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICAgIH07XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICAgICB9XHJcbiAgIH0pO1xyXG5cclxuICAgdGhpcy51cGRhdGVUeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgYXBwLnVwZGF0ZURhdGEgPSBkYXRhO1xyXG4gICAgIGFwcC51cGRhdGVEYXRhLmNhdGVnb3J5X2lkID0gYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24uaWQ7XHJcbiAgICAgQWRtaW4udXBkYXRlVXBkYXRlVHlwZShhcHAudXBkYXRlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgIH1cclxuICAgICB9KTtcclxuICAgfTtcclxufSlcclxuXHJcbi8vIOyDge2SiCDrtoTrpZjtkZxcclxuLmNvbnRyb2xsZXIoJ3JlYWRUeXBlQ3RybCcsIGZ1bmN0aW9uKEFkbWluLCAkc3RhdGUsICR3aW5kb3csIE1lbnUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgYXBwLmRhdGEgPSB7XHJcbiAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgIF0sXHJcbiAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgIH07XHJcblxyXG4gICAgdGhpcy5jb3B5VHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICB2YXIgdHlwZURhdGEgPSB7XHJcbiAgICAgICAgY2F0ZWdvcnk6IGRhdGEuY2F0ZWdvcnlfaWQsXHJcbiAgICAgICAgdHlwZV9kZXNjcmlwdGlvbjogZGF0YS50eXBlX2Rlc2NyaXB0aW9uLFxyXG4gICAgICAgIHR5cGVfY29kZTogZGF0YS50eXBlX2NvZGVcclxuICAgICAgfTtcclxuICAgICAgQWRtaW4uY3JlYXRlVHlwZSh0eXBlRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgIHRoaXMuZGVsZXRlVHlwZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgIHZhciBpdGVtX3R5cGVfaWQgPSBkYXRhLml0ZW1fdHlwZTtcclxuICAgICBBZG1pbi5kZWxldGVUeXBlKGl0ZW1fdHlwZV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG4vLyDsg4Htkogg67aE66WY7ZGcXHJcbiAgQWRtaW4ucmVhZFR5cGUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICBNZW51LnJlYWRNYWluTWVudSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgdmFyIHR5cGUgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgICAgZm9yKGk9MDsgaTx0eXBlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICBhcHAuZGF0YS5hdmFpbGFibGVPcHRpb25zW2krMV0gPSB7XHJcbiAgICAgICAgICAgICAgbmFtZTogdHlwZVtpXS5uYW1lLFxyXG4gICAgICAgICAgICAgIGlkOiB0eXBlW2ldLmNhdGVnb3J5X2lkXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIGFwcC50eXBlRGF0YXMgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuLy8g7IOB7ZKIIOu2hOulmO2RnFxyXG4uY29udHJvbGxlcignY3JlYXRlVHlwZUN0cmwnLCBmdW5jdGlvbihBZG1pbiwgJHN0YXRlLCBNZW51LCAkd2luZG93KXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBhcHAuZGF0YSA9IHtcclxuICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgXSxcclxuICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuICAgTWVudS5yZWFkTWFpbk1lbnUoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgIHZhciB0eXBlID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgIGZvcihpPTA7IGk8dHlwZS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgYXBwLmRhdGEuYXZhaWxhYmxlT3B0aW9uc1tpKzFdID0ge1xyXG4gICAgICAgICAgIG5hbWU6IHR5cGVbaV0ubmFtZSxcclxuICAgICAgICAgICBpZDogdHlwZVtpXS5jYXRlZ29yeV9pZFxyXG4gICAgICAgICB9O1xyXG4gICAgICAgfVxyXG4gICAgIH0gZWxzZSB7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICB9XHJcbiAgIH0pO1xyXG5cclxuXHJcbiAgdGhpcy5jcmVhdGVUeXBlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC50eXBlRGF0YSA9IHtcclxuICAgICAgY2F0ZWdvcnk6IGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkLFxyXG4gICAgICB0eXBlX2Rlc2NyaXB0aW9uOiBkYXRhLnR5cGVfZGVzY3JpcHRpb24sXHJcbiAgICAgIHR5cGVfY29kZTogZGF0YS50eXBlX2NvZGVcclxuICAgIH07XHJcblxyXG4gICAgQWRtaW4uY3JlYXRlVHlwZShhcHAudHlwZURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBhcHAuc3VjY2VzcyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG5cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGFwcC5raW5kTGlzdCA9IFtdO1xyXG4gIGFwcC50eXBlX3RpbnkgPSBbXTtcclxuICBhcHAudHlwZV9wcmljZSA9IFtdO1xyXG5cclxuICB0aGlzLmFkZExpbmUgPSBmdW5jdGlvbihraW5kRGF0YSl7XHJcbiAgICBpZigha2luZERhdGEpe1xyXG4gICAgICAkd2luZG93LmFsZXJ0KCfsoJXtmZXtlZwg6rCS7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmKGtpbmREYXRhLmtpbmRWYWx1ZSA9PT0gbnVsbCB8fCBraW5kRGF0YS5raW5kVmFsdWUgPT09IHVuZGVmaW5lZCB8fCBraW5kRGF0YS5raW5kVmFsdWUgPT09ICcnKVxyXG4gICAgICB7XHJcbiAgICAgICAgJHdpbmRvdy5hbGVydCgn7Ji17IWY66qF7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgfSBlbHNlIGlmKGtpbmREYXRhLmtpbmRQcmljZSA9PT0gbnVsbCB8fCBraW5kRGF0YS5raW5kUHJpY2UgPT09IHVuZGVmaW5lZCB8fCBraW5kRGF0YS5raW5kUHJpY2UgPT09ICcnKXtcclxuICAgICAgICAkd2luZG93LmFsZXJ0KCfsmLXshZgg6rCA6rKp7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAua2luZExpc3QucHVzaChcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAga2luZDoga2luZERhdGEua2luZFZhbHVlLFxyXG4gICAgICAgICAgICBwcmljZToga2luZERhdGEua2luZFByaWNlXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgKTtcclxuICAgICAgICBhcHAudHlwZV90aW55LnB1c2goa2luZERhdGEua2luZFZhbHVlKTtcclxuICAgICAgICBhcHAudHlwZV9wcmljZS5wdXNoKGtpbmREYXRhLmtpbmRQcmljZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdtYWluQ29udHJvbGxlcnMnLFsnYXV0aFNlcnZpY2VzJywgJ3VzZXJTZXJ2aWNlcyddKVxyXG4uY29udHJvbGxlcignbWFpbkN0cmwnLCBmdW5jdGlvbihBdXRoLCAkdGltZW91dCwgJGxvY2F0aW9uLCAkc3RhdGUsICRyb290U2NvcGUsICRzY29wZSwgJHdpbmRvdywgJGludGVydmFsLCBVc2VyLCBBdXRoVG9rZW4pe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIGFwcC5sb2FkbWUgPSBmYWxzZTtcclxuICAkc2NvcGUuJG9uKCdMT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcclxuICB9KTtcclxuXHJcbiAgJHNjb3BlLiRvbignVU5MT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgfSk7XHJcblxyXG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCl7XHJcbiAgICBpZighY2hlY2tTZXNzaW9uKSB7XHJcbiAgICAgIGNoZWNrU2Vzc2lvbigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYoQXV0aC5pc0xvZ2dlZEluKCkpe1xyXG4gICAgICAgIGFwcC5pc0xvZ2dlZEluID0gdHJ1ZTtcclxuICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICBBdXRoLmdldFVzZXIoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgYXBwLnVzZXIgPSBkYXRhLmRhdGE7XHJcbiAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgIFVzZXIuZ2V0UGVybWlzc2lvbigpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICBpZihkYXRhLmRhdGEucGVybWlzc2lvbiA9PT0gJ2FkbWluJyl7XHJcbiAgICAgICAgICAgICAgICBhcHAuYXV0aG9yaXplZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgICB9IGVsc2UgaWYoZGF0YS5kYXRhLnBlcm1pc3Npb24gPT09ICdhcnRpc3QnKXtcclxuICAgICAgICAgICAgICAgIGFwcC5wZXJtaXNzaW9uID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYXBwLmF1dGhvcml6ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGFwcC5hdXRob3JpemVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC51c2VyID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSBmYWxzZTtcclxuICAgICAgICBhcHAubG9hZG1lID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB2YXIgY2hlY2tTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgIGlmKEF1dGguaXNMb2dnZWRJbigpKXtcclxuICAgICAgYXBwLmNoZWNrU2Vzc2lvbiA9IHRydWU7XHJcbiAgICAgIHZhciBpbnRlcnZhbCA9ICRpbnRlcnZhbChmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciB0b2tlbiA9ICR3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7XHJcbiAgICAgICAgaWYodG9rZW4gPT09IG51bGwpe1xyXG4gICAgICAgICAgJGludGVydmFsLmNhbmNlbChpbnRlcnZhbCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNlbGYucGFyc2VKd3QgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICAgICAgICAgIHZhciBiYXNlNjRVcmwgPSB0b2tlbi5zcGxpdCgnLicpWzFdO1xyXG4gICAgICAgICAgICB2YXIgYmFzZTY0ID0gYmFzZTY0VXJsLnJlcGxhY2UoJy0nLCcrJykucmVwbGFjZSgnXycsICcvJyk7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKCR3aW5kb3cuYXRvYihiYXNlNjQpKTtcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICB2YXIgZXhwaXJlVGltZSA9IHNlbGYucGFyc2VKd3QodG9rZW4pO1xyXG4gICAgICAgICAgdmFyIHRpbWVTdGFtcCA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xyXG4gICAgICAgICAgdmFyIHRpbWVDaGVjayA9IGV4cGlyZVRpbWUuZXhwIC0gdGltZVN0YW1wO1xyXG5cclxuICAgICAgICAgIGlmKHRpbWVDaGVjayA8PSA1KXtcclxuICAgICAgICAgICAgc2hvd01vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoaW50ZXJ2YWwpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0sIDIwMDApO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNoZWNrU2Vzc2lvbigpO1xyXG5cclxuXHJcbiAgICBhcHAucmVuZXdTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmNob2ljZU1hZGUgPSB0cnVlO1xyXG4gICAgICBVc2VyLnJlbmV3U2Vzc2lvbihhcHAudXNlci51c2VybmFtZSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBBdXRoVG9rZW4uc2V0VG9rZW4oZGF0YS5kYXRhLnRva2VuKTtcclxuICAgICAgICAgIGNoZWNrU2Vzc2lvbigpO1xyXG4gICAgICAgICAgaGlkZU1vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgYXBwLk1vZGFsQm9keSA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgaGlkZU1vZGFsKCdleHBpcmVkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgYXBwLmVuZFNlc3Npb24gPSBmdW5jdGlvbigpe1xyXG4gICAgICBhcHAuY2hvaWNlTWFkZSA9IHRydWU7XHJcbiAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgIHNob3dNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgIH0sNTAwKTtcclxuICAgIH07XHJcblxyXG5cclxuICB2YXIgc2hvd01vZGFsID0gZnVuY3Rpb24ob3B0aW9uKXtcclxuICAgIGFwcC5jaG9pY2VNYWRlID0gZmFsc2U7XHJcbiAgICBhcHAubW9kYWxIZWFkZXIgPSB1bmRlZmluZWQ7XHJcbiAgICBhcHAubW9kYWxCb2R5ID0gdW5kZWZpbmVkO1xyXG4gICAgYXBwLmhpZGVCdXR0b24gPSBmYWxzZTtcclxuLy8gY2hlY2sgdG9rZW4gZXhwaXJlZFxyXG4gICAgaWYob3B0aW9uID09PSAgJ2V4cGlyZWQnICl7XHJcbiAgICAgIGFwcC5tb2RhbEhlYWRlciA9ICdUaW1lb3V0IFdhcm5pbmcnO1xyXG4gICAgICBhcHAubW9kYWxCb2R5ID0gJ1lvdXIgc2Vzc2lvbiB3aWxsIGV4cGlyZWQgaW4gNSBtaW51dGVzLiBXb3VsZCB5b3UgbGlrZSB0byByZW5ldyB5b3VyIHNlc3Npb24/JztcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9nb3V0Jyl7XHJcbi8vIGxvZ291dFxyXG4gICAgICBhcHAuaGlkZUJ1dHRvbiA9IHRydWU7XHJcbiAgICAgIGFwcC5tb2RhbEhlYWRlciA9ICfroZzqt7jslYTsm4MnO1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoe2JhY2tkcm9wOlwic3RhdGljXCJ9KTtcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICBBdXRoLmxvZ291dCgpO1xyXG4gICAgICAgIGFwcC5pc0xvZ2dlZEluID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmF1dGhvcml6ZWQgPSBmYWxzZTtcclxuICAgICAgICBhcHAucGVybWlzc2lvbiA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcblxyXG4gICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dpbicpe1xyXG4vLyBMb2dpblxyXG4gICAgICAkKFwiI2xvZ2luXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYoIWFwcC5jaG9pY2VNYWRlKXtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAyMDAwKTtcclxuXHJcbiAgfTtcclxuXHJcbiAgdmFyIGhpZGVNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcblxyXG4gICAgaWYob3B0aW9uID09PSAnZXhwaXJlZCcpe1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoJ2hpZGUnKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dvdXQnKXtcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9naW4nKXtcclxuICAgICAgJChcIiNsb2dpblwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuLy8g66Gc6re47J24XHJcbiAgdGhpcy5kb0xvZ2luID0gZnVuY3Rpb24obG9naW5EYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5leHBpcmVkID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmKHZhbGlkKXtcclxuICAgICAgQXV0aC5sb2dpbihhcHAubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBhcHAubG9naW5EYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICAgICAgICAgIH0sMTAwMCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgaWYoZGF0YS5kYXRhLmV4cGlyZWQpe1xyXG4gICAgICAgICAgICBhcHAuZXhwaXJlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTsgLy8gSWYgZXJyb3Igb2NjdXJzLCByZW1vdmUgZGlzYWJsZSBsb2NrIGZyb20gZm9ybVxyXG4gICAgICBhcHAubG9hZGluZyA9IGZhbHNlOyAvLyBTdG9wIGJvb3RzdHJhcCBsb2FkaW5nIGljb25cclxuICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIERpc3BsYXkgZXJyb3IgaWYgdmFsaWQgcmV0dXJucyBmYWxzZVxyXG4gICAgfVxyXG5cclxuICB9O1xyXG5cclxuXHJcbiAgYXBwLmxvZ291dCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBzaG93TW9kYWwoJ2xvZ291dCcpO1xyXG4gIH07XHJcblxyXG4gIGFwcC5yZXNlbmQgPSBmdW5jdGlvbigpe1xyXG4gICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgJHN0YXRlLmdvKCdyZXNlbmQnKTtcclxuICAgICAgYXBwLmV4cGlyZWQgPSBmYWxzZTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXR1c2VybmFtZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0dXNlcm5hbWUnKTtcclxuICAgIH0sNTAwKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZXRwYXNzd29yZCA9IGZ1bmN0aW9uKCl7XHJcbiAgICBoaWRlTW9kYWwoJ2xvZ2luJyk7XHJcbiAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAkc3RhdGUuZ28oJ3Jlc2V0cGFzc3dvcmQnKTtcclxuICAgIH0sNTAwKTtcclxuXHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnb3JkZXJDb250cm9sbGVycycsWydvcmRlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdyZWFkT3JkZXJDdHJsJywgZnVuY3Rpb24gKCRzdGF0ZVBhcmFtcywgJHN0YXRlLCAkd2luZG93LCBPcmRlciwgJHNjb3BlKSB7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIHVzZXJfaWQgPSAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQ7XHJcblxyXG4gIGFwcC5nZXRJdGVtRmFpbCA9IGZhbHNlO1xyXG5cclxuICBhcHAuY2FzaFJlY2VpcHQgPSB0cnVlO1xyXG4gIGlmKGFwcC5jYXNoUmVjZWlwdCl7XHJcbiAgICBhcHAuZ2V0Q2FzaFJlY2VpcHQgPSB0cnVlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhcHAuZ2V0Q2FzaFJlY2VpcHQgPSBmYWxzZTtcclxuICB9XHJcblxyXG5cclxuICB0aGlzLnJlYWRBZGRyZXNzID0gZnVuY3Rpb24oKXtcclxuICAgIC8vbG9hZO2VqOyImOulvCDsnbTsmqntlZjsl6wgY29yZeyKpO2BrOumve2KuOydmCDroZzrlKnsnbQg7JmE66OM65CcIO2bhCwg7Jqw7Y6467KI7Zi4IOyEnOu5hOyKpOulvCDsi6Ttlontlanri4jri6QuXHJcbiAgICBkYXVtLnBvc3Rjb2RlLmxvYWQoZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmFkZHJlc3NEZXRhaWwgPSAnJztcclxuICAgICAgICBuZXcgZGF1bS5Qb3N0Y29kZSh7XHJcbiAgICAgICAgICAgIG9uY29tcGxldGU6IGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICBhcHAuZGVsaURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICBzaWd1bmd1X2NvZGU6IGRhdGEuc2lndW5ndUNvZGUsXHJcbiAgICAgICAgICAgICAgICBqaWJ1bl9hZGRyZXNzOiBkYXRhLmppYnVuQWRkcmVzcyxcclxuICAgICAgICAgICAgICAgIHJvYWRfYWRkcmVzczogZGF0YS5yb2FkQWRkcmVzc1xyXG4gICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5vcGVuKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgfTtcclxuXHJcbiAgT3JkZXIucmVhZE9yZGVyQW5kRGVsaSgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuLy8g65Ox66Gd65CcIOuwsOyGoeyngCDsoJXrs7TqsIAg7JeG7J2EIOuVjFxyXG4gICAgICBpZihkYXRhLmRhdGEucmVzdWx0Lmxlbmd0aD09PTApe1xyXG4gICAgICAgIGFwcC5kZWxpdmVyeSA9IGZhbHNlO1xyXG4gICAgICAgIE9yZGVyLnJlYWRPcmRlcih1c2VyX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgdmFyIGl0ZW1QcmljZSA9IFtdO1xyXG4gICAgICAgICAgYXBwLmFsbEl0ZW1QcmljZSA9IDA7XHJcbiAgICAgICAgICBhcHAub3JkZXJEYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICAgIGZvcihpPTA7IGk8YXBwLm9yZGVyRGF0YS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGl0ZW1QcmljZVtpXSA9IGFwcC5vcmRlckRhdGFbaV0ucHJpY2UgKiBhcHAub3JkZXJEYXRhW2ldLmFtb3VudDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGZvcihpPTA7aTxpdGVtUHJpY2UubGVuZ3RoO2krKyl7XHJcbiAgICAgICAgICAgIGFwcC5hbGxJdGVtUHJpY2UgPSBhcHAuYWxsSXRlbVByaWNlICsgaXRlbVByaWNlW2ldO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbi8vIOuTseuhneuQnCDrsLDshqHsp4Ag7KCV67O06rCAIOyeiOydhCDrlYxcclxuICAgICAgZWxzZSB7XHJcbiAgICAgIHZhciBpdGVtUHJpY2UgPSBbXTtcclxuICAgICAgYXBwLmRlbGl2ZXJ5ID0gdHJ1ZTtcclxuICAgICAgYXBwLmFsbEl0ZW1QcmljZSA9IDA7XHJcbiAgICAgIGFwcC5vcmRlckRhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICBmb3IoaT0wOyBpPGFwcC5vcmRlckRhdGEubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGl0ZW1QcmljZVtpXSA9IGFwcC5vcmRlckRhdGFbaV0ucHJpY2UgKiBhcHAub3JkZXJEYXRhW2ldLmFtb3VudDtcclxuICAgICAgfVxyXG4gICAgICBmb3IoaT0wO2k8aXRlbVByaWNlLmxlbmd0aDtpKyspe1xyXG4gICAgICAgIGFwcC5hbGxJdGVtUHJpY2UgPSBhcHAuYWxsSXRlbVByaWNlICsgaXRlbVByaWNlW2ldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuXHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHRoaXMuY29uZmlybU9yZGVyID0gZnVuY3Rpb24oZGF0YSl7XHJcbi8vIOuTseuhneuQnCDrsLDshqHsp4DqsIAg7J6I7J2EIOuVjCBwdXRcclxuICAgIHZhciBkZWxpRGF0YSA9ICcnO1xyXG4gICAgdmFyIHJlY2VpcHREYXRhID0gJyc7XHJcbiAgICBpZihhcHAuZGVsaXZlcnkpe1xyXG4vLyAgICDrs4Dqsr3sgqztla0g7JeG7J2MXHJcbiAgICAgIGlmKGRhdGEuZGFsaURhdGEgPT09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+uzgOqyveyCrO2VrSDsl4bsnYwnKTtcclxuICAgICAgfVxyXG4vLyDrs4Dqsr3sgqztla0g7J6I7J2MXHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIGRlbGlEYXRhID0gZGF0YS5kYWxpRGF0YTtcclxuICAgICAgICAvLyBkZWxpRGF0YS51c2VyX2lkID0gdXNlcl9pZDtcclxuICAgICAgICBPcmRlci51cGRhdGVEZWxpdmVyeShkZWxpRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcbi8vIOuTseuhneuQnCDrsLDshqHsp4DqsIAg7JeG7J2EIOuVjCBwb3N0XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkZWxpRGF0YSA9IGRhdGEuZGFsaURhdGE7XHJcbiAgICAgIHJlY2VpcHREYXRhID0gZGF0YS5yZWNlaXB0RGF0YTtcclxuICAgICAgT3JkZXIuY3JlYXRlRGVsaXZlcnkoZGVsaURhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHRoaXMuZGVsZXRlID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIHZhciBpdGVtX2lkID0gZGF0YS5pdGVtX2lkO1xyXG4gICAgT3JkZXIuZGVsZXRlT3JkZXIoaXRlbV9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICB9ZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbiAgfSlcclxuXHJcbi5jb250cm9sbGVyKCdiYXNrZXRDdHJsJywgZnVuY3Rpb24gKE9yZGVyLCAkd2luZG93LCAkc3RhdGUpIHtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBhcHAuYW1vdW50ID0gMTtcclxuICBhcHAuZGF0YSA9IHtcclxuICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgIHtpZDogMCwgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9IC8vVGhpcyBzZXRzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBzZWxlY3QgaW4gdGhlIHVpXHJcbiAgIH07XHJcblxyXG4gICB0aGlzLmRlbGV0ZSA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgIHZhciBiYXNrZXRfaWQgPSBkYXRhLmJhc2tldF9pZDtcclxuICAgICBPcmRlci5kZWxldGVCYXNrZXQoYmFza2V0X2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcblxyXG4gICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICB9XHJcbiAgICAgfSk7XHJcbiAgIH07XHJcblxyXG4gIHRoaXMubWFrZUJhc2tldCA9IGZ1bmN0aW9uKCl7XHJcbiAgfTtcclxuXHJcbiAgT3JkZXIucmVhZEJhc2tldCgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgYXBwLmJhc2tldERhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICB2YXIgaTtcclxuICAgICAgdmFyIGtpbmQgPSBbXTtcclxuICAgICAgdmFyIHRlbXAgPSBbXTtcclxuICAgICAgdmFyIHNlbGVjdERhdGE7XHJcbiAgICAgIGZvcihpPTA7IGkgPCBhcHAuYmFza2V0RGF0YS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICBraW5kW2ldID0gYXBwLmJhc2tldERhdGFbaV0ua2luZC5zcGxpdCgnLCcpO1xyXG4gICAgICAgICAgdGVtcFtpXSA9IGFwcC5iYXNrZXREYXRhW2ldLnByaWNlLnNwbGl0KCcsJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZvcihpPTA7IGk8a2luZC5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgYXBwLmRhdGFbaV0gPSB7XHJcbiAgICAgICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgICAgICB7aWQ6IDAsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAgICBdLFxyXG4gICAgICAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAwLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgICAgICB9O1xyXG5cclxuICAgICAgICBmb3Ioaj0wO2o8a2luZFtpXS5sZW5ndGg7aisrKXtcclxuICAgICAgICAgIGFwcC5kYXRhW2ldLmF2YWlsYWJsZU9wdGlvbnNbaisxXSA9IHtcclxuICAgICAgICAgICAgbmFtZToga2luZFtpXVtqXSxcclxuICAgICAgICAgICAgaWQ6IE51bWJlcih0ZW1wW2ldW2pdKVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2VtYWlsQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdlbWFpbEN0cmwnLCBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIFVzZXIuYWN0aXZlQWNjb3VudCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuc3VjY2Vzc01zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICB9LDIwMDApO1xyXG4gICAgfWVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgIH0sMjAwMCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVzZW5kQ3RybCcsIGZ1bmN0aW9uKFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5jaGVja0NyZWRlbnRpYWxzID0gZnVuY3Rpb24obG9naW5EYXRhKXtcclxuICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgVXNlci5jaGVja0NyZWRlbnRpYWxzKHRoaXMubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgVXNlci5yZXNlbmRMaW5rKGFwcC5sb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICB9LDIwMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9ZWxzZSB7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigndXNlcm5hbWVDdHJsJywgZnVuY3Rpb24oVXNlciwgJHRpbWVvdXQsICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5zZW5kVXNlcm5hbWUgPSBmdW5jdGlvbih1c2VyRGF0YSwgdmFsaWQpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgaWYodmFsaWQpe1xyXG4gICAgICBVc2VyLnNlbmRVc2VybmFtZShhcHAudXNlckRhdGEuZW1haWwpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOydtOuplOydvCDso7zshozqsIAg7JWE64uZ64uI64ukLic7XHJcbiAgICB9XHJcbiAgfTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdwYXNzd29yZEN0cmwnLCBmdW5jdGlvbihVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBhcHAuc2VuZFBhc3N3b3JkID0gZnVuY3Rpb24ocmVzZXREYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBpZih2YWxpZCl7XHJcbiAgICAgIFVzZXIuc2VuZFBhc3N3b3JkKGFwcC5yZXNldERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOyVhOydtOuUlOqwgCDslYTri5nri4jri6QuJztcclxuICAgIH1cclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3Jlc2V0Q3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgJHNjb3BlLCBVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICBhcHAuaGlkZSA9IHRydWU7IC8vIEhpZGUgZm9ybSB1bnRpbCB0b2tlbiBjYW4gYmUgdmVyaWZpZWQgdG8gYmUgdmFsaWRcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBjaGVjayBpZiB0b2tlbiBpcyB2YWxpZCBhbmQgZ2V0IHRoZSB1c2VyJ3MgaW5mbyBmcm9tIGRhdGFiYXNlIChydW5zIG9uIHBhZ2UgbG9hZClcclxuICAgIFVzZXIucmVzZXRQYXNzd29yZCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHVzZXIgd2FzIHJldHJpZXZlZFxyXG4gICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICBhcHAuaGlkZSA9IGZhbHNlOyAvLyBTaG93IGZvcm1cclxuICAgICAgICAgICAgJHNjb3BlLmFsZXJ0ID0gJ2FsZXJ0IGFsZXJ0LXN1Y2Nlc3MnOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gJ+yDiOuhnOyatCDruYTrsIDrsojtmLjrpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIExldCB1c2VyIGtub3cgdGhleSBjYW4gZW50ZXIgbmV3IHBhc3N3b3JkXHJcbiAgICAgICAgICAgICRzY29wZS51c2VybmFtZSA9IGRhdGEuZGF0YS51c2VyWzBdLnVzZXJuYW1lOyAvLyBTYXZlIHVzZXJuYW1lIGluIHNjb3BlIGZvciB1c2UgaW4gc2F2ZVBhc3N3b3JkKCkgZnVuY3Rpb25cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTsgLy8gR3JhYiBlcnJvciBtZXNzYWdlIGZyb20gSlNPTiBvYmplY3RcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBzYXZlIHVzZXIncyBuZXcgcGFzc3dvcmQgdG8gZGF0YWJhc2VcclxuICAgIGFwcC5zYXZlUGFzc3dvcmQgPSBmdW5jdGlvbihyZWdEYXRhLCB2YWxpZCwgY29uZmlybWVkKSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7IC8vIENsZWFyIGVycm9yTXNnIHdoZW4gdXNlciBzdWJtaXRzXHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlOyAvLyBEaXNhYmxlIGZvcm0gd2hpbGUgcHJvY2Vzc2luZ1xyXG4gICAgICAgIGFwcC5sb2FkaW5nID0gdHJ1ZTsgLy8gRW5hYmxlIGxvYWRpbmcgaWNvblxyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiBmb3JtIGlzIHZhbGlkIGFuZCBwYXNzd29yZHMgbWF0Y2hcclxuICAgICAgICBpZiAodmFsaWQgJiYgY29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgIGFwcC5yZWdEYXRhLnVzZXJuYW1lID0gJHNjb3BlLnVzZXJuYW1lOyAvLyBHcmFiIHVzZXJuYW1lIGZyb20gJHNjb3BlXHJcblxyXG4gICAgICAgICAgICAvLyBSdW4gZnVuY3Rpb24gdG8gc2F2ZSB1c2VyJ3MgbmV3IHBhc3N3b3JkIHRvIGRhdGFiYXNlXHJcbiAgICAgICAgICAgIFVzZXIuc2F2ZVBhc3N3b3JkKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBwYXNzd29yZCB3YXMgc2F2ZWQgdG8gZGF0YWJhc2VcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1zdWNjZXNzJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2ZlOuptOycvOuhnCDsnbTrj5ntlanri4jri6QuJzsgLy8gR3JhYiBzdWNjZXNzIG1lc3NhZ2UgZnJvbSBKU09OIG9iamVjdCBhbmQgcmVkaXJlY3RcclxuICAgICAgICAgICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBsb2dpbiBwYWdlIGFmdGVyIDIwMDAgbWlsbGlzZWNvbmRzICgyIHNlY29uZHMpXHJcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7IC8vIEdyYWIgZXJyb3IgbWVzc2FnZSBmcm9tIEpTT04gb2JqZWN0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1kYW5nZXInOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC4nOyAvLyBMZXQgdXNlciBrbm93IGZvcm0gaXMgbm90IHZhbGlkXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCd1c2VyQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdyZWdDdHJsJywgZnVuY3Rpb24gKCAkaHR0cCwgJGxvY2F0aW9uLCAkdGltZW91dCwgVXNlciwgQXV0aCwgJHN0YXRlKSB7XHJcbiAgICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICAgIHRoaXMucmVnU3RlcDEgPSBmdW5jdGlvbihyZWdEYXRhKXtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICBpZighcmVnRGF0YSl7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7JW96rSA7JeQIOuPmeydmO2VtOyVvOunjCDtmozsm5DqsIDsnoXsnYQg7KeE7ZaJ7ZWgIOyImCDsnojsirXri4jri6QuJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYoKHJlZ0RhdGEudGVybXMpICYmIChyZWdEYXRhLnByaXZhY3kpKSB7XHJcbiAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9ICfslb3qtIDsl5Ag7ISx6rO17KCB7Jy866GcIOuPmeydmO2VmOyFqOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwLnJlZ2lzdGVyU3RlcDInKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7JW96rSA7JeQIOuPmeydmO2VtOyVvOunjCDtmozsm5DqsIDsnoXsnYQg7KeE7ZaJ7ZWgIOyImCDsnojsirXri4jri6QuJztcclxuICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgIH07XHJcblxyXG4gICAgLy8g7ZqM7JuQ6rCA7J6FXHJcbiAgICAgIHRoaXMucmVnU3RlcDIgPSBmdW5jdGlvbihyZWdEYXRhLCB2YWxpZCwgY29uZmlybWVkKXtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwLnJlZ2lzdGVyU3RlcDMnKTtcclxuICAgICAgICAvLyBpZih2YWxpZCAmJiBjb25maXJtZWQpe1xyXG4gICAgICAgIC8vICAgVXNlci5jcmVhdGUoYXBwLnJlZ0RhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgLy8gICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAvLyAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIC8vICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgLy8gICAgICAgQXV0aC5sb2dpbihhcHAucmVnRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAvLyAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAvLyAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAvLyAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAvLyAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJHN0YXRlLmdvKCdhcHAnKTtcclxuICAgICAgICAvLyAgICAgICAgICAgfSwxMDAwKTtcclxuICAgICAgICAvLyAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAvLyAgICAgICAgICAgaWYoZGF0YS5kYXRhLmV4cGlyZWQpe1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFwcC5leHBpcmVkID0gdHJ1ZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIC8vICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIC8vICAgICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgICAgfSk7XHJcbiAgICAgICAgLy8gICAgIH1lbHNlIHtcclxuICAgICAgICAvLyAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAvLyAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgfSk7XHJcbiAgICAgICAgLy9cclxuICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7IC8vIElmIGVycm9yIG9jY3VycywgcmVtb3ZlIGRpc2FibGUgbG9jayBmcm9tIGZvcm1cclxuICAgICAgICAvLyAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgYm9vdHN0cmFwIGxvYWRpbmcgaWNvblxyXG4gICAgICAgIC8vICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIERpc3BsYXkgZXJyb3IgaWYgdmFsaWQgcmV0dXJucyBmYWxzZVxyXG4gICAgICAgIC8vIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIO2ajOybkOqwgOyehVxyXG4gICAgICAgIHRoaXMucmVnU3RlcDMgPSBmdW5jdGlvbihyZWdEYXRhLCB2YWxpZCwgY29uZmlybWVkKXtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGlmKHZhbGlkICYmIGNvbmZpcm1lZCl7XHJcbiAgICAgICAgICAgIFVzZXIuY3JlYXRlKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgQXV0aC5sb2dpbihhcHAucmVnRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSwxMDAwKTtcclxuICAgICAgICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5leHBpcmVkKXtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5leHBpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTsgLy8gSWYgZXJyb3Igb2NjdXJzLCByZW1vdmUgZGlzYWJsZSBsb2NrIGZyb20gZm9ybVxyXG4gICAgICAgICAgICAgICBhcHAubG9hZGluZyA9IGZhbHNlOyAvLyBTdG9wIGJvb3RzdHJhcCBsb2FkaW5nIGljb25cclxuICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+yYrOuwlOuluCDsoJXrs7Trpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIERpc3BsYXkgZXJyb3IgaWYgdmFsaWQgcmV0dXJucyBmYWxzZVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2FkbWluSGVhZGVyJywgW2Z1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvZGlyZWN0aXZlcy9hZG1pbi9hZG1pbkhlYWRlci50cGwuaHRtbCcsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmxzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwQ3RybCA9IGN0cmxzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1dKVxyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2FkbWluTGFib3JhdG9yeScsIFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogWyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvYWRtaW4vYWRtaW5MYWJvcmF0b3J5LnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBDdHJsID0gY3RybHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfV0pXHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdmaWxlTW9kZWwnLGZ1bmN0aW9uKCRwYXJzZSl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICB2YXIgcGFyc2VkRmlsZSA9ICRwYXJzZShhdHRycy5maWxlTW9kZWwpO1xyXG4gICAgICB2YXIgcGFyc2VkZmlsZVNldHRlciA9IHBhcnNlZEZpbGUuYXNzaWduO1xyXG5cclxuICAgICAgZWxlbWVudC5iaW5kKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBwYXJzZWRmaWxlU2V0dGVyKHNjb3BlLCBlbGVtZW50WzBdLmZpbGVzWzBdKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdtYXRjaCcsZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgIGNvbnRyb2xsZXI6ZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgJHNjb3BlLmRvQ29uZmlybSA9IGZ1bmN0aW9uKHZhbHVlcyl7XHJcblxyXG4gICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbihlbGUpe1xyXG4gICAgICAgICAgaWYoJHNjb3BlLmNvbmZpcm0gPT0gZWxlKXtcclxuICAgICAgICAgICAgJHNjb3BlLmNvbmZpcm1lZCA9IHRydWU7XHJcbiAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuICAgIH0sXHJcblxyXG4gICAgbGluazpmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICBhdHRycy4kb2JzZXJ2ZSgnbWF0Y2gnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHNjb3BlLm1hdGNoZXMgPSBKU09OLnBhcnNlKGF0dHJzLm1hdGNoKTtcclxuICAgICAgICBzY29wZS5kb0NvbmZpcm0oc2NvcGUubWF0Y2hlcyk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgc2NvcGUuJHdhdGNoKCdjb25maXJtJywgZnVuY3Rpb24oKXtcclxuICAgICAgICBzY29wZS5tYXRjaGVzID0gSlNPTi5wYXJzZShhdHRycy5tYXRjaCk7XHJcbiAgICAgICAgc2NvcGUuZG9Db25maXJtKHNjb3BlLm1hdGNoZXMpO1xyXG5cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnY29tcGFueUludHJvZHVjZScsIFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogWyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvbWFpbi9jb21wYW55SW50cm9kdWNlLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBDdHJsID0gY3RybHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfV0pXHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnY29tcGFueVByaXZhY3lJbmZvcm1hdGlvbicsIFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogW2Z1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBOYW1lQ3RybCA9IHRoaXM7XHJcbiAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9kaXJlY3RpdmVzL2NvbXBhbnlJbmZvcm1hdGlvbi9jb21wYW55UHJpdmFjeUluZm9ybWF0aW9uLnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgncHJpdmFjeScsIFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogWyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvbWFpbi9wcml2YWN5LnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBDdHJsID0gY3RybHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfV0pXHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgndGVybXMnLCBbZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnRScsXHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6IFsgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9kaXJlY3RpdmVzL21haW4vdGVybXMudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFwcEN0cmwgPSBjdHJscztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XSlcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCd1c2VyUXVpY2tNZW51JywgW2Z1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIE5hbWVDdHJsID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvY29tcGFueUluZm9ybWF0aW9uL3VzZXJRdWlja01lbnUudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1dKTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbiAgICAuZGlyZWN0aXZlKCdjb250ZW50JywgW2Z1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9jb250ZW50LnRwbC5odG1sJyxcclxuICAgICAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHBDdHJsID0gY3RybHM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfV0pXHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4gICAgLmRpcmVjdGl2ZSgnZm9vdGVyJywgW2Z1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgICAgICBjb250cm9sbGVyOiBbIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgICAgICAgICB9XSxcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvZGlyZWN0aXZlcy9tYWluL2Zvb3Rlci50cGwuaHRtbCcsXHJcbiAgICAgICAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmxzKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwQ3RybCA9IGN0cmxzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1dKVxyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAgIC5kaXJlY3RpdmUoJ2hlYWRlcicsIFtmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcclxuICAgICAgICAgICAgY29udHJvbGxlcjogWyBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXBwID0gdGhpcztcclxuICAgICAgICAgICAgfV0sXHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2RpcmVjdGl2ZXMvbWFpbi9oZWFkZXIudHBsLmh0bWwnLFxyXG4gICAgICAgICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFwcEN0cmwgPSBjdHJscztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XSlcclxuIl19
