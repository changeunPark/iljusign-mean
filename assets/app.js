angular.module("app",["ui.router","ui.bootstrap","menuControllers","userControllers","mainControllers","emailControllers","managementControllers","typeControllers","orderControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),a.hashPrefix(""),a.html5Mode(!0),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/header.html"},content:{templateUrl:"/main/form.html"},"menu@app":{templateUrl:"/menues/mainMenu.html",controller:"mainMenuCtrl",controllerAs:"mainMenu"},"account@app":{templateUrl:"/main/account.html"},"contents@app":{templateUrl:"/main/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("app.user",{url:"user",views:{"contents@app":{templateUrl:"/users/partial/user.html"}}}).state("app.commerceDetail",{url:"commerce-detail",views:{"contents@app":{templateUrl:"/users/partial/commerceDetail.html"}}}).state("app.basket",{url:"basket",views:{"contents@app":{templateUrl:"/users/partial/basket.html",controller:"basketCtrl",controllerAs:"basket"}}}).state("app.category",{url:"category=:type",views:{"subMenu@app":{templateUrl:"/menues/subMenu.html"},"contents@app":{templateUrl:"/categoryes/items/form.html",controller:"getTypeItemsCtrl",controllerAs:"getTypeItems"}}}).state("app.category.show",{url:"/item:item_id",views:{"contents@app":{templateUrl:"/categoryes/items/item.html",controller:"getTypeItemCtrl",controllerAs:"getTypeItem"}}}).state("app.makeOrder",{url:"makeOrder",views:{"contents@app":{templateUrl:"/order/makeOrder.html",controller:"readOrderCtrl",controllerAs:"readOrder"}}}).state("app.confirmOrder",{url:"confirmOrder",views:{"contents@app":{templateUrl:"/order/confirmOrder.html",controller:"readOrderCtrl",controllerAs:"readOrderCtrl"}}}).state("app.board",{url:"board",views:{"contents@app":{templateUrl:"/categoryes/board/form.html"}}}).state("app.management",{url:"management",views:{"content@":{templateUrl:"/management/form.html"},"menu@app.management":{templateUrl:"/management/menu.html"}}}).state("app.management.items",{url:"/items",views:{"contents@app.management":{templateUrl:"/management/partial/items.html",controller:"itemsCtrl",controllerAs:"items"}}}).state("app.management.items.show",{url:":item_id",views:{"contents@app.management":{templateUrl:"/management/partial/item.html",controller:"itemCtrl",controllerAs:"item"}}}).state("app.management.bannerUpload",{url:"/bannerUpload",views:{"contents@app.management":{templateUrl:"/management/partial/bannerUpload.html"}}}).state("app.management.orderStatus",{url:"/orderStatus",views:{"contents@app.management":{templateUrl:"/management/partial/orderStatus.html"}}}).state("app.management.members",{url:"/members",views:{"contents@app.management":{templateUrl:"/management/partial/members.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/users/register/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/users/register/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}})}]),app.run(["$rootScope","User","$state",function(e,t,a){e.$on("$stateChangeStart",function(e,t,a,r,n,s){}),e.$on("$stateChangeError",function(e,t,r,n,s,o){a.go("app")})}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var n=e(r.fileModel),s=n.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("adminServices",[]).factory("Admin",["$http",function(e){return adminFactory={},adminFactory.createType=function(t){return e.post("/api/item_type",t)},adminFactory.readType=function(){return e.get("/api/item_type")},adminFactory.readAristCrop=function(t){return e.post("/api/createCropImage",t)},adminFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},adminFactory.createItem=function(t){return e.post("/api/item",t)},adminFactory.readItems=function(){return e.get("/api/item")},adminFactory.readItem=function(t){return e.get("/api/item/"+t)},adminFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return console.log(e),t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("menuServices",[]).factory("Menu",["$http",function(e){return menuFactory={},menuFactory.readMainMenu=function(){return e.get("/api/menu")},menuFactory.readSubMenu=function(t){return e.get("/api/menu/"+t)},menuFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.getPermission=function(){return e.get("/api/permission")},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,n,s,o,i,l,d){var c=this;c.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),n.$on("$stateChangeStart",function(){u?e.isLoggedIn()?(c.isLoggedIn=!0,c.loadme=!0,e.getUser().then(function(e){c.user=e.data,c.loadme=!0,l.getPermission().then(function(e){e.data.success?"admin"===e.data.permission?(c.authorized=!0,c.loadme=!0):"artist"===e.data.permission?(c.permission=!0,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0):(c.permission=!1,c.authorized=!1,c.loadme=!0)})})):(c.user=!1,c.isLoggedIn=!1,c.loadme=!0):u()});var u=function(){if(e.isLoggedIn()){c.checkSession=!0;var t=i(function(){var e=o.localStorage.getItem("token");if(null===e)i.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(o.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(m("expired"),i.cancel(t))}},2e3)}};u(),c.renewSession=function(){c.choiceMade=!0,l.renewSession(c.user.username).then(function(e){e.data.success?(d.setToken(e.data.token),u(),p("expired")):(c.ModalBody=e.data.message,p("expired"))})},c.endSession=function(){c.choiceMade=!0,p("expired"),t(function(){m("logout")},500)};var m=function(a){c.choiceMade=!1,c.modalHeader=void 0,c.modalBody=void 0,c.hideButton=!1,"expired"===a?(c.modalHeader="Timeout Warning",c.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(c.hideButton=!0,c.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),c.isLoggedIn=!1,p("logout"),r.reload()},1e3)):"login"===a&&$("#login").modal({backdrop:"static"}),t(function(){c.choiceMade||p("logout")},2e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e&&$("#login").modal("hide")};this.doLogin=function(a,n){c.errorMsg=!1,c.expired=!1,c.disabled=!0,n?e.login(c.loginData).then(function(e){e.data.success?(c.disabled=!0,c.successMsg=e.data.message,t(function(){p("login"),c.loginData=null,c.isLoggedIn=!0,u(),r.reload()},1e3)):e.data.expired?(c.expired=!0,c.disabled=!0,c.errorMsg=e.data.message):(c.disabled=!1,c.errorMsg=e.data.message)}):(c.disabled=!1,c.loading=!1,c.errorMsg="올바른 정보를 입력해주세요.")},c.login=function(){c.successMsg=!1,c.errorMsg=!1,c.disabled=!1,m("login")},c.logout=function(){m("logout")},c.resend=function(){p("login"),t(function(){r.go("resend"),c.expired=!1},500)},c.resetusername=function(){p("login"),t(function(){r.go("resetusername")},500)},c.resetpassword=function(){p("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("managementControllers",["adminServices","menuServices"]).controller("itemTypeCtrl",["Admin","$state",function(e,t){var a=this;e.readType().then(function(e){e.data.success?a.typeDatas=e.data.result:a.errorMsg=e.data.message})}]).controller("createTypeCtrl",["Admin","$state","$http","Menu",function(e,t,a,r){var n=this;n.kindValue=[],n.findList=[],n.type_tiny=[],n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},r.readMainMenu().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)n.data.availableOptions[i+1]={name:t[i].name,id:t[i].category_id}}else n.errorMsg=e.data.message}),this.createType=function(a){n.errorMsg=!1,n.typeData={category:n.data.selectedOption.id,type1:a.code1,type1_description:a.type1,type2:a.code2,type2_description:a.type2,kind:n.type_tiny.toString()},e.createType(n.typeData).then(function(e){e.data.success?(n.success=e.data.message,t.reload()):n.errorMsg=e.data.message})},this.addLine=function(){n.findList.push({find:n.kindValue}),n.type_tiny.push(n.kindValue)}}]).controller("itemsCtrl",["Admin","$state",function(e,t){var a=this;e.readItems().then(function(e){e.data.success&&(a.itemsData=e.data.result)})}]).controller("itemCtrl",["Admin","$stateParams","$scope",function(e,t,a){var r=this,n=t.item_id;r.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.readType().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)r.data.availableOptions[i+1]={name:t[i].type1_description+"-"+t[i].type2_description,id:t[i].item_type_id}}else r.errorMsg=e.data.message}),e.readItem(n).then(function(e){e.data.success&&(r.itemData=e.data.result,r.data.selectedOption={id:r.itemData.type})})}]).controller("itemUploadCtrl",["$http","$timeout","$scope","Admin","$state","$window",function(e,t,a,r,n,s){function o(e){var t=e.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);return 3!==t.length?new Error("Invalid input string"):{type:t[1],data:t[2]}}var l=this;l.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},r.readType().then(function(e){if(e.data.success){var t=e.data.result;for(i=0;i<t.length;i++)l.data.availableOptions[i+1]={name:t[i].type1_description+"-"+t[i].type2_description,id:t[i].item_type_id}}else l.errorMsg=e.data.message}),this.file={},this.mainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),l.mainThumbnail={},l.mainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),l.mainThumbnail={}},this.readPhoto=function(){a.$emit("LOAD"),l.mainPhoto=!1,l.disabled=!0;var t=new FormData;t.append("myfile",l.file.upload),e.post("/api/createPhotoImage/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.mainPhoto=!0,l.disabled=!1,l.mainImagePath=e.data.item_path,l.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),l.disabled=!1,l.file={})})},this.explainPhotoChanged=function(e){if(a.$emit("LOAD"),e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var r=e[0],n=new FileReader;n.readAsDataURL(r),n.onload=function(e){t(function(){a.$emit("UNLOAD"),l.explainThumbnail={},l.explainThumbnail.dataUrl=e.target.result})}}else a.$emit("UNLOAD"),l.explainThumbnail={}},this.readPhotoExplain=function(){a.$emit("LOAD"),l.explainPhoto=!1,l.disabled=!0;var t=new FormData;t.append("myfile",l.file.upload),e.post("/api/createPhotoExplain/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.explainPhoto=!0,l.disabled=!1,l.explainImagePath=e.data.item_path,l.file={}):(a.$emit("UNLOAD"),s.alert(e.data.message),l.disabled=!1,l.file={})})},l.myImage="",l.myCroppedImage="";var d=function(e){a.$emit("LOAD");var t=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){a.$apply(function(t){t.$emit("UNLOAD"),l.myImage=e.target.result})},r.readAsDataURL(t)};angular.element(document.querySelector("#fileInput")).on("change",d),this.readCropImage=function(e){if(a.$emit("LOAD"),l.thumbnail=!1,l.disabled=!0,""===e.base64Url||null===e.base64Url||void 0===e.base64Url)l.disabled=!1;else{a.$emit("UNLOAD");var t=o(a.myCroppedImage);r.readAristCrop(t).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.alert(e.data.message),l.thumbnail=!0,l.disabled=!1,l.thumbnailPath=e.data.filePath):(a.$emit("UNLOAD"),l.disabled=!1)})}},this.createPhoto=function(e){a.$emit("LOAD"),void 0===e||null===e||""===e?(s.alert("빈칸을 모두 입력해주세요."),l.disabled=!1,a.$emit("UNLOAD")):"0"===l.data.selectedOption.id?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 타입을 선택해주세요.")):void 0===l.mainImagePath||null===l.mainImagePath||""===l.mainImagePath?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 이미지를 입력해주세요.")):void 0===e.title||null===e.title||""===e.title?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 제목를 입력해주세요.")):void 0===l.explainImagePath||null===l.explainImagePath||""===l.explainImagePath?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("상품 설명 이미지를 업로드해주세요.")):void 0===l.thumbnailPath||null===l.thumbnailPath||""===l.thumbnailPath?(a.$emit("UNLOAD"),l.disabled=!1,s.alert("썸네일 이미지를 업로드해주세요.")):(l.uploadData={title:e.title,price:e.price,type:l.data.selectedOption.id,thumbnail:l.thumbnailPath,explain:l.explainImagePath,image:l.mainImagePath},r.createItem(l.uploadData).then(function(e){e.data.success?(a.$emit("UNLOAD"),l.disabled=!0,s.alert(e.data.message),n.reload()):(a.$emit("UNLOAD"),l.disabled=!1,s.alert(e.data.message))}))}}]),angular.module("menuControllers",["menuServices"]).controller("mainMenuCtrl",["Menu",function(e){var t=this;e.readMainMenu().then(function(e){e.data.success?t.mainMenues=e.data.result:t.errorMsg=e.data.message})}]),angular.module("orderControllers",[]).controller("readOrderCtrl",["$stateParams","$http","$state","$window",function(e,t,a,r){var n=this;t.get("/api/makeOrder").then(function(e){e.data.success&&(n.orderData=e.data.result)}),this.confirmOrder=function(){a.go("app.confirmOrder")}}]).controller("basketCtrl",["$http","$window",function(e,t){var a=this;a.amount=1,this.plus=function(){a.amount++},this.minus=function(){a.amount<=0?(t.alert("올바른 수량을 입력해주세요."),a.amount=1):a.amount--},e.get("/api/basket").then(function(e){a.errorMsg=!1,e.data.success?a.basketData=e.data.result:a.errorMsg=e.data.message})}]),angular.module("typeControllers",[]).controller("getTypeItemsCtrl",["$stateParams","$http",function(e,t){var a=this,r=e.type;t.get("/api/item_type/"+r).then(function(e){e.data.success?a.itemsData=e.data.result:a.errorMsg=e.data.message})}]).controller("getTypeItemCtrl",["Admin","$stateParams","$window","$state","$http",function(e,t,a,r,n){var s=this,o=t.item_id;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},s.amount=1,this.plus=function(){s.amount++},this.minus=function(){s.amount<=0?(a.alert("올바른 수량을 입력해주세요."),s.amount=1):s.amount--},this.createBasket=function(e){var t={item_id:e.item_id,amount:e.amount};n.post("/api/basket",t).then(function(e){e.data.success,a.alert(e.data.message)})},this.createOrder=function(e){var t={item_id:o,amount:e.amount,kindOf:e.kindOf.name,item_type_id:e.item_type_id};n.post("/api/makeOrder",t).then(function(e){e.data.success?(s.successMsg=e.data.message,r.go("app.makeOrder")):s.errorMsg=e.data})},e.readItem(o).then(function(e){if(e.data.success){var t=e.data.result.kind.split(",");for(s.itemData=e.data.result,i=0;i<t.length;i++)s.data.availableOptions[i+1]={name:t[i],id:i+1}}else s.errorMsg=e.data.message})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var n=this;t.activeAccount(e.token).then(function(e){n.successMsg=!1,n.errorMsg=!1,e.data.success?(n.disabled=!0,n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(n.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(n,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,n){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,o,i){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,o&&i?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){n.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,n,s){var o=this;this.regStep1=function(e){o.errorMsg=!1,e?e.terms&&e.privacy?(o.successMsg="약관에 성공적으로 동의하셨습니다.",o.disabled=!0,s.go("registerStep2")):(o.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",o.disabled=!1):o.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,i){o.errorMsg=!1,o.disabled=!0,t&&i?r.create(o.regData).then(function(e){e.data.success?(o.disabled=!0,o.successMsg=e.data.message,n.login(o.regData).then(function(e){e.data.success?(o.disabled=!0,o.successMsg=e.data.message,a(function(){s.go("app")},1e3)):e.data.expired?(o.expired=!0,o.disabled=!0,o.errorMsg=e.data.message):(o.disabled=!1,o.errorMsg=e.data.message)})):(o.disabled=!1,o.errorMsg=e.data.message)}):(o.disabled=!1,o.loading=!1,o.errorMsg="올바른 정보를 입력해주세요.")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
